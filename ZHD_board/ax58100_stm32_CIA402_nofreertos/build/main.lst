ARM GAS  /tmp/ccX7IMNI.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_DMA_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_DMA_Init:
  26              	.LFB134:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** #include "esc.h"
  26:Core/Src/main.c **** #include "ecat_slv.h"
  27:Core/Src/main.c **** #include "ecatapp.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccX7IMNI.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  49:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_tx;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_DMA_Init(void);
  59:Core/Src/main.c **** static void MX_SPI2_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** void ecatapp_loop(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   // stack in mixed mode
  69:Core/Src/main.c ****   if (sync0_irq_flag)
  70:Core/Src/main.c ****   {
  71:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED2_Pin, GPIO_PIN_SET);
  72:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
  73:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
  74:Core/Src/main.c ****     ESC_updateALevent();
  75:Core/Src/main.c ****     DIG_process(DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
  76:Core/Src/main.c ****     sync0_irq_flag = 0;
  77:Core/Src/main.c ****   }
  78:Core/Src/main.c ****   if (pdi_irq_flag)
  79:Core/Src/main.c ****   {
  80:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
  81:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED1_Pin, GPIO_PIN_SET);
  82:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
  83:Core/Src/main.c ****     ESC_updateALevent();
  84:Core/Src/main.c ****     if (ESCvar.dcsync)
  85:Core/Src/main.c ****     {
  86:Core/Src/main.c ****       DIG_process(DIG_PROCESS_OUTPUTS_FLAG);
  87:Core/Src/main.c ****     }
  88:Core/Src/main.c ****     else
ARM GAS  /tmp/ccX7IMNI.s 			page 3


  89:Core/Src/main.c ****     {
  90:Core/Src/main.c ****       DIG_process(DIG_PROCESS_OUTPUTS_FLAG | DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
  91:Core/Src/main.c ****     }
  92:Core/Src/main.c ****     pdi_irq_flag = 0;
  93:Core/Src/main.c ****   }
  94:Core/Src/main.c ****   else
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
  97:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
  98:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
  99:Core/Src/main.c ****     ecat_slv_poll();
 100:Core/Src/main.c ****     DIG_process(DIG_PROCESS_WD_FLAG);
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** /* USER CODE END 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /**
 106:Core/Src/main.c ****  * @brief  The application entry point.
 107:Core/Src/main.c ****  * @retval int
 108:Core/Src/main.c ****  */
 109:Core/Src/main.c **** int main(void)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 118:Core/Src/main.c ****   HAL_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Initialize all configured peripherals */
 132:Core/Src/main.c ****   MX_GPIO_Init();
 133:Core/Src/main.c ****   MX_DMA_Init();
 134:Core/Src/main.c ****   MX_SPI2_Init();
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****   ecatapp_init();
 137:Core/Src/main.c ****   // HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 138:Core/Src/main.c ****   /* USER CODE END 2 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   int led = 0;
 143:Core/Src/main.c ****   while (1)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     /* USER CODE END WHILE */
ARM GAS  /tmp/ccX7IMNI.s 			page 4


 146:Core/Src/main.c ****     if (led == 1)
 147:Core/Src/main.c ****     {
 148:Core/Src/main.c ****       HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 149:Core/Src/main.c ****       led = 0;
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c ****     else if (led == 0)
 152:Core/Src/main.c ****     {
 153:Core/Src/main.c ****       HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 154:Core/Src/main.c ****       led = 1;
 155:Core/Src/main.c ****     }
 156:Core/Src/main.c ****     
 157:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 158:Core/Src/main.c ****     ecatapp_loop();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****  * @brief System Clock Configuration
 165:Core/Src/main.c ****  * @retval None
 166:Core/Src/main.c ****  */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 173:Core/Src/main.c ****    */
 174:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 175:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 178:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 179:Core/Src/main.c ****    */
 180:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 188:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 194:Core/Src/main.c ****    */
 195:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 196:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 202:Core/Src/main.c ****   {
ARM GAS  /tmp/ccX7IMNI.s 			page 5


 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****  * @brief SPI2 Initialization Function
 209:Core/Src/main.c ****  * @param None
 210:Core/Src/main.c ****  * @retval None
 211:Core/Src/main.c ****  */
 212:Core/Src/main.c **** static void MX_SPI2_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 222:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 223:Core/Src/main.c ****   hspi2.Instance = SPI2;
 224:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 225:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 226:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 227:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 228:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 229:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 230:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 231:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 232:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 233:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 234:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 235:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****  * Enable DMA controller clock
 246:Core/Src/main.c ****  */
 247:Core/Src/main.c **** static void MX_DMA_Init(void)
 248:Core/Src/main.c **** {
  28              		.loc 1 248 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* DMA controller clock enable */
 251:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
  35              		.loc 1 251 3 view .LVU1
ARM GAS  /tmp/ccX7IMNI.s 			page 6


  36              	.LBB4:
  37              		.loc 1 251 3 view .LVU2
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
  40              		.loc 1 251 3 view .LVU3
  41 0006 064B     		ldr	r3, .L3
  42 0008 1A6B     		ldr	r2, [r3, #48]
  43 000a 42F40012 		orr	r2, r2, #2097152
  44 000e 1A63     		str	r2, [r3, #48]
  45              		.loc 1 251 3 view .LVU4
  46 0010 1B6B     		ldr	r3, [r3, #48]
  47 0012 03F40013 		and	r3, r3, #2097152
  48 0016 0193     		str	r3, [sp, #4]
  49              		.loc 1 251 3 view .LVU5
  50 0018 019B     		ldr	r3, [sp, #4]
  51              	.LBE4:
  52              		.loc 1 251 3 view .LVU6
 252:Core/Src/main.c **** }
  53              		.loc 1 252 1 is_stmt 0 view .LVU7
  54 001a 02B0     		add	sp, sp, #8
  55              		.cfi_def_cfa_offset 0
  56              		@ sp needed
  57 001c 7047     		bx	lr
  58              	.L4:
  59 001e 00BF     		.align	2
  60              	.L3:
  61 0020 00380240 		.word	1073887232
  62              		.cfi_endproc
  63              	.LFE134:
  65              		.section	.text.MX_GPIO_Init,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MX_GPIO_Init:
  72              	.LFB135:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****  * @brief GPIO Initialization Function
 256:Core/Src/main.c ****  * @param None
 257:Core/Src/main.c ****  * @retval None
 258:Core/Src/main.c ****  */
 259:Core/Src/main.c **** static void MX_GPIO_Init(void)
 260:Core/Src/main.c **** {
  73              		.loc 1 260 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 40
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  78              		.cfi_def_cfa_offset 20
  79              		.cfi_offset 4, -20
  80              		.cfi_offset 5, -16
  81              		.cfi_offset 6, -12
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 8BB0     		sub	sp, sp, #44
  85              		.cfi_def_cfa_offset 64
ARM GAS  /tmp/ccX7IMNI.s 			page 7


 261:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  86              		.loc 1 261 3 view .LVU9
  87              		.loc 1 261 20 is_stmt 0 view .LVU10
  88 0004 0024     		movs	r4, #0
  89 0006 0594     		str	r4, [sp, #20]
  90 0008 0694     		str	r4, [sp, #24]
  91 000a 0794     		str	r4, [sp, #28]
  92 000c 0894     		str	r4, [sp, #32]
  93 000e 0994     		str	r4, [sp, #36]
 262:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 263:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 266:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  94              		.loc 1 266 3 is_stmt 1 view .LVU11
  95              	.LBB5:
  96              		.loc 1 266 3 view .LVU12
  97 0010 0194     		str	r4, [sp, #4]
  98              		.loc 1 266 3 view .LVU13
  99 0012 304B     		ldr	r3, .L7
 100 0014 1A6B     		ldr	r2, [r3, #48]
 101 0016 42F08002 		orr	r2, r2, #128
 102 001a 1A63     		str	r2, [r3, #48]
 103              		.loc 1 266 3 view .LVU14
 104 001c 1A6B     		ldr	r2, [r3, #48]
 105 001e 02F08002 		and	r2, r2, #128
 106 0022 0192     		str	r2, [sp, #4]
 107              		.loc 1 266 3 view .LVU15
 108 0024 019A     		ldr	r2, [sp, #4]
 109              	.LBE5:
 110              		.loc 1 266 3 view .LVU16
 267:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 111              		.loc 1 267 3 view .LVU17
 112              	.LBB6:
 113              		.loc 1 267 3 view .LVU18
 114 0026 0294     		str	r4, [sp, #8]
 115              		.loc 1 267 3 view .LVU19
 116 0028 1A6B     		ldr	r2, [r3, #48]
 117 002a 42F00402 		orr	r2, r2, #4
 118 002e 1A63     		str	r2, [r3, #48]
 119              		.loc 1 267 3 view .LVU20
 120 0030 1A6B     		ldr	r2, [r3, #48]
 121 0032 02F00402 		and	r2, r2, #4
 122 0036 0292     		str	r2, [sp, #8]
 123              		.loc 1 267 3 view .LVU21
 124 0038 029A     		ldr	r2, [sp, #8]
 125              	.LBE6:
 126              		.loc 1 267 3 view .LVU22
 268:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 127              		.loc 1 268 3 view .LVU23
 128              	.LBB7:
 129              		.loc 1 268 3 view .LVU24
 130 003a 0394     		str	r4, [sp, #12]
 131              		.loc 1 268 3 view .LVU25
 132 003c 1A6B     		ldr	r2, [r3, #48]
 133 003e 42F00102 		orr	r2, r2, #1
 134 0042 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccX7IMNI.s 			page 8


 135              		.loc 1 268 3 view .LVU26
 136 0044 1A6B     		ldr	r2, [r3, #48]
 137 0046 02F00102 		and	r2, r2, #1
 138 004a 0392     		str	r2, [sp, #12]
 139              		.loc 1 268 3 view .LVU27
 140 004c 039A     		ldr	r2, [sp, #12]
 141              	.LBE7:
 142              		.loc 1 268 3 view .LVU28
 269:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 143              		.loc 1 269 3 view .LVU29
 144              	.LBB8:
 145              		.loc 1 269 3 view .LVU30
 146 004e 0494     		str	r4, [sp, #16]
 147              		.loc 1 269 3 view .LVU31
 148 0050 1A6B     		ldr	r2, [r3, #48]
 149 0052 42F00202 		orr	r2, r2, #2
 150 0056 1A63     		str	r2, [r3, #48]
 151              		.loc 1 269 3 view .LVU32
 152 0058 1B6B     		ldr	r3, [r3, #48]
 153 005a 03F00203 		and	r3, r3, #2
 154 005e 0493     		str	r3, [sp, #16]
 155              		.loc 1 269 3 view .LVU33
 156 0060 049B     		ldr	r3, [sp, #16]
 157              	.LBE8:
 158              		.loc 1 269 3 view .LVU34
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 272:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED3_Pin | LED2_Pin | LED1_Pin | LED0_Pin | SPI2_NSS_Pin, GPIO_PIN_RESET
 159              		.loc 1 272 3 view .LVU35
 160 0062 1D4E     		ldr	r6, .L7+4
 161 0064 2246     		mov	r2, r4
 162 0066 4FF4F241 		mov	r1, #30976
 163 006a 3046     		mov	r0, r6
 164 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL0:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 275:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 166              		.loc 1 275 3 view .LVU36
 167              		.loc 1 275 23 is_stmt 0 view .LVU37
 168 0070 0127     		movs	r7, #1
 169 0072 0597     		str	r7, [sp, #20]
 276:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 170              		.loc 1 276 3 is_stmt 1 view .LVU38
 171              		.loc 1 276 24 is_stmt 0 view .LVU39
 172 0074 4FF48813 		mov	r3, #1114112
 173 0078 0693     		str	r3, [sp, #24]
 277:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 277 3 is_stmt 1 view .LVU40
 175              		.loc 1 277 24 is_stmt 0 view .LVU41
 176 007a 0794     		str	r4, [sp, #28]
 278:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 177              		.loc 1 278 3 is_stmt 1 view .LVU42
 178 007c 174D     		ldr	r5, .L7+8
 179 007e 05A9     		add	r1, sp, #20
 180 0080 2846     		mov	r0, r5
 181 0082 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccX7IMNI.s 			page 9


 182              	.LVL1:
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /*Configure GPIO pins : LED3_Pin LED2_Pin LED1_Pin LED0_Pin
 281:Core/Src/main.c ****                            SPI2_NSS_Pin */
 282:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_Pin | LED2_Pin | LED1_Pin | LED0_Pin | SPI2_NSS_Pin;
 183              		.loc 1 282 3 view .LVU43
 184              		.loc 1 282 23 is_stmt 0 view .LVU44
 185 0086 4FF4F243 		mov	r3, #30976
 186 008a 0593     		str	r3, [sp, #20]
 283:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 187              		.loc 1 283 3 is_stmt 1 view .LVU45
 188              		.loc 1 283 24 is_stmt 0 view .LVU46
 189 008c 0697     		str	r7, [sp, #24]
 284:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 284 3 is_stmt 1 view .LVU47
 191              		.loc 1 284 24 is_stmt 0 view .LVU48
 192 008e 0794     		str	r4, [sp, #28]
 285:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 193              		.loc 1 285 3 is_stmt 1 view .LVU49
 194              		.loc 1 285 25 is_stmt 0 view .LVU50
 195 0090 0894     		str	r4, [sp, #32]
 286:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 196              		.loc 1 286 3 is_stmt 1 view .LVU51
 197 0092 05A9     		add	r1, sp, #20
 198 0094 3046     		mov	r0, r6
 199 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL2:
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /*Configure GPIO pin : SPI2_IRQ_Pin */
 289:Core/Src/main.c ****   GPIO_InitStruct.Pin = SPI2_IRQ_Pin;
 201              		.loc 1 289 3 view .LVU52
 202              		.loc 1 289 23 is_stmt 0 view .LVU53
 203 009a 4FF48073 		mov	r3, #256
 204 009e 0593     		str	r3, [sp, #20]
 290:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 205              		.loc 1 290 3 is_stmt 1 view .LVU54
 206              		.loc 1 290 24 is_stmt 0 view .LVU55
 207 00a0 4FF40413 		mov	r3, #2162688
 208 00a4 0693     		str	r3, [sp, #24]
 291:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 209              		.loc 1 291 3 is_stmt 1 view .LVU56
 210              		.loc 1 291 24 is_stmt 0 view .LVU57
 211 00a6 0794     		str	r4, [sp, #28]
 292:Core/Src/main.c ****   HAL_GPIO_Init(SPI2_IRQ_GPIO_Port, &GPIO_InitStruct);
 212              		.loc 1 292 3 is_stmt 1 view .LVU58
 213 00a8 05A9     		add	r1, sp, #20
 214 00aa 2846     		mov	r0, r5
 215 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 216              	.LVL3:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* EXTI interrupt init*/
 295:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 14, 0);
 217              		.loc 1 295 3 view .LVU59
 218 00b0 2246     		mov	r2, r4
 219 00b2 0E21     		movs	r1, #14
 220 00b4 0620     		movs	r0, #6
 221 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccX7IMNI.s 			page 10


 222              	.LVL4:
 296:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 223              		.loc 1 296 3 view .LVU60
 224 00ba 0620     		movs	r0, #6
 225 00bc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 226              	.LVL5:
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 14, 0);
 227              		.loc 1 298 3 view .LVU61
 228 00c0 2246     		mov	r2, r4
 229 00c2 0E21     		movs	r1, #14
 230 00c4 1720     		movs	r0, #23
 231 00c6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 232              	.LVL6:
 299:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 233              		.loc 1 299 3 view .LVU62
 234 00ca 1720     		movs	r0, #23
 235 00cc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 236              	.LVL7:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 302:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 303:Core/Src/main.c **** }
 237              		.loc 1 303 1 is_stmt 0 view .LVU63
 238 00d0 0BB0     		add	sp, sp, #44
 239              		.cfi_def_cfa_offset 20
 240              		@ sp needed
 241 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 242              	.L8:
 243              		.align	2
 244              	.L7:
 245 00d4 00380240 		.word	1073887232
 246 00d8 00040240 		.word	1073873920
 247 00dc 00000240 		.word	1073872896
 248              		.cfi_endproc
 249              	.LFE135:
 251              		.section	.text.ecatapp_loop,"ax",%progbits
 252              		.align	1
 253              		.global	ecatapp_loop
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	ecatapp_loop:
 259              	.LFB130:
  67:Core/Src/main.c ****   // stack in mixed mode
 260              		.loc 1 67 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 10B5     		push	{r4, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 4, -8
 267              		.cfi_offset 14, -4
  69:Core/Src/main.c ****   {
 268              		.loc 1 69 3 view .LVU65
  69:Core/Src/main.c ****   {
 269              		.loc 1 69 7 is_stmt 0 view .LVU66
ARM GAS  /tmp/ccX7IMNI.s 			page 11


 270 0002 174B     		ldr	r3, .L17
 271 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69:Core/Src/main.c ****   {
 272              		.loc 1 69 6 view .LVU67
 273 0006 9BB9     		cbnz	r3, .L16
 274              	.L10:
  78:Core/Src/main.c ****   {
 275              		.loc 1 78 3 is_stmt 1 view .LVU68
  78:Core/Src/main.c ****   {
 276              		.loc 1 78 7 is_stmt 0 view .LVU69
 277 0008 164B     		ldr	r3, .L17+4
 278 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  78:Core/Src/main.c ****   {
 279              		.loc 1 78 6 view .LVU70
 280 000c 0BB3     		cbz	r3, .L11
  83:Core/Src/main.c ****     if (ESCvar.dcsync)
 281              		.loc 1 83 5 is_stmt 1 view .LVU71
 282 000e 164C     		ldr	r4, .L17+8
 283 0010 0422     		movs	r2, #4
 284 0012 2146     		mov	r1, r4
 285 0014 4FF41160 		mov	r0, #2320
 286 0018 FFF7FEFF 		bl	ESC_read
 287              	.LVL8:
  83:Core/Src/main.c ****     if (ESCvar.dcsync)
 288              		.loc 1 83 24 view .LVU72
  84:Core/Src/main.c ****     {
 289              		.loc 1 84 5 view .LVU73
  84:Core/Src/main.c ****     {
 290              		.loc 1 84 15 is_stmt 0 view .LVU74
 291 001c 14F8603C 		ldrb	r3, [r4, #-96]	@ zero_extendqisi2
  84:Core/Src/main.c ****     {
 292              		.loc 1 84 8 view .LVU75
 293 0020 9BB1     		cbz	r3, .L12
  86:Core/Src/main.c ****     }
 294              		.loc 1 86 7 is_stmt 1 view .LVU76
 295 0022 0220     		movs	r0, #2
 296 0024 FFF7FEFF 		bl	DIG_process
 297              	.LVL9:
 298              	.L13:
  92:Core/Src/main.c ****   }
 299              		.loc 1 92 5 view .LVU77
  92:Core/Src/main.c ****   }
 300              		.loc 1 92 18 is_stmt 0 view .LVU78
 301 0028 0E4B     		ldr	r3, .L17+4
 302 002a 0022     		movs	r2, #0
 303 002c 1A70     		strb	r2, [r3]
 304              	.L9:
 102:Core/Src/main.c **** /* USER CODE END 0 */
 305              		.loc 1 102 1 view .LVU79
 306 002e 10BD     		pop	{r4, pc}
 307              	.L16:
  74:Core/Src/main.c ****     DIG_process(DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
 308              		.loc 1 74 5 is_stmt 1 view .LVU80
 309 0030 0422     		movs	r2, #4
 310 0032 0D49     		ldr	r1, .L17+8
 311 0034 4FF41160 		mov	r0, #2320
 312 0038 FFF7FEFF 		bl	ESC_read
ARM GAS  /tmp/ccX7IMNI.s 			page 12


 313              	.LVL10:
  74:Core/Src/main.c ****     DIG_process(DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
 314              		.loc 1 74 24 view .LVU81
  75:Core/Src/main.c ****     sync0_irq_flag = 0;
 315              		.loc 1 75 5 view .LVU82
 316 003c 0920     		movs	r0, #9
 317 003e FFF7FEFF 		bl	DIG_process
 318              	.LVL11:
  76:Core/Src/main.c ****   }
 319              		.loc 1 76 5 view .LVU83
  76:Core/Src/main.c ****   }
 320              		.loc 1 76 20 is_stmt 0 view .LVU84
 321 0042 074B     		ldr	r3, .L17
 322 0044 0022     		movs	r2, #0
 323 0046 1A70     		strb	r2, [r3]
 324 0048 DEE7     		b	.L10
 325              	.L12:
  90:Core/Src/main.c ****     }
 326              		.loc 1 90 7 is_stmt 1 view .LVU85
 327 004a 0B20     		movs	r0, #11
 328 004c FFF7FEFF 		bl	DIG_process
 329              	.LVL12:
 330 0050 EAE7     		b	.L13
 331              	.L11:
  99:Core/Src/main.c ****     DIG_process(DIG_PROCESS_WD_FLAG);
 332              		.loc 1 99 5 view .LVU86
 333 0052 FFF7FEFF 		bl	ecat_slv_poll
 334              	.LVL13:
 100:Core/Src/main.c ****   }
 335              		.loc 1 100 5 view .LVU87
 336 0056 0420     		movs	r0, #4
 337 0058 FFF7FEFF 		bl	DIG_process
 338              	.LVL14:
 102:Core/Src/main.c **** /* USER CODE END 0 */
 339              		.loc 1 102 1 is_stmt 0 view .LVU88
 340 005c E7E7     		b	.L9
 341              	.L18:
 342 005e 00BF     		.align	2
 343              	.L17:
 344 0060 00000000 		.word	.LANCHOR0
 345 0064 00000000 		.word	.LANCHOR1
 346 0068 D8000000 		.word	ESCvar+216
 347              		.cfi_endproc
 348              	.LFE130:
 350              		.section	.text.Error_Handler,"ax",%progbits
 351              		.align	1
 352              		.global	Error_Handler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	Error_Handler:
 358              	.LFB136:
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE END 4 */
 308:Core/Src/main.c **** 
ARM GAS  /tmp/ccX7IMNI.s 			page 13


 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 311:Core/Src/main.c ****  * @retval None
 312:Core/Src/main.c ****  */
 313:Core/Src/main.c **** void Error_Handler(void)
 314:Core/Src/main.c **** {
 359              		.loc 1 314 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ Volatile: function does not return.
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 315:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 316:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 317:Core/Src/main.c ****   __disable_irq();
 365              		.loc 1 317 3 view .LVU90
 366              	.LBB9:
 367              	.LBI9:
 368              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccX7IMNI.s 			page 14


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccX7IMNI.s 			page 15


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 369              		.loc 2 140 27 view .LVU91
 370              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 371              		.loc 2 142 3 view .LVU92
 372              		.syntax unified
 373              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 374 0000 72B6     		cpsid i
 375              	@ 0 "" 2
 376              		.thumb
 377              		.syntax unified
 378              	.L20:
ARM GAS  /tmp/ccX7IMNI.s 			page 16


 379              	.LBE10:
 380              	.LBE9:
 318:Core/Src/main.c ****   while (1)
 381              		.loc 1 318 3 discriminator 1 view .LVU93
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****   }
 382              		.loc 1 320 3 discriminator 1 view .LVU94
 318:Core/Src/main.c ****   while (1)
 383              		.loc 1 318 9 discriminator 1 view .LVU95
 384 0002 FEE7     		b	.L20
 385              		.cfi_endproc
 386              	.LFE136:
 388              		.section	.text.MX_SPI2_Init,"ax",%progbits
 389              		.align	1
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 394              	MX_SPI2_Init:
 395              	.LFB133:
 213:Core/Src/main.c **** 
 396              		.loc 1 213 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
 223:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 404              		.loc 1 223 3 view .LVU97
 223:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 405              		.loc 1 223 18 is_stmt 0 view .LVU98
 406 0002 0E48     		ldr	r0, .L25
 407 0004 0E4B     		ldr	r3, .L25+4
 408 0006 0360     		str	r3, [r0]
 224:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 409              		.loc 1 224 3 is_stmt 1 view .LVU99
 224:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 410              		.loc 1 224 19 is_stmt 0 view .LVU100
 411 0008 4FF48273 		mov	r3, #260
 412 000c 4360     		str	r3, [r0, #4]
 225:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 413              		.loc 1 225 3 is_stmt 1 view .LVU101
 225:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 414              		.loc 1 225 24 is_stmt 0 view .LVU102
 415 000e 0023     		movs	r3, #0
 416 0010 8360     		str	r3, [r0, #8]
 226:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 417              		.loc 1 226 3 is_stmt 1 view .LVU103
 226:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 418              		.loc 1 226 23 is_stmt 0 view .LVU104
 419 0012 C360     		str	r3, [r0, #12]
 227:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 420              		.loc 1 227 3 is_stmt 1 view .LVU105
 227:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 421              		.loc 1 227 26 is_stmt 0 view .LVU106
 422 0014 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccX7IMNI.s 			page 17


 228:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 423              		.loc 1 228 3 is_stmt 1 view .LVU107
 228:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 424              		.loc 1 228 23 is_stmt 0 view .LVU108
 425 0016 4361     		str	r3, [r0, #20]
 229:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 426              		.loc 1 229 3 is_stmt 1 view .LVU109
 229:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 427              		.loc 1 229 18 is_stmt 0 view .LVU110
 428 0018 4FF40072 		mov	r2, #512
 429 001c 8261     		str	r2, [r0, #24]
 230:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 430              		.loc 1 230 3 is_stmt 1 view .LVU111
 230:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 431              		.loc 1 230 32 is_stmt 0 view .LVU112
 432 001e 0822     		movs	r2, #8
 433 0020 C261     		str	r2, [r0, #28]
 231:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 434              		.loc 1 231 3 is_stmt 1 view .LVU113
 231:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 435              		.loc 1 231 23 is_stmt 0 view .LVU114
 436 0022 0362     		str	r3, [r0, #32]
 232:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 437              		.loc 1 232 3 is_stmt 1 view .LVU115
 232:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 438              		.loc 1 232 21 is_stmt 0 view .LVU116
 439 0024 4362     		str	r3, [r0, #36]
 233:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 440              		.loc 1 233 3 is_stmt 1 view .LVU117
 233:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 441              		.loc 1 233 29 is_stmt 0 view .LVU118
 442 0026 4FF40053 		mov	r3, #8192
 443 002a 8362     		str	r3, [r0, #40]
 234:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 444              		.loc 1 234 3 is_stmt 1 view .LVU119
 234:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 445              		.loc 1 234 28 is_stmt 0 view .LVU120
 446 002c 8023     		movs	r3, #128
 447 002e C362     		str	r3, [r0, #44]
 235:Core/Src/main.c ****   {
 448              		.loc 1 235 3 is_stmt 1 view .LVU121
 235:Core/Src/main.c ****   {
 449              		.loc 1 235 7 is_stmt 0 view .LVU122
 450 0030 FFF7FEFF 		bl	HAL_SPI_Init
 451              	.LVL15:
 235:Core/Src/main.c ****   {
 452              		.loc 1 235 6 view .LVU123
 453 0034 00B9     		cbnz	r0, .L24
 242:Core/Src/main.c **** 
 454              		.loc 1 242 1 view .LVU124
 455 0036 08BD     		pop	{r3, pc}
 456              	.L24:
 237:Core/Src/main.c ****   }
 457              		.loc 1 237 5 is_stmt 1 view .LVU125
 458 0038 FFF7FEFF 		bl	Error_Handler
 459              	.LVL16:
 460              	.L26:
ARM GAS  /tmp/ccX7IMNI.s 			page 18


 461              		.align	2
 462              	.L25:
 463 003c 00000000 		.word	.LANCHOR2
 464 0040 00380040 		.word	1073756160
 465              		.cfi_endproc
 466              	.LFE133:
 468              		.section	.text.SystemClock_Config,"ax",%progbits
 469              		.align	1
 470              		.global	SystemClock_Config
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 475              	SystemClock_Config:
 476              	.LFB132:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 477              		.loc 1 168 1 view -0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 80
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481 0000 00B5     		push	{lr}
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 14, -4
 484 0002 95B0     		sub	sp, sp, #84
 485              		.cfi_def_cfa_offset 88
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 486              		.loc 1 169 3 view .LVU127
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 487              		.loc 1 169 22 is_stmt 0 view .LVU128
 488 0004 3022     		movs	r2, #48
 489 0006 0021     		movs	r1, #0
 490 0008 08A8     		add	r0, sp, #32
 491 000a FFF7FEFF 		bl	memset
 492              	.LVL17:
 170:Core/Src/main.c **** 
 493              		.loc 1 170 3 is_stmt 1 view .LVU129
 170:Core/Src/main.c **** 
 494              		.loc 1 170 22 is_stmt 0 view .LVU130
 495 000e 0023     		movs	r3, #0
 496 0010 0393     		str	r3, [sp, #12]
 497 0012 0493     		str	r3, [sp, #16]
 498 0014 0593     		str	r3, [sp, #20]
 499 0016 0693     		str	r3, [sp, #24]
 500 0018 0793     		str	r3, [sp, #28]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 501              		.loc 1 174 3 is_stmt 1 view .LVU131
 502              	.LBB11:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 503              		.loc 1 174 3 view .LVU132
 504 001a 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 505              		.loc 1 174 3 view .LVU133
 506 001c 204A     		ldr	r2, .L33
 507 001e 116C     		ldr	r1, [r2, #64]
 508 0020 41F08051 		orr	r1, r1, #268435456
 509 0024 1164     		str	r1, [r2, #64]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 510              		.loc 1 174 3 view .LVU134
ARM GAS  /tmp/ccX7IMNI.s 			page 19


 511 0026 126C     		ldr	r2, [r2, #64]
 512 0028 02F08052 		and	r2, r2, #268435456
 513 002c 0192     		str	r2, [sp, #4]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 514              		.loc 1 174 3 view .LVU135
 515 002e 019A     		ldr	r2, [sp, #4]
 516              	.LBE11:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 517              		.loc 1 174 3 view .LVU136
 175:Core/Src/main.c **** 
 518              		.loc 1 175 3 view .LVU137
 519              	.LBB12:
 175:Core/Src/main.c **** 
 520              		.loc 1 175 3 view .LVU138
 521 0030 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 522              		.loc 1 175 3 view .LVU139
 523 0032 1C4B     		ldr	r3, .L33+4
 524 0034 1A68     		ldr	r2, [r3]
 525 0036 42F48042 		orr	r2, r2, #16384
 526 003a 1A60     		str	r2, [r3]
 175:Core/Src/main.c **** 
 527              		.loc 1 175 3 view .LVU140
 528 003c 1B68     		ldr	r3, [r3]
 529 003e 03F48043 		and	r3, r3, #16384
 530 0042 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 531              		.loc 1 175 3 view .LVU141
 532 0044 029B     		ldr	r3, [sp, #8]
 533              	.LBE12:
 175:Core/Src/main.c **** 
 534              		.loc 1 175 3 view .LVU142
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 535              		.loc 1 180 3 view .LVU143
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 536              		.loc 1 180 36 is_stmt 0 view .LVU144
 537 0046 0123     		movs	r3, #1
 538 0048 0893     		str	r3, [sp, #32]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 539              		.loc 1 181 3 is_stmt 1 view .LVU145
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 540              		.loc 1 181 30 is_stmt 0 view .LVU146
 541 004a 4FF48033 		mov	r3, #65536
 542 004e 0993     		str	r3, [sp, #36]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 543              		.loc 1 182 3 is_stmt 1 view .LVU147
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 544              		.loc 1 182 34 is_stmt 0 view .LVU148
 545 0050 0223     		movs	r3, #2
 546 0052 0E93     		str	r3, [sp, #56]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 547              		.loc 1 183 3 is_stmt 1 view .LVU149
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 548              		.loc 1 183 35 is_stmt 0 view .LVU150
 549 0054 4FF48002 		mov	r2, #4194304
 550 0058 0F92     		str	r2, [sp, #60]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
ARM GAS  /tmp/ccX7IMNI.s 			page 20


 551              		.loc 1 184 3 is_stmt 1 view .LVU151
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 552              		.loc 1 184 30 is_stmt 0 view .LVU152
 553 005a 0422     		movs	r2, #4
 554 005c 1092     		str	r2, [sp, #64]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 555              		.loc 1 185 3 is_stmt 1 view .LVU153
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 556              		.loc 1 185 30 is_stmt 0 view .LVU154
 557 005e A822     		movs	r2, #168
 558 0060 1192     		str	r2, [sp, #68]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 559              		.loc 1 186 3 is_stmt 1 view .LVU155
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 560              		.loc 1 186 30 is_stmt 0 view .LVU156
 561 0062 1293     		str	r3, [sp, #72]
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 562              		.loc 1 187 3 is_stmt 1 view .LVU157
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 563              		.loc 1 187 30 is_stmt 0 view .LVU158
 564 0064 0723     		movs	r3, #7
 565 0066 1393     		str	r3, [sp, #76]
 188:Core/Src/main.c ****   {
 566              		.loc 1 188 3 is_stmt 1 view .LVU159
 188:Core/Src/main.c ****   {
 567              		.loc 1 188 7 is_stmt 0 view .LVU160
 568 0068 08A8     		add	r0, sp, #32
 569 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 570              	.LVL18:
 188:Core/Src/main.c ****   {
 571              		.loc 1 188 6 view .LVU161
 572 006e 98B9     		cbnz	r0, .L31
 195:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 573              		.loc 1 195 3 is_stmt 1 view .LVU162
 195:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 574              		.loc 1 195 31 is_stmt 0 view .LVU163
 575 0070 0F23     		movs	r3, #15
 576 0072 0393     		str	r3, [sp, #12]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 577              		.loc 1 196 3 is_stmt 1 view .LVU164
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 578              		.loc 1 196 34 is_stmt 0 view .LVU165
 579 0074 0223     		movs	r3, #2
 580 0076 0493     		str	r3, [sp, #16]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 581              		.loc 1 197 3 is_stmt 1 view .LVU166
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 582              		.loc 1 197 35 is_stmt 0 view .LVU167
 583 0078 0023     		movs	r3, #0
 584 007a 0593     		str	r3, [sp, #20]
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 585              		.loc 1 198 3 is_stmt 1 view .LVU168
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 586              		.loc 1 198 36 is_stmt 0 view .LVU169
 587 007c 4FF4A053 		mov	r3, #5120
 588 0080 0693     		str	r3, [sp, #24]
 199:Core/Src/main.c **** 
ARM GAS  /tmp/ccX7IMNI.s 			page 21


 589              		.loc 1 199 3 is_stmt 1 view .LVU170
 199:Core/Src/main.c **** 
 590              		.loc 1 199 36 is_stmt 0 view .LVU171
 591 0082 4FF48053 		mov	r3, #4096
 592 0086 0793     		str	r3, [sp, #28]
 201:Core/Src/main.c ****   {
 593              		.loc 1 201 3 is_stmt 1 view .LVU172
 201:Core/Src/main.c ****   {
 594              		.loc 1 201 7 is_stmt 0 view .LVU173
 595 0088 0521     		movs	r1, #5
 596 008a 03A8     		add	r0, sp, #12
 597 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 598              	.LVL19:
 201:Core/Src/main.c ****   {
 599              		.loc 1 201 6 view .LVU174
 600 0090 20B9     		cbnz	r0, .L32
 205:Core/Src/main.c **** 
 601              		.loc 1 205 1 view .LVU175
 602 0092 15B0     		add	sp, sp, #84
 603              		.cfi_remember_state
 604              		.cfi_def_cfa_offset 4
 605              		@ sp needed
 606 0094 5DF804FB 		ldr	pc, [sp], #4
 607              	.L31:
 608              		.cfi_restore_state
 190:Core/Src/main.c ****   }
 609              		.loc 1 190 5 is_stmt 1 view .LVU176
 610 0098 FFF7FEFF 		bl	Error_Handler
 611              	.LVL20:
 612              	.L32:
 203:Core/Src/main.c ****   }
 613              		.loc 1 203 5 view .LVU177
 614 009c FFF7FEFF 		bl	Error_Handler
 615              	.LVL21:
 616              	.L34:
 617              		.align	2
 618              	.L33:
 619 00a0 00380240 		.word	1073887232
 620 00a4 00700040 		.word	1073770496
 621              		.cfi_endproc
 622              	.LFE132:
 624              		.section	.text.main,"ax",%progbits
 625              		.align	1
 626              		.global	main
 627              		.syntax unified
 628              		.thumb
 629              		.thumb_func
 631              	main:
 632              	.LFB131:
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 633              		.loc 1 110 1 view -0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637 0000 10B5     		push	{r4, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 4, -8
ARM GAS  /tmp/ccX7IMNI.s 			page 22


 640              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 
 641              		.loc 1 118 3 view .LVU179
 642 0002 FFF7FEFF 		bl	HAL_Init
 643              	.LVL22:
 125:Core/Src/main.c **** 
 644              		.loc 1 125 3 view .LVU180
 645 0006 FFF7FEFF 		bl	SystemClock_Config
 646              	.LVL23:
 132:Core/Src/main.c ****   MX_DMA_Init();
 647              		.loc 1 132 3 view .LVU181
 648 000a FFF7FEFF 		bl	MX_GPIO_Init
 649              	.LVL24:
 133:Core/Src/main.c ****   MX_SPI2_Init();
 650              		.loc 1 133 3 view .LVU182
 651 000e FFF7FEFF 		bl	MX_DMA_Init
 652              	.LVL25:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 653              		.loc 1 134 3 view .LVU183
 654 0012 FFF7FEFF 		bl	MX_SPI2_Init
 655              	.LVL26:
 136:Core/Src/main.c ****   // HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET);
 656              		.loc 1 136 3 view .LVU184
 657 0016 FFF7FEFF 		bl	ecatapp_init
 658              	.LVL27:
 142:Core/Src/main.c ****   while (1)
 659              		.loc 1 142 3 view .LVU185
 143:Core/Src/main.c ****   {
 660              		.loc 1 143 3 view .LVU186
 146:Core/Src/main.c ****     {
 661              		.loc 1 146 5 view .LVU187
 662              	.L36:
 151:Core/Src/main.c ****     {
 663              		.loc 1 151 10 view .LVU188
 153:Core/Src/main.c ****       led = 1;
 664              		.loc 1 153 7 view .LVU189
 665 001a 094C     		ldr	r4, .L38
 666 001c 0022     		movs	r2, #0
 667 001e 4FF48041 		mov	r1, #16384
 668 0022 2046     		mov	r0, r4
 669 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 670              	.LVL28:
 154:Core/Src/main.c ****     }
 671              		.loc 1 154 7 view .LVU190
 158:Core/Src/main.c ****   }
 672              		.loc 1 158 5 view .LVU191
 673 0028 FFF7FEFF 		bl	ecatapp_loop
 674              	.LVL29:
 143:Core/Src/main.c ****   {
 675              		.loc 1 143 9 view .LVU192
 143:Core/Src/main.c ****   {
 676              		.loc 1 143 3 view .LVU193
 146:Core/Src/main.c ****     {
 677              		.loc 1 146 5 view .LVU194
 148:Core/Src/main.c ****       led = 0;
 678              		.loc 1 148 7 view .LVU195
 679 002c 0122     		movs	r2, #1
ARM GAS  /tmp/ccX7IMNI.s 			page 23


 680 002e 4FF48041 		mov	r1, #16384
 681 0032 2046     		mov	r0, r4
 682 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL30:
 149:Core/Src/main.c ****     }
 684              		.loc 1 149 7 view .LVU196
 158:Core/Src/main.c ****   }
 685              		.loc 1 158 5 view .LVU197
 686 0038 FFF7FEFF 		bl	ecatapp_loop
 687              	.LVL31:
 143:Core/Src/main.c ****   {
 688              		.loc 1 143 9 view .LVU198
 143:Core/Src/main.c ****   {
 689              		.loc 1 143 3 view .LVU199
 146:Core/Src/main.c ****     {
 690              		.loc 1 146 5 view .LVU200
 691 003c EDE7     		b	.L36
 692              	.L39:
 693 003e 00BF     		.align	2
 694              	.L38:
 695 0040 00040240 		.word	1073873920
 696              		.cfi_endproc
 697              	.LFE131:
 699              		.global	hdma_spi2_tx
 700              		.global	hdma_spi2_rx
 701              		.global	hspi2
 702              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 703              		.align	2
 706              	hdma_spi2_rx:
 707 0000 00000000 		.space	96
 707      00000000 
 707      00000000 
 707      00000000 
 707      00000000 
 708              		.section	.bss.hdma_spi2_tx,"aw",%nobits
 709              		.align	2
 712              	hdma_spi2_tx:
 713 0000 00000000 		.space	96
 713      00000000 
 713      00000000 
 713      00000000 
 713      00000000 
 714              		.section	.bss.hspi2,"aw",%nobits
 715              		.align	2
 716              		.set	.LANCHOR2,. + 0
 719              	hspi2:
 720 0000 00000000 		.space	88
 720      00000000 
 720      00000000 
 720      00000000 
 720      00000000 
 721              		.section	.bss.pdi_dma_transmission,"aw",%nobits
 724              	pdi_dma_transmission:
 725 0000 00       		.space	1
 726              		.section	.bss.pdi_irq_flag,"aw",%nobits
 727              		.set	.LANCHOR1,. + 0
 730              	pdi_irq_flag:
ARM GAS  /tmp/ccX7IMNI.s 			page 24


 731 0000 00       		.space	1
 732              		.section	.bss.sync0_irq_flag,"aw",%nobits
 733              		.set	.LANCHOR0,. + 0
 736              	sync0_irq_flag:
 737 0000 00       		.space	1
 738              		.text
 739              	.Letext0:
 740              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 741              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 742              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 743              		.file 6 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 744              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 745              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 746              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 747              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 748              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 749              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 750              		.file 13 "Drivers/SOES/Inc/esc.h"
 751              		.file 14 "Core/Inc/pdo_override.h"
 752              		.file 15 "Core/Inc/main.h"
 753              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 754              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 755              		.file 18 "Core/Inc/ecatapp.h"
 756              		.file 19 "Drivers/SOES/Inc/ecat_slv.h"
 757              		.file 20 "<built-in>"
ARM GAS  /tmp/ccX7IMNI.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX7IMNI.s:20     .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccX7IMNI.s:25     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccX7IMNI.s:61     .text.MX_DMA_Init:0000000000000020 $d
     /tmp/ccX7IMNI.s:66     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccX7IMNI.s:71     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccX7IMNI.s:245    .text.MX_GPIO_Init:00000000000000d4 $d
     /tmp/ccX7IMNI.s:252    .text.ecatapp_loop:0000000000000000 $t
     /tmp/ccX7IMNI.s:258    .text.ecatapp_loop:0000000000000000 ecatapp_loop
     /tmp/ccX7IMNI.s:344    .text.ecatapp_loop:0000000000000060 $d
     /tmp/ccX7IMNI.s:351    .text.Error_Handler:0000000000000000 $t
     /tmp/ccX7IMNI.s:357    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccX7IMNI.s:389    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccX7IMNI.s:394    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccX7IMNI.s:463    .text.MX_SPI2_Init:000000000000003c $d
     /tmp/ccX7IMNI.s:469    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccX7IMNI.s:475    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccX7IMNI.s:619    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccX7IMNI.s:625    .text.main:0000000000000000 $t
     /tmp/ccX7IMNI.s:631    .text.main:0000000000000000 main
     /tmp/ccX7IMNI.s:695    .text.main:0000000000000040 $d
     /tmp/ccX7IMNI.s:712    .bss.hdma_spi2_tx:0000000000000000 hdma_spi2_tx
     /tmp/ccX7IMNI.s:706    .bss.hdma_spi2_rx:0000000000000000 hdma_spi2_rx
     /tmp/ccX7IMNI.s:719    .bss.hspi2:0000000000000000 hspi2
     /tmp/ccX7IMNI.s:703    .bss.hdma_spi2_rx:0000000000000000 $d
     /tmp/ccX7IMNI.s:709    .bss.hdma_spi2_tx:0000000000000000 $d
     /tmp/ccX7IMNI.s:715    .bss.hspi2:0000000000000000 $d
     /tmp/ccX7IMNI.s:724    .bss.pdi_dma_transmission:0000000000000000 pdi_dma_transmission
     /tmp/ccX7IMNI.s:725    .bss.pdi_dma_transmission:0000000000000000 $d
     /tmp/ccX7IMNI.s:730    .bss.pdi_irq_flag:0000000000000000 pdi_irq_flag
     /tmp/ccX7IMNI.s:731    .bss.pdi_irq_flag:0000000000000000 $d
     /tmp/ccX7IMNI.s:736    .bss.sync0_irq_flag:0000000000000000 sync0_irq_flag
     /tmp/ccX7IMNI.s:737    .bss.sync0_irq_flag:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
ESC_read
DIG_process
ecat_slv_poll
ESCvar
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ecatapp_init
