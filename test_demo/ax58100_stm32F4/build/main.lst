ARM GAS  /tmp/cc2vvFly.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cc2vvFly.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Definitions for ledTask */
  47:Core/Src/main.c **** osThreadId_t ledTaskHandle;
  48:Core/Src/main.c **** const osThreadAttr_t ledTask_attributes = {
  49:Core/Src/main.c ****   .name = "ledTask",
  50:Core/Src/main.c ****   .stack_size = 128 * 4,
  51:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  52:Core/Src/main.c **** };
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_SPI2_Init(void);
  61:Core/Src/main.c **** void LedTask(void *argument);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/cc2vvFly.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_SPI2_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Init scheduler */
 106:Core/Src/main.c ****   osKernelInitialize();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 109:Core/Src/main.c ****   /* add mutexes, ... */
 110:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 113:Core/Src/main.c ****   /* add semaphores, ... */
 114:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 117:Core/Src/main.c ****   /* start timers, add new ones, ... */
 118:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 121:Core/Src/main.c ****   /* add queues, ... */
 122:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Create the thread(s) */
 125:Core/Src/main.c ****   /* creation of ledTask */
 126:Core/Src/main.c ****   ledTaskHandle = osThreadNew(LedTask, NULL, &ledTask_attributes);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 129:Core/Src/main.c ****   /* add threads, ... */
 130:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 133:Core/Src/main.c ****   /* add events, ... */
 134:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Start scheduler */
 137:Core/Src/main.c ****   osKernelStart();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 140:Core/Src/main.c ****   /* Infinite loop */
 141:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 142:Core/Src/main.c ****   while (1)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     /* USER CODE END WHILE */
 145:Core/Src/main.c **** 
ARM GAS  /tmp/cc2vvFly.s 			page 4


 146:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   /* USER CODE END 3 */
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief System Clock Configuration
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** void SystemClock_Config(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 158:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 163:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 166:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 191:Core/Src/main.c ****   {
 192:Core/Src/main.c ****     Error_Handler();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c **** }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /**
 197:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 198:Core/Src/main.c ****   * @param None
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** static void MX_SPI2_Init(void)
 202:Core/Src/main.c **** {
ARM GAS  /tmp/cc2vvFly.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 211:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 212:Core/Src/main.c ****   hspi2.Instance = SPI2;
 213:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 214:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 215:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 216:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 217:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 218:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 219:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 220:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 221:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 222:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 223:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 224:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief GPIO Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_GPIO_Init(void)
 240:Core/Src/main.c **** {
  28              		.loc 1 240 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 241:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 241 3 view .LVU1
  42              		.loc 1 241 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/cc2vvFly.s 			page 6


  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 242:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 243:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 246 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 246 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 246 3 view .LVU5
  54 0012 304B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 246 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 246 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 246 3 view .LVU8
 247:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 247 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 247 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 247 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00402 		orr	r2, r2, #4
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 247 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00402 		and	r2, r2, #4
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 247 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 247 3 view .LVU14
 248:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 248 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 248 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 248 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 248 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 248 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
ARM GAS  /tmp/cc2vvFly.s 			page 7


  96              	.LBE6:
  97              		.loc 1 248 3 view .LVU20
 249:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 249 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 249 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 249 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 249 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 249 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 249 3 view .LVU26
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 252:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED3_Pin|LED2_Pin|LED1_Pin|LED0_Pin
 114              		.loc 1 252 3 view .LVU27
 115 0062 1D4E     		ldr	r6, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 4FF4F241 		mov	r1, #30976
 118 006a 3046     		mov	r0, r6
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 253:Core/Src/main.c ****                           |SPI2_NSS_Pin, GPIO_PIN_RESET);
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 256:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 121              		.loc 1 256 3 view .LVU28
 122              		.loc 1 256 23 is_stmt 0 view .LVU29
 123 0070 0127     		movs	r7, #1
 124 0072 0597     		str	r7, [sp, #20]
 257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 125              		.loc 1 257 3 is_stmt 1 view .LVU30
 126              		.loc 1 257 24 is_stmt 0 view .LVU31
 127 0074 4FF48813 		mov	r3, #1114112
 128 0078 0693     		str	r3, [sp, #24]
 258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 258 3 is_stmt 1 view .LVU32
 130              		.loc 1 258 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 259:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 259 3 is_stmt 1 view .LVU34
 133 007c 174D     		ldr	r5, .L3+8
 134 007e 05A9     		add	r1, sp, #20
 135 0080 2846     		mov	r0, r5
 136 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL1:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /*Configure GPIO pins : LED3_Pin LED2_Pin LED1_Pin LED0_Pin
 262:Core/Src/main.c ****                            SPI2_NSS_Pin */
 263:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin|LED1_Pin|LED0_Pin
ARM GAS  /tmp/cc2vvFly.s 			page 8


 138              		.loc 1 263 3 view .LVU35
 139              		.loc 1 263 23 is_stmt 0 view .LVU36
 140 0086 4FF4F243 		mov	r3, #30976
 141 008a 0593     		str	r3, [sp, #20]
 264:Core/Src/main.c ****                           |SPI2_NSS_Pin;
 265:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 265 3 is_stmt 1 view .LVU37
 143              		.loc 1 265 24 is_stmt 0 view .LVU38
 144 008c 0697     		str	r7, [sp, #24]
 266:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 266 3 is_stmt 1 view .LVU39
 146              		.loc 1 266 24 is_stmt 0 view .LVU40
 147 008e 0794     		str	r4, [sp, #28]
 267:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 267 3 is_stmt 1 view .LVU41
 149              		.loc 1 267 25 is_stmt 0 view .LVU42
 150 0090 0894     		str	r4, [sp, #32]
 268:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 151              		.loc 1 268 3 is_stmt 1 view .LVU43
 152 0092 05A9     		add	r1, sp, #20
 153 0094 3046     		mov	r0, r6
 154 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /*Configure GPIO pin : SPI2_IRQ_Pin */
 271:Core/Src/main.c ****   GPIO_InitStruct.Pin = SPI2_IRQ_Pin;
 156              		.loc 1 271 3 view .LVU44
 157              		.loc 1 271 23 is_stmt 0 view .LVU45
 158 009a 4FF48073 		mov	r3, #256
 159 009e 0593     		str	r3, [sp, #20]
 272:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 160              		.loc 1 272 3 is_stmt 1 view .LVU46
 161              		.loc 1 272 24 is_stmt 0 view .LVU47
 162 00a0 4FF40413 		mov	r3, #2162688
 163 00a4 0693     		str	r3, [sp, #24]
 273:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 273 3 is_stmt 1 view .LVU48
 165              		.loc 1 273 24 is_stmt 0 view .LVU49
 166 00a6 0794     		str	r4, [sp, #28]
 274:Core/Src/main.c ****   HAL_GPIO_Init(SPI2_IRQ_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 274 3 is_stmt 1 view .LVU50
 168 00a8 05A9     		add	r1, sp, #20
 169 00aa 2846     		mov	r0, r5
 170 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL3:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* EXTI interrupt init*/
 277:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 172              		.loc 1 277 3 view .LVU51
 173 00b0 2246     		mov	r2, r4
 174 00b2 0521     		movs	r1, #5
 175 00b4 0620     		movs	r0, #6
 176 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 177              	.LVL4:
 278:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 178              		.loc 1 278 3 view .LVU52
 179 00ba 0620     		movs	r0, #6
ARM GAS  /tmp/cc2vvFly.s 			page 9


 180 00bc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 181              	.LVL5:
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 182              		.loc 1 280 3 view .LVU53
 183 00c0 2246     		mov	r2, r4
 184 00c2 0521     		movs	r1, #5
 185 00c4 1720     		movs	r0, #23
 186 00c6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 187              	.LVL6:
 281:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 188              		.loc 1 281 3 view .LVU54
 189 00ca 1720     		movs	r0, #23
 190 00cc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 191              	.LVL7:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 284:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 285:Core/Src/main.c **** }
 192              		.loc 1 285 1 is_stmt 0 view .LVU55
 193 00d0 0BB0     		add	sp, sp, #44
 194              		.cfi_def_cfa_offset 20
 195              		@ sp needed
 196 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 197              	.L4:
 198              		.align	2
 199              	.L3:
 200 00d4 00380240 		.word	1073887232
 201 00d8 00040240 		.word	1073873920
 202 00dc 00000240 		.word	1073872896
 203              		.cfi_endproc
 204              	.LFE137:
 206              		.section	.text.LedTask,"ax",%progbits
 207              		.align	1
 208              		.global	LedTask
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	LedTask:
 214              	.LFB138:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /* USER CODE END 4 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /* USER CODE BEGIN Header_LedTask */
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief  Function implementing the ledTask thread.
 294:Core/Src/main.c ****   * @param  argument: Not used
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** /* USER CODE END Header_LedTask */
 298:Core/Src/main.c **** void LedTask(void *argument)
 299:Core/Src/main.c **** {
 215              		.loc 1 299 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ Volatile: function does not return.
ARM GAS  /tmp/cc2vvFly.s 			page 10


 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL8:
 221              		.loc 1 299 1 is_stmt 0 view .LVU57
 222 0000 08B5     		push	{r3, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 226              	.LVL9:
 227              	.L6:
 300:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 301:Core/Src/main.c ****   /* Infinite loop */
 302:Core/Src/main.c ****   for(;;)
 228              		.loc 1 302 3 is_stmt 1 discriminator 1 view .LVU58
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     osDelay(1);
 229              		.loc 1 304 5 discriminator 1 view .LVU59
 230 0002 0120     		movs	r0, #1
 231 0004 FFF7FEFF 		bl	osDelay
 232              	.LVL10:
 302:Core/Src/main.c ****   {
 233              		.loc 1 302 3 discriminator 1 view .LVU60
 234 0008 FBE7     		b	.L6
 235              		.cfi_endproc
 236              	.LFE138:
 238              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 239              		.align	1
 240              		.global	HAL_TIM_PeriodElapsedCallback
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
 245              	HAL_TIM_PeriodElapsedCallback:
 246              	.LVL11:
 247              	.LFB139:
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   /* USER CODE END 5 */
 307:Core/Src/main.c **** }
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 311:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 312:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 313:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 314:Core/Src/main.c ****   * @param  htim : TIM handle
 315:Core/Src/main.c ****   * @retval None
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 318:Core/Src/main.c **** {
 248              		.loc 1 318 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		.loc 1 318 1 is_stmt 0 view .LVU62
 253 0000 08B5     		push	{r3, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
ARM GAS  /tmp/cc2vvFly.s 			page 11


 319:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 322:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 257              		.loc 1 322 3 is_stmt 1 view .LVU63
 258              		.loc 1 322 11 is_stmt 0 view .LVU64
 259 0002 0268     		ldr	r2, [r0]
 260              		.loc 1 322 6 view .LVU65
 261 0004 034B     		ldr	r3, .L12
 262 0006 9A42     		cmp	r2, r3
 263 0008 00D0     		beq	.L11
 264              	.LVL12:
 265              	.L8:
 323:Core/Src/main.c ****     HAL_IncTick();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 328:Core/Src/main.c **** }
 266              		.loc 1 328 1 view .LVU66
 267 000a 08BD     		pop	{r3, pc}
 268              	.LVL13:
 269              	.L11:
 323:Core/Src/main.c ****     HAL_IncTick();
 270              		.loc 1 323 5 is_stmt 1 view .LVU67
 271 000c FFF7FEFF 		bl	HAL_IncTick
 272              	.LVL14:
 273              		.loc 1 328 1 is_stmt 0 view .LVU68
 274 0010 FBE7     		b	.L8
 275              	.L13:
 276 0012 00BF     		.align	2
 277              	.L12:
 278 0014 00100040 		.word	1073745920
 279              		.cfi_endproc
 280              	.LFE139:
 282              		.section	.text.Error_Handler,"ax",%progbits
 283              		.align	1
 284              		.global	Error_Handler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	Error_Handler:
 290              	.LFB140:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /**
 331:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 332:Core/Src/main.c ****   * @retval None
 333:Core/Src/main.c ****   */
 334:Core/Src/main.c **** void Error_Handler(void)
 335:Core/Src/main.c **** {
 291              		.loc 1 335 1 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ Volatile: function does not return.
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 336:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/cc2vvFly.s 			page 12


 337:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 338:Core/Src/main.c ****   __disable_irq();
 297              		.loc 1 338 3 view .LVU70
 298              	.LBB8:
 299              	.LBI8:
 300              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/cc2vvFly.s 			page 13


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/cc2vvFly.s 			page 14


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 301              		.loc 2 140 27 view .LVU71
 302              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 303              		.loc 2 142 3 view .LVU72
 304              		.syntax unified
 305              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 306 0000 72B6     		cpsid i
 307              	@ 0 "" 2
 308              		.thumb
 309              		.syntax unified
 310              	.L15:
 311              	.LBE9:
 312              	.LBE8:
 339:Core/Src/main.c ****   while (1)
 313              		.loc 1 339 3 discriminator 1 view .LVU73
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****   }
 314              		.loc 1 341 3 discriminator 1 view .LVU74
 339:Core/Src/main.c ****   while (1)
 315              		.loc 1 339 9 discriminator 1 view .LVU75
 316 0002 FEE7     		b	.L15
 317              		.cfi_endproc
 318              	.LFE140:
 320              		.section	.text.MX_SPI2_Init,"ax",%progbits
ARM GAS  /tmp/cc2vvFly.s 			page 15


 321              		.align	1
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	MX_SPI2_Init:
 327              	.LFB136:
 202:Core/Src/main.c **** 
 328              		.loc 1 202 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 212:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 336              		.loc 1 212 3 view .LVU77
 212:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 337              		.loc 1 212 18 is_stmt 0 view .LVU78
 338 0002 0E48     		ldr	r0, .L20
 339 0004 0E4B     		ldr	r3, .L20+4
 340 0006 0360     		str	r3, [r0]
 213:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 341              		.loc 1 213 3 is_stmt 1 view .LVU79
 213:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 342              		.loc 1 213 19 is_stmt 0 view .LVU80
 343 0008 4FF48273 		mov	r3, #260
 344 000c 4360     		str	r3, [r0, #4]
 214:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 345              		.loc 1 214 3 is_stmt 1 view .LVU81
 214:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 346              		.loc 1 214 24 is_stmt 0 view .LVU82
 347 000e 0023     		movs	r3, #0
 348 0010 8360     		str	r3, [r0, #8]
 215:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 349              		.loc 1 215 3 is_stmt 1 view .LVU83
 215:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 350              		.loc 1 215 23 is_stmt 0 view .LVU84
 351 0012 C360     		str	r3, [r0, #12]
 216:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 352              		.loc 1 216 3 is_stmt 1 view .LVU85
 216:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 353              		.loc 1 216 26 is_stmt 0 view .LVU86
 354 0014 0361     		str	r3, [r0, #16]
 217:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 355              		.loc 1 217 3 is_stmt 1 view .LVU87
 217:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 356              		.loc 1 217 23 is_stmt 0 view .LVU88
 357 0016 4361     		str	r3, [r0, #20]
 218:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 358              		.loc 1 218 3 is_stmt 1 view .LVU89
 218:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 359              		.loc 1 218 18 is_stmt 0 view .LVU90
 360 0018 4FF40072 		mov	r2, #512
 361 001c 8261     		str	r2, [r0, #24]
 219:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 362              		.loc 1 219 3 is_stmt 1 view .LVU91
ARM GAS  /tmp/cc2vvFly.s 			page 16


 219:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 363              		.loc 1 219 32 is_stmt 0 view .LVU92
 364 001e C361     		str	r3, [r0, #28]
 220:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 365              		.loc 1 220 3 is_stmt 1 view .LVU93
 220:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 366              		.loc 1 220 23 is_stmt 0 view .LVU94
 367 0020 0362     		str	r3, [r0, #32]
 221:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 368              		.loc 1 221 3 is_stmt 1 view .LVU95
 221:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 369              		.loc 1 221 21 is_stmt 0 view .LVU96
 370 0022 4362     		str	r3, [r0, #36]
 222:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 371              		.loc 1 222 3 is_stmt 1 view .LVU97
 222:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 372              		.loc 1 222 29 is_stmt 0 view .LVU98
 373 0024 4FF40053 		mov	r3, #8192
 374 0028 8362     		str	r3, [r0, #40]
 223:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 375              		.loc 1 223 3 is_stmt 1 view .LVU99
 223:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 376              		.loc 1 223 28 is_stmt 0 view .LVU100
 377 002a 8023     		movs	r3, #128
 378 002c C362     		str	r3, [r0, #44]
 224:Core/Src/main.c ****   {
 379              		.loc 1 224 3 is_stmt 1 view .LVU101
 224:Core/Src/main.c ****   {
 380              		.loc 1 224 7 is_stmt 0 view .LVU102
 381 002e FFF7FEFF 		bl	HAL_SPI_Init
 382              	.LVL15:
 224:Core/Src/main.c ****   {
 383              		.loc 1 224 6 view .LVU103
 384 0032 00B9     		cbnz	r0, .L19
 232:Core/Src/main.c **** 
 385              		.loc 1 232 1 view .LVU104
 386 0034 08BD     		pop	{r3, pc}
 387              	.L19:
 226:Core/Src/main.c ****   }
 388              		.loc 1 226 5 is_stmt 1 view .LVU105
 389 0036 FFF7FEFF 		bl	Error_Handler
 390              	.LVL16:
 391              	.L21:
 392 003a 00BF     		.align	2
 393              	.L20:
 394 003c 00000000 		.word	hspi2
 395 0040 00380040 		.word	1073756160
 396              		.cfi_endproc
 397              	.LFE136:
 399              		.section	.text.SystemClock_Config,"ax",%progbits
 400              		.align	1
 401              		.global	SystemClock_Config
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	SystemClock_Config:
 407              	.LFB135:
ARM GAS  /tmp/cc2vvFly.s 			page 17


 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 408              		.loc 1 156 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 80
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 00B5     		push	{lr}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 14, -4
 415 0002 95B0     		sub	sp, sp, #84
 416              		.cfi_def_cfa_offset 88
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 417              		.loc 1 157 3 view .LVU107
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 418              		.loc 1 157 22 is_stmt 0 view .LVU108
 419 0004 3022     		movs	r2, #48
 420 0006 0021     		movs	r1, #0
 421 0008 08A8     		add	r0, sp, #32
 422 000a FFF7FEFF 		bl	memset
 423              	.LVL17:
 158:Core/Src/main.c **** 
 424              		.loc 1 158 3 is_stmt 1 view .LVU109
 158:Core/Src/main.c **** 
 425              		.loc 1 158 22 is_stmt 0 view .LVU110
 426 000e 0023     		movs	r3, #0
 427 0010 0393     		str	r3, [sp, #12]
 428 0012 0493     		str	r3, [sp, #16]
 429 0014 0593     		str	r3, [sp, #20]
 430 0016 0693     		str	r3, [sp, #24]
 431 0018 0793     		str	r3, [sp, #28]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 432              		.loc 1 162 3 is_stmt 1 view .LVU111
 433              	.LBB10:
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 434              		.loc 1 162 3 view .LVU112
 435 001a 0193     		str	r3, [sp, #4]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 436              		.loc 1 162 3 view .LVU113
 437 001c 204A     		ldr	r2, .L28
 438 001e 116C     		ldr	r1, [r2, #64]
 439 0020 41F08051 		orr	r1, r1, #268435456
 440 0024 1164     		str	r1, [r2, #64]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 441              		.loc 1 162 3 view .LVU114
 442 0026 126C     		ldr	r2, [r2, #64]
 443 0028 02F08052 		and	r2, r2, #268435456
 444 002c 0192     		str	r2, [sp, #4]
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 445              		.loc 1 162 3 view .LVU115
 446 002e 019A     		ldr	r2, [sp, #4]
 447              	.LBE10:
 162:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 448              		.loc 1 162 3 view .LVU116
 163:Core/Src/main.c **** 
 449              		.loc 1 163 3 view .LVU117
 450              	.LBB11:
 163:Core/Src/main.c **** 
 451              		.loc 1 163 3 view .LVU118
ARM GAS  /tmp/cc2vvFly.s 			page 18


 452 0030 0293     		str	r3, [sp, #8]
 163:Core/Src/main.c **** 
 453              		.loc 1 163 3 view .LVU119
 454 0032 1C4B     		ldr	r3, .L28+4
 455 0034 1A68     		ldr	r2, [r3]
 456 0036 42F48042 		orr	r2, r2, #16384
 457 003a 1A60     		str	r2, [r3]
 163:Core/Src/main.c **** 
 458              		.loc 1 163 3 view .LVU120
 459 003c 1B68     		ldr	r3, [r3]
 460 003e 03F48043 		and	r3, r3, #16384
 461 0042 0293     		str	r3, [sp, #8]
 163:Core/Src/main.c **** 
 462              		.loc 1 163 3 view .LVU121
 463 0044 029B     		ldr	r3, [sp, #8]
 464              	.LBE11:
 163:Core/Src/main.c **** 
 465              		.loc 1 163 3 view .LVU122
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 466              		.loc 1 168 3 view .LVU123
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 467              		.loc 1 168 36 is_stmt 0 view .LVU124
 468 0046 0123     		movs	r3, #1
 469 0048 0893     		str	r3, [sp, #32]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 470              		.loc 1 169 3 is_stmt 1 view .LVU125
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 471              		.loc 1 169 30 is_stmt 0 view .LVU126
 472 004a 4FF48033 		mov	r3, #65536
 473 004e 0993     		str	r3, [sp, #36]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 474              		.loc 1 170 3 is_stmt 1 view .LVU127
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 475              		.loc 1 170 34 is_stmt 0 view .LVU128
 476 0050 0223     		movs	r3, #2
 477 0052 0E93     		str	r3, [sp, #56]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 478              		.loc 1 171 3 is_stmt 1 view .LVU129
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 479              		.loc 1 171 35 is_stmt 0 view .LVU130
 480 0054 4FF48002 		mov	r2, #4194304
 481 0058 0F92     		str	r2, [sp, #60]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 482              		.loc 1 172 3 is_stmt 1 view .LVU131
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 483              		.loc 1 172 30 is_stmt 0 view .LVU132
 484 005a 0422     		movs	r2, #4
 485 005c 1092     		str	r2, [sp, #64]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 486              		.loc 1 173 3 is_stmt 1 view .LVU133
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 487              		.loc 1 173 30 is_stmt 0 view .LVU134
 488 005e A822     		movs	r2, #168
 489 0060 1192     		str	r2, [sp, #68]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 490              		.loc 1 174 3 is_stmt 1 view .LVU135
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
ARM GAS  /tmp/cc2vvFly.s 			page 19


 491              		.loc 1 174 30 is_stmt 0 view .LVU136
 492 0062 1293     		str	r3, [sp, #72]
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 493              		.loc 1 175 3 is_stmt 1 view .LVU137
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 494              		.loc 1 175 30 is_stmt 0 view .LVU138
 495 0064 0723     		movs	r3, #7
 496 0066 1393     		str	r3, [sp, #76]
 176:Core/Src/main.c ****   {
 497              		.loc 1 176 3 is_stmt 1 view .LVU139
 176:Core/Src/main.c ****   {
 498              		.loc 1 176 7 is_stmt 0 view .LVU140
 499 0068 08A8     		add	r0, sp, #32
 500 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 501              	.LVL18:
 176:Core/Src/main.c ****   {
 502              		.loc 1 176 6 view .LVU141
 503 006e 98B9     		cbnz	r0, .L26
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 504              		.loc 1 183 3 is_stmt 1 view .LVU142
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 505              		.loc 1 183 31 is_stmt 0 view .LVU143
 506 0070 0F23     		movs	r3, #15
 507 0072 0393     		str	r3, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 508              		.loc 1 185 3 is_stmt 1 view .LVU144
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 509              		.loc 1 185 34 is_stmt 0 view .LVU145
 510 0074 0223     		movs	r3, #2
 511 0076 0493     		str	r3, [sp, #16]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 512              		.loc 1 186 3 is_stmt 1 view .LVU146
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 513              		.loc 1 186 35 is_stmt 0 view .LVU147
 514 0078 0023     		movs	r3, #0
 515 007a 0593     		str	r3, [sp, #20]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 516              		.loc 1 187 3 is_stmt 1 view .LVU148
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 517              		.loc 1 187 36 is_stmt 0 view .LVU149
 518 007c 4FF4A053 		mov	r3, #5120
 519 0080 0693     		str	r3, [sp, #24]
 188:Core/Src/main.c **** 
 520              		.loc 1 188 3 is_stmt 1 view .LVU150
 188:Core/Src/main.c **** 
 521              		.loc 1 188 36 is_stmt 0 view .LVU151
 522 0082 4FF48053 		mov	r3, #4096
 523 0086 0793     		str	r3, [sp, #28]
 190:Core/Src/main.c ****   {
 524              		.loc 1 190 3 is_stmt 1 view .LVU152
 190:Core/Src/main.c ****   {
 525              		.loc 1 190 7 is_stmt 0 view .LVU153
 526 0088 0521     		movs	r1, #5
 527 008a 03A8     		add	r0, sp, #12
 528 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 529              	.LVL19:
 190:Core/Src/main.c ****   {
ARM GAS  /tmp/cc2vvFly.s 			page 20


 530              		.loc 1 190 6 view .LVU154
 531 0090 20B9     		cbnz	r0, .L27
 194:Core/Src/main.c **** 
 532              		.loc 1 194 1 view .LVU155
 533 0092 15B0     		add	sp, sp, #84
 534              		.cfi_remember_state
 535              		.cfi_def_cfa_offset 4
 536              		@ sp needed
 537 0094 5DF804FB 		ldr	pc, [sp], #4
 538              	.L26:
 539              		.cfi_restore_state
 178:Core/Src/main.c ****   }
 540              		.loc 1 178 5 is_stmt 1 view .LVU156
 541 0098 FFF7FEFF 		bl	Error_Handler
 542              	.LVL20:
 543              	.L27:
 192:Core/Src/main.c ****   }
 544              		.loc 1 192 5 view .LVU157
 545 009c FFF7FEFF 		bl	Error_Handler
 546              	.LVL21:
 547              	.L29:
 548              		.align	2
 549              	.L28:
 550 00a0 00380240 		.word	1073887232
 551 00a4 00700040 		.word	1073770496
 552              		.cfi_endproc
 553              	.LFE135:
 555              		.section	.text.main,"ax",%progbits
 556              		.align	1
 557              		.global	main
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 562              	main:
 563              	.LFB134:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 564              		.loc 1 77 1 view -0
 565              		.cfi_startproc
 566              		@ Volatile: function does not return.
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 08B5     		push	{r3, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 3, -8
 572              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 573              		.loc 1 85 3 view .LVU159
 574 0002 FFF7FEFF 		bl	HAL_Init
 575              	.LVL22:
  92:Core/Src/main.c **** 
 576              		.loc 1 92 3 view .LVU160
 577 0006 FFF7FEFF 		bl	SystemClock_Config
 578              	.LVL23:
  99:Core/Src/main.c ****   MX_SPI2_Init();
 579              		.loc 1 99 3 view .LVU161
 580 000a FFF7FEFF 		bl	MX_GPIO_Init
 581              	.LVL24:
ARM GAS  /tmp/cc2vvFly.s 			page 21


 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 582              		.loc 1 100 3 view .LVU162
 583 000e FFF7FEFF 		bl	MX_SPI2_Init
 584              	.LVL25:
 106:Core/Src/main.c **** 
 585              		.loc 1 106 3 view .LVU163
 586 0012 FFF7FEFF 		bl	osKernelInitialize
 587              	.LVL26:
 126:Core/Src/main.c **** 
 588              		.loc 1 126 3 view .LVU164
 126:Core/Src/main.c **** 
 589              		.loc 1 126 19 is_stmt 0 view .LVU165
 590 0016 054A     		ldr	r2, .L33
 591 0018 0021     		movs	r1, #0
 592 001a 0548     		ldr	r0, .L33+4
 593 001c FFF7FEFF 		bl	osThreadNew
 594              	.LVL27:
 126:Core/Src/main.c **** 
 595              		.loc 1 126 17 view .LVU166
 596 0020 044B     		ldr	r3, .L33+8
 597 0022 1860     		str	r0, [r3]
 137:Core/Src/main.c **** 
 598              		.loc 1 137 3 is_stmt 1 view .LVU167
 599 0024 FFF7FEFF 		bl	osKernelStart
 600              	.LVL28:
 601              	.L31:
 142:Core/Src/main.c ****   {
 602              		.loc 1 142 3 discriminator 1 view .LVU168
 147:Core/Src/main.c ****   /* USER CODE END 3 */
 603              		.loc 1 147 3 discriminator 1 view .LVU169
 142:Core/Src/main.c ****   {
 604              		.loc 1 142 9 discriminator 1 view .LVU170
 605 0028 FEE7     		b	.L31
 606              	.L34:
 607 002a 00BF     		.align	2
 608              	.L33:
 609 002c 00000000 		.word	ledTask_attributes
 610 0030 00000000 		.word	LedTask
 611 0034 00000000 		.word	ledTaskHandle
 612              		.cfi_endproc
 613              	.LFE134:
 615              		.global	ledTask_attributes
 616              		.section	.rodata.str1.4,"aMS",%progbits,1
 617              		.align	2
 618              	.LC0:
 619 0000 6C656454 		.ascii	"ledTask\000"
 619      61736B00 
 620              		.section	.rodata.ledTask_attributes,"a"
 621              		.align	2
 624              	ledTask_attributes:
 625 0000 00000000 		.word	.LC0
 626 0004 00000000 		.space	16
 626      00000000 
 626      00000000 
 626      00000000 
 627 0014 00020000 		.word	512
 628 0018 18000000 		.word	24
ARM GAS  /tmp/cc2vvFly.s 			page 22


 629 001c 00000000 		.space	8
 629      00000000 
 630              		.global	ledTaskHandle
 631              		.section	.bss.ledTaskHandle,"aw",%nobits
 632              		.align	2
 635              	ledTaskHandle:
 636 0000 00000000 		.space	4
 637              		.global	hspi2
 638              		.section	.bss.hspi2,"aw",%nobits
 639              		.align	2
 642              	hspi2:
 643 0000 00000000 		.space	88
 643      00000000 
 643      00000000 
 643      00000000 
 643      00000000 
 644              		.text
 645              	.Letext0:
 646              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 647              		.file 4 "/home/evence/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 648              		.file 5 "/home/evence/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 649              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 650              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 651              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 652              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 653              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 654              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 655              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 656              		.file 13 "Core/Inc/main.h"
 657              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 658              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 659              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 660              		.file 17 "<built-in>"
ARM GAS  /tmp/cc2vvFly.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc2vvFly.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc2vvFly.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc2vvFly.s:200    .text.MX_GPIO_Init:00000000000000d4 $d
     /tmp/cc2vvFly.s:207    .text.LedTask:0000000000000000 $t
     /tmp/cc2vvFly.s:213    .text.LedTask:0000000000000000 LedTask
     /tmp/cc2vvFly.s:239    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc2vvFly.s:245    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc2vvFly.s:278    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/cc2vvFly.s:283    .text.Error_Handler:0000000000000000 $t
     /tmp/cc2vvFly.s:289    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc2vvFly.s:321    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/cc2vvFly.s:326    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/cc2vvFly.s:394    .text.MX_SPI2_Init:000000000000003c $d
     /tmp/cc2vvFly.s:642    .bss.hspi2:0000000000000000 hspi2
     /tmp/cc2vvFly.s:400    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc2vvFly.s:406    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc2vvFly.s:550    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/cc2vvFly.s:556    .text.main:0000000000000000 $t
     /tmp/cc2vvFly.s:562    .text.main:0000000000000000 main
     /tmp/cc2vvFly.s:609    .text.main:000000000000002c $d
     /tmp/cc2vvFly.s:624    .rodata.ledTask_attributes:0000000000000000 ledTask_attributes
     /tmp/cc2vvFly.s:635    .bss.ledTaskHandle:0000000000000000 ledTaskHandle
     /tmp/cc2vvFly.s:617    .rodata.str1.4:0000000000000000 $d
     /tmp/cc2vvFly.s:621    .rodata.ledTask_attributes:0000000000000000 $d
     /tmp/cc2vvFly.s:632    .bss.ledTaskHandle:0000000000000000 $d
     /tmp/cc2vvFly.s:639    .bss.hspi2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
osDelay
HAL_IncTick
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
