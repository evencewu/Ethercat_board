ARM GAS  /tmp/ccoKziDo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"esc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ESC_check_id_request,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	ESC_check_id_request:
  26              	.LVL0:
  27              	.LFB36:
  28              		.file 1 "Lib/soes/src/esc.c"
   1:Lib/soes/src/esc.c **** /*
   2:Lib/soes/src/esc.c ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:Lib/soes/src/esc.c ****  * LICENSE file in the project root for full license information
   4:Lib/soes/src/esc.c ****  */
   5:Lib/soes/src/esc.c **** #include <string.h>
   6:Lib/soes/src/esc.c **** #include <cc.h>
   7:Lib/soes/src/esc.c **** #include "esc.h"
   8:Lib/soes/src/esc.c **** #include "esc_coe.h"
   9:Lib/soes/src/esc.c **** #include "esc_foe.h"
  10:Lib/soes/src/esc.c **** 
  11:Lib/soes/src/esc.c **** /** \file
  12:Lib/soes/src/esc.c ****  * \brief
  13:Lib/soes/src/esc.c ****  * Base EtherCAT functions for handling the Data Link Layer and Malilboxes
  14:Lib/soes/src/esc.c ****  *
  15:Lib/soes/src/esc.c ****  *
  16:Lib/soes/src/esc.c ****  * State machine and mailbox support.
  17:Lib/soes/src/esc.c ****  */
  18:Lib/soes/src/esc.c **** 
  19:Lib/soes/src/esc.c **** /** Write AL Status Code to the ESC.
  20:Lib/soes/src/esc.c ****  *
  21:Lib/soes/src/esc.c ****  * @param[in] errornumber   = Write an by EtherCAT specified Error number register 0x134 AL Status 
  22:Lib/soes/src/esc.c ****  */
  23:Lib/soes/src/esc.c **** void ESC_ALerror (uint16_t errornumber)
  24:Lib/soes/src/esc.c **** {
  25:Lib/soes/src/esc.c ****    uint16_t dummy;
  26:Lib/soes/src/esc.c ****    ESCvar.ALerror = errornumber;
  27:Lib/soes/src/esc.c ****    dummy = htoes (errornumber);
  28:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALERROR, &dummy, sizeof (dummy));
  29:Lib/soes/src/esc.c **** }
  30:Lib/soes/src/esc.c **** 
ARM GAS  /tmp/ccoKziDo.s 			page 2


  31:Lib/soes/src/esc.c **** /** Write AL Status to the ESC.
  32:Lib/soes/src/esc.c ****  *
  33:Lib/soes/src/esc.c ****  * @param[in] status   = Write current slave status to register 0x130 AL Status
  34:Lib/soes/src/esc.c ****  * reflecting actual state and error indication if present
  35:Lib/soes/src/esc.c ****  */
  36:Lib/soes/src/esc.c **** void ESC_ALstatus (uint8_t status)
  37:Lib/soes/src/esc.c **** {
  38:Lib/soes/src/esc.c ****    uint16_t dummy;
  39:Lib/soes/src/esc.c ****    ESCvar.ALstatus = status;
  40:Lib/soes/src/esc.c ****    dummy = htoes ((uint16_t) status);
  41:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALSTATUS, &dummy, sizeof (dummy));
  42:Lib/soes/src/esc.c **** }
  43:Lib/soes/src/esc.c **** 
  44:Lib/soes/src/esc.c **** /** Write AL Status and AL Status code to the ESC.
  45:Lib/soes/src/esc.c ****  *  Call pre- and poststate change hook
  46:Lib/soes/src/esc.c ****  *
  47:Lib/soes/src/esc.c ****  * @param[in] status   = Write current slave status to register 0x130 AL Status
  48:Lib/soes/src/esc.c ****  * reflecting actual state and error indication if present
  49:Lib/soes/src/esc.c ****  * @param[in] errornumber   = Write an by EtherCAT specified Error number
  50:Lib/soes/src/esc.c ****  * register 0x134 AL Status Code
  51:Lib/soes/src/esc.c ****  */
  52:Lib/soes/src/esc.c **** void ESC_ALstatusgotoerror (uint8_t status, uint16_t errornumber)
  53:Lib/soes/src/esc.c **** {
  54:Lib/soes/src/esc.c ****    uint8_t an, as;
  55:Lib/soes/src/esc.c **** 
  56:Lib/soes/src/esc.c ****    if(status & ESCop)
  57:Lib/soes/src/esc.c ****    {
  58:Lib/soes/src/esc.c ****       /* Erroneous input, ignore */
  59:Lib/soes/src/esc.c ****       return;
  60:Lib/soes/src/esc.c ****    }
  61:Lib/soes/src/esc.c ****    /* Mask error ack of current state */
  62:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_ERRACKMASK;
  63:Lib/soes/src/esc.c ****    an = as;
  64:Lib/soes/src/esc.c ****    /* Set the state transition, new state in high bits and old in bits  */
  65:Lib/soes/src/esc.c ****    as = (uint8_t)(((status & ESCREG_AL_ERRACKMASK) << 4) | (as & 0x0f));
  66:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
  67:Lib/soes/src/esc.c ****    if (ESCvar.pre_state_change_hook != NULL)
  68:Lib/soes/src/esc.c ****    {
  69:Lib/soes/src/esc.c ****       ESCvar.pre_state_change_hook (&as, &an);
  70:Lib/soes/src/esc.c ****    }
  71:Lib/soes/src/esc.c ****    /* Stop outputs if active */
  72:Lib/soes/src/esc.c ****    if ((CC_ATOMIC_GET(ESCvar.App.state) & APPSTATE_OUTPUT) > 0)
  73:Lib/soes/src/esc.c ****    {
  74:Lib/soes/src/esc.c ****       ESC_stopoutput();
  75:Lib/soes/src/esc.c ****    }
  76:Lib/soes/src/esc.c ****    ESC_ALerror(errornumber);
  77:Lib/soes/src/esc.c ****    ESC_ALstatus(status);
  78:Lib/soes/src/esc.c ****    an = status;
  79:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
  80:Lib/soes/src/esc.c ****    if (ESCvar.post_state_change_hook != NULL)
  81:Lib/soes/src/esc.c ****    {
  82:Lib/soes/src/esc.c ****       ESCvar.post_state_change_hook (&as, &an);
  83:Lib/soes/src/esc.c ****    }
  84:Lib/soes/src/esc.c **** }
  85:Lib/soes/src/esc.c **** 
  86:Lib/soes/src/esc.c **** /** Write ALeventMask register 0x204.
  87:Lib/soes/src/esc.c ****  *
ARM GAS  /tmp/ccoKziDo.s 			page 3


  88:Lib/soes/src/esc.c ****  * @param[in] n   = AL Event Mask
  89:Lib/soes/src/esc.c ****  */
  90:Lib/soes/src/esc.c **** void ESC_ALeventmaskwrite (uint32_t mask)
  91:Lib/soes/src/esc.c **** {
  92:Lib/soes/src/esc.c ****    uint32_t aleventmask;
  93:Lib/soes/src/esc.c ****    aleventmask = htoel(mask);
  94:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENTMASK, &aleventmask, sizeof(aleventmask));
  95:Lib/soes/src/esc.c **** }
  96:Lib/soes/src/esc.c **** 
  97:Lib/soes/src/esc.c **** /** Read AleventMask register 0x204.
  98:Lib/soes/src/esc.c ****  *
  99:Lib/soes/src/esc.c ****  * @return value of register AL Event Mask
 100:Lib/soes/src/esc.c ****  */
 101:Lib/soes/src/esc.c **** uint32_t ESC_ALeventmaskread (void)
 102:Lib/soes/src/esc.c **** {
 103:Lib/soes/src/esc.c ****    uint32_t aleventmask;
 104:Lib/soes/src/esc.c **** 
 105:Lib/soes/src/esc.c ****    ESC_read (ESCREG_ALEVENTMASK, &aleventmask, sizeof(aleventmask));
 106:Lib/soes/src/esc.c ****    return htoel(aleventmask);
 107:Lib/soes/src/esc.c **** }
 108:Lib/soes/src/esc.c **** 
 109:Lib/soes/src/esc.c **** /** Write ALevent register 0x220.
 110:Lib/soes/src/esc.c ****  *
 111:Lib/soes/src/esc.c ****  * @param[in] n   = AL Event Mask
 112:Lib/soes/src/esc.c ****  */
 113:Lib/soes/src/esc.c **** void ESC_ALeventwrite (uint32_t event)
 114:Lib/soes/src/esc.c **** {
 115:Lib/soes/src/esc.c ****    uint32_t alevent;
 116:Lib/soes/src/esc.c ****    alevent = htoel(event);
 117:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENT, &alevent, sizeof(alevent));
 118:Lib/soes/src/esc.c **** }
 119:Lib/soes/src/esc.c **** 
 120:Lib/soes/src/esc.c **** /** Read Alevent register 0x220.
 121:Lib/soes/src/esc.c ****  *
 122:Lib/soes/src/esc.c ****  * @return value of register AL Event Mask
 123:Lib/soes/src/esc.c ****  */
 124:Lib/soes/src/esc.c **** uint32_t ESC_ALeventread (void)
 125:Lib/soes/src/esc.c **** {
 126:Lib/soes/src/esc.c ****    uint32_t alevent;
 127:Lib/soes/src/esc.c ****    ESC_read (ESCREG_ALEVENT, &alevent, sizeof(alevent));
 128:Lib/soes/src/esc.c ****    return htoel(alevent);
 129:Lib/soes/src/esc.c **** }
 130:Lib/soes/src/esc.c **** 
 131:Lib/soes/src/esc.c **** /** Read SM Activate register 0x806(+ offset to SyncManager n) to acknowledge a
 132:Lib/soes/src/esc.c ****  * Sync Manager event Bit 3 in ALevent. The result is not used.
 133:Lib/soes/src/esc.c ****  *
 134:Lib/soes/src/esc.c ****  * @param[in] n   = Read Sync Manager no. n
 135:Lib/soes/src/esc.c ****  */
 136:Lib/soes/src/esc.c **** void ESC_SMack (uint8_t n)
 137:Lib/soes/src/esc.c **** {
 138:Lib/soes/src/esc.c ****    uint8_t dummy;
 139:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESCREG_SM0ACTIVATE + (n << 3)), &dummy, 1);
 140:Lib/soes/src/esc.c **** }
 141:Lib/soes/src/esc.c **** 
 142:Lib/soes/src/esc.c **** /** Read SM Status register 0x805(+ offset to SyncManager n) and save the
 143:Lib/soes/src/esc.c ****  * result in global variable ESCvar.SM[n].
 144:Lib/soes/src/esc.c ****  *
ARM GAS  /tmp/ccoKziDo.s 			page 4


 145:Lib/soes/src/esc.c ****  * @param[in] n   = Read Sync Manager no. n
 146:Lib/soes/src/esc.c ****  */
 147:Lib/soes/src/esc.c **** void ESC_SMstatus (uint8_t n)
 148:Lib/soes/src/esc.c **** {
 149:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 150:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 151:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESCREG_SM0STATUS + (n << 3)), &(sm->Status), 1);
 152:Lib/soes/src/esc.c **** }
 153:Lib/soes/src/esc.c **** 
 154:Lib/soes/src/esc.c **** /** Write ESCvar.SM[n] data to ESC PDI control register 0x807(+ offset to SyncManager n).
 155:Lib/soes/src/esc.c ****  *
 156:Lib/soes/src/esc.c ****  * @param[in] n   = Write to Sync Manager no. n
 157:Lib/soes/src/esc.c ****  */
 158:Lib/soes/src/esc.c **** void ESC_SMwritepdi (uint8_t n)
 159:Lib/soes/src/esc.c **** {
 160:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 161:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 162:Lib/soes/src/esc.c ****    ESC_write ((uint16_t)(ESCREG_SM0PDI + (n << 3)), &(sm->ActPDI), 1);
 163:Lib/soes/src/esc.c **** }
 164:Lib/soes/src/esc.c **** 
 165:Lib/soes/src/esc.c **** /** Write 0 to Bit0 in SM PDI control register 0x807(+ offset to SyncManager n) to Activate the Syn
 166:Lib/soes/src/esc.c ****  *
 167:Lib/soes/src/esc.c ****  * @param[in] n   = Write to Sync Manager no. n
 168:Lib/soes/src/esc.c ****  */
 169:Lib/soes/src/esc.c **** void ESC_SMenable (uint8_t n)
 170:Lib/soes/src/esc.c **** {
 171:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 172:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 173:Lib/soes/src/esc.c ****    sm->ActPDI &= (uint8_t)~ESCREG_SMENABLE_BIT;
 174:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 175:Lib/soes/src/esc.c **** }
 176:Lib/soes/src/esc.c **** /** Write 1 to Bit0 in SM PDI control register 0x807(+ offset to SyncManager n) to De-activte the S
 177:Lib/soes/src/esc.c ****  *
 178:Lib/soes/src/esc.c ****  * @param[in] n   = Write to Sync Manager no. n
 179:Lib/soes/src/esc.c ****  */
 180:Lib/soes/src/esc.c **** void ESC_SMdisable (uint8_t n)
 181:Lib/soes/src/esc.c **** {
 182:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 183:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 184:Lib/soes/src/esc.c ****    sm->ActPDI |= ESCREG_SMENABLE_BIT;
 185:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 186:Lib/soes/src/esc.c **** }
 187:Lib/soes/src/esc.c **** /** Read Configured Station Address register 0x010 assigned by the Master.
 188:Lib/soes/src/esc.c ****  *
 189:Lib/soes/src/esc.c ****  */
 190:Lib/soes/src/esc.c **** void ESC_address (void)
 191:Lib/soes/src/esc.c **** {
 192:Lib/soes/src/esc.c ****    ESC_read (ESCREG_ADDRESS, (void *) &ESCvar.address, sizeof (ESCvar.address));
 193:Lib/soes/src/esc.c ****    ESCvar.address = etohs (ESCvar.address);
 194:Lib/soes/src/esc.c **** }
 195:Lib/soes/src/esc.c **** 
 196:Lib/soes/src/esc.c **** /** Read Watchdog Status register 0x440. Result Bit0 0= Expired, 1= Active or disabled.
 197:Lib/soes/src/esc.c ****  *
 198:Lib/soes/src/esc.c ****  * @return value of register Watchdog Status.
 199:Lib/soes/src/esc.c ****  */
 200:Lib/soes/src/esc.c **** uint8_t ESC_WDstatus (void)
 201:Lib/soes/src/esc.c **** {
ARM GAS  /tmp/ccoKziDo.s 			page 5


 202:Lib/soes/src/esc.c ****    uint16_t wdstatus;
 203:Lib/soes/src/esc.c ****    ESC_read (ESCREG_WDSTATUS, &wdstatus, 2);
 204:Lib/soes/src/esc.c ****    wdstatus = etohs (wdstatus);
 205:Lib/soes/src/esc.c ****    return (uint8_t) wdstatus;
 206:Lib/soes/src/esc.c **** }
 207:Lib/soes/src/esc.c **** 
 208:Lib/soes/src/esc.c **** /** Read SYNC Out Unit activation registers 0x981
 209:Lib/soes/src/esc.c ****  *
 210:Lib/soes/src/esc.c ****  * @return value of register Activation.
 211:Lib/soes/src/esc.c ****  */
 212:Lib/soes/src/esc.c **** uint8_t ESC_SYNCactivation (void)
 213:Lib/soes/src/esc.c **** {
 214:Lib/soes/src/esc.c ****    uint8_t activation;
 215:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC_ACT, &activation, sizeof(activation));
 216:Lib/soes/src/esc.c ****    return activation;
 217:Lib/soes/src/esc.c **** }
 218:Lib/soes/src/esc.c **** 
 219:Lib/soes/src/esc.c **** /** Read SYNC0 cycle time
 220:Lib/soes/src/esc.c ****  *
 221:Lib/soes/src/esc.c ****  * @return value of register SYNC0 cycle time
 222:Lib/soes/src/esc.c ****  */
 223:Lib/soes/src/esc.c **** uint32_t ESC_SYNC0cycletime (void)
 224:Lib/soes/src/esc.c **** {
 225:Lib/soes/src/esc.c ****    uint32_t cycletime;
 226:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC0_CYCLE_TIME, &cycletime, sizeof(cycletime));
 227:Lib/soes/src/esc.c ****    cycletime = etohl (cycletime);
 228:Lib/soes/src/esc.c ****    return cycletime;
 229:Lib/soes/src/esc.c **** }
 230:Lib/soes/src/esc.c **** 
 231:Lib/soes/src/esc.c **** /** Read SYNC1 cycle time
 232:Lib/soes/src/esc.c ****  *
 233:Lib/soes/src/esc.c ****  * @return value of register SYNC1 cycle time
 234:Lib/soes/src/esc.c ****  */
 235:Lib/soes/src/esc.c **** uint32_t ESC_SYNC1cycletime (void)
 236:Lib/soes/src/esc.c **** {
 237:Lib/soes/src/esc.c ****    uint32_t cycletime;
 238:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC1_CYCLE_TIME, &cycletime, 4);
 239:Lib/soes/src/esc.c ****    cycletime = etohl (cycletime);
 240:Lib/soes/src/esc.c ****    return cycletime;
 241:Lib/soes/src/esc.c **** }
 242:Lib/soes/src/esc.c **** 
 243:Lib/soes/src/esc.c **** 
 244:Lib/soes/src/esc.c **** /** Validate the DC values if the SYNC unit is activated.
 245:Lib/soes/src/esc.c ****  *
 246:Lib/soes/src/esc.c ****  * @return = 0 if OK, else ERROR code to be set by caller.
 247:Lib/soes/src/esc.c ****  */
 248:Lib/soes/src/esc.c **** uint16_t ESC_checkDC (void)
 249:Lib/soes/src/esc.c **** {
 250:Lib/soes/src/esc.c ****    uint16_t ret = 0;
 251:Lib/soes/src/esc.c **** 
 252:Lib/soes/src/esc.c ****    uint8_t sync_act = ESC_SYNCactivation();
 253:Lib/soes/src/esc.c ****    /* Do we need to check sync settings? */
 254:Lib/soes/src/esc.c ****    if((sync_act & (ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_AUTO_ACTIVATED)) > 0)
 255:Lib/soes/src/esc.c ****    {
 256:Lib/soes/src/esc.c ****       /* Trigger a by the application given DC check handler, return error if
 257:Lib/soes/src/esc.c ****        *  non is given
 258:Lib/soes/src/esc.c ****        */
ARM GAS  /tmp/ccoKziDo.s 			page 6


 259:Lib/soes/src/esc.c ****       ret = ALERR_DCINVALIDSYNCCFG;
 260:Lib/soes/src/esc.c ****       if(ESCvar.esc_check_dc_handler != NULL)
 261:Lib/soes/src/esc.c ****       {
 262:Lib/soes/src/esc.c ****          ret = (ESCvar.esc_check_dc_handler)();
 263:Lib/soes/src/esc.c ****       }
 264:Lib/soes/src/esc.c ****    }
 265:Lib/soes/src/esc.c ****    else
 266:Lib/soes/src/esc.c ****    {
 267:Lib/soes/src/esc.c ****       ESCvar.dcsync = 0;
 268:Lib/soes/src/esc.c ****       ESCvar.synccounter = 0;
 269:Lib/soes/src/esc.c ****    }
 270:Lib/soes/src/esc.c **** 
 271:Lib/soes/src/esc.c ****    return ret;
 272:Lib/soes/src/esc.c **** }
 273:Lib/soes/src/esc.c **** 
 274:Lib/soes/src/esc.c **** /** Check mailbox status by reading all SyncManager 0 and 1 data. The read values
 275:Lib/soes/src/esc.c ****  * are compared with local definitions for SM Physical Address, SM Length and SM Control.
 276:Lib/soes/src/esc.c ****  * If we check fails we disable Mailboxes by disabling SyncManager 0 and 1 and return
 277:Lib/soes/src/esc.c ****  * state Init with Error flag set.
 278:Lib/soes/src/esc.c ****  *
 279:Lib/soes/src/esc.c ****  * @param[in] state   = Current state request read from ALControl 0x0120
 280:Lib/soes/src/esc.c ****  * @return if all Mailbox values is correct we return incoming state request, otherwise
 281:Lib/soes/src/esc.c ****  * we return state Init with Error flag set.
 282:Lib/soes/src/esc.c ****  */
 283:Lib/soes/src/esc.c **** uint8_t ESC_checkmbx (uint8_t state)
 284:Lib/soes/src/esc.c **** {
 285:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 286:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM0, (void *) &ESCvar.SM[0], sizeof (ESCvar.SM[0]));
 287:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM1, (void *) &ESCvar.SM[1], sizeof (ESCvar.SM[1]));
 288:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[0];
 289:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_MBX0_sma) || (etohs (SM->Length) != ESC_MBX0_sml)
 290:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 291:Lib/soes/src/esc.c ****    {
 292:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM0;
 293:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 294:Lib/soes/src/esc.c ****       ESC_SMdisable (1);
 295:Lib/soes/src/esc.c ****       return (uint8_t) (ESCinit | ESCerror);      //fail state change
 296:Lib/soes/src/esc.c ****    }
 297:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[1];
 298:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_MBX1_sma) || (etohs (SM->Length) != ESC_MBX1_sml)
 299:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 300:Lib/soes/src/esc.c ****    {
 301:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM1;
 302:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 303:Lib/soes/src/esc.c ****       ESC_SMdisable (1);
 304:Lib/soes/src/esc.c ****       return ESCinit | ESCerror;        //fail state change
 305:Lib/soes/src/esc.c ****    }
 306:Lib/soes/src/esc.c ****    return state;
 307:Lib/soes/src/esc.c **** }
 308:Lib/soes/src/esc.c **** /** Try to start mailboxes for current ALControl state request by enabling SyncManager 0 and 1.
 309:Lib/soes/src/esc.c ****  * If all mailbox settings is correct we return incoming state request, otherwise
 310:Lib/soes/src/esc.c ****  * we return state Init with Error flag set and update local ALerror with code 0x16 Invalid
 311:Lib/soes/src/esc.c ****  * mailbox configuration.
 312:Lib/soes/src/esc.c ****  *
 313:Lib/soes/src/esc.c ****  * @param[in] state   = Current state request read from ALControl 0x0120
 314:Lib/soes/src/esc.c ****  * @return if all Mailbox values is correct we return incoming state, otherwise
 315:Lib/soes/src/esc.c ****  * we return state Init with Error flag set.
ARM GAS  /tmp/ccoKziDo.s 			page 7


 316:Lib/soes/src/esc.c ****  */
 317:Lib/soes/src/esc.c **** uint8_t ESC_startmbx (uint8_t state)
 318:Lib/soes/src/esc.c **** {
 319:Lib/soes/src/esc.c ****    /* Assign SM settings */
 320:Lib/soes/src/esc.c ****    ESCvar.activembxsize = MBXSIZE;
 321:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mb[0];
 322:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mb[1];
 323:Lib/soes/src/esc.c **** 
 324:Lib/soes/src/esc.c **** 
 325:Lib/soes/src/esc.c ****    ESC_SMenable (0);
 326:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 327:Lib/soes/src/esc.c ****    ESC_SMstatus (0);
 328:Lib/soes/src/esc.c ****    ESC_SMstatus (1);
 329:Lib/soes/src/esc.c ****    if ((state = ESC_checkmbx (state)) & ESCerror)
 330:Lib/soes/src/esc.c ****    {
 331:Lib/soes/src/esc.c ****       ESC_ALerror (ALERR_INVALIDMBXCONFIG);
 332:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 333:Lib/soes/src/esc.c ****    }
 334:Lib/soes/src/esc.c ****    else
 335:Lib/soes/src/esc.c ****    {
 336:Lib/soes/src/esc.c ****       ESCvar.toggle = ESCvar.SM[1].ECrep;       //sync repeat request toggle state
 337:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 338:Lib/soes/src/esc.c ****    }
 339:Lib/soes/src/esc.c ****    return state;
 340:Lib/soes/src/esc.c **** }
 341:Lib/soes/src/esc.c **** 
 342:Lib/soes/src/esc.c **** /** Try to start bootstrap mailboxes for current ALControl state request by enabling SyncManager 0 
 343:Lib/soes/src/esc.c ****  * If all mailbox settings is correct we return incoming state request, otherwise
 344:Lib/soes/src/esc.c ****  * we return state Init with Error flag set and update local ALerror with code 0x16 Invalid
 345:Lib/soes/src/esc.c ****  * mailbox configuration.
 346:Lib/soes/src/esc.c ****  *
 347:Lib/soes/src/esc.c ****  * @param[in] state   = Current state request read from ALControl 0x0120
 348:Lib/soes/src/esc.c ****  * @return if all Mailbox values is correct we return incoming state, otherwise
 349:Lib/soes/src/esc.c ****  * we return state Init with Error flag set.
 350:Lib/soes/src/esc.c ****  */
 351:Lib/soes/src/esc.c **** uint8_t ESC_startmbxboot (uint8_t state)
 352:Lib/soes/src/esc.c **** {
 353:Lib/soes/src/esc.c ****    /* Assign SM settings */
 354:Lib/soes/src/esc.c ****    ESCvar.activembxsize = MBXSIZEBOOT;
 355:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mbboot[0];
 356:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mbboot[1];
 357:Lib/soes/src/esc.c **** 
 358:Lib/soes/src/esc.c ****    ESC_SMenable (0);
 359:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 360:Lib/soes/src/esc.c ****    ESC_SMstatus (0);
 361:Lib/soes/src/esc.c ****    ESC_SMstatus (1);
 362:Lib/soes/src/esc.c ****    if ((state = ESC_checkmbx (state)) & ESCerror)
 363:Lib/soes/src/esc.c ****    {
 364:Lib/soes/src/esc.c ****       ESC_ALerror (ALERR_INVALIDBOOTMBXCONFIG);
 365:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 366:Lib/soes/src/esc.c ****    }
 367:Lib/soes/src/esc.c ****    else
 368:Lib/soes/src/esc.c ****    {
 369:Lib/soes/src/esc.c ****       ESCvar.toggle = ESCvar.SM[1].ECrep;       //sync repeat request toggle state
 370:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 371:Lib/soes/src/esc.c ****    }
 372:Lib/soes/src/esc.c ****    return state;
ARM GAS  /tmp/ccoKziDo.s 			page 8


 373:Lib/soes/src/esc.c **** }
 374:Lib/soes/src/esc.c **** 
 375:Lib/soes/src/esc.c **** /** Stop mailboxes by disabling SyncManager 0 and 1. Clear local mailbox variables
 376:Lib/soes/src/esc.c ****  * stored in ESCvar.
 377:Lib/soes/src/esc.c ****  */
 378:Lib/soes/src/esc.c **** void ESC_stopmbx (void)
 379:Lib/soes/src/esc.c **** {
 380:Lib/soes/src/esc.c ****    uint8_t n;
 381:Lib/soes/src/esc.c ****    ESCvar.MBXrun = 0;
 382:Lib/soes/src/esc.c ****    ESC_SMdisable (0);
 383:Lib/soes/src/esc.c ****    ESC_SMdisable (1);
 384:Lib/soes/src/esc.c ****    for (n = 0; n < ESC_MBXBUFFERS; n++)
 385:Lib/soes/src/esc.c ****    {
 386:Lib/soes/src/esc.c ****       MBXcontrol[n].state = MBXstate_idle;
 387:Lib/soes/src/esc.c ****    }
 388:Lib/soes/src/esc.c ****    ESCvar.mbxoutpost = 0;
 389:Lib/soes/src/esc.c ****    ESCvar.mbxbackup = 0;
 390:Lib/soes/src/esc.c ****    ESCvar.xoe = 0;
 391:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 392:Lib/soes/src/esc.c ****    ESCvar.toggle = 0;
 393:Lib/soes/src/esc.c ****    ESCvar.mbxincnt = 0;
 394:Lib/soes/src/esc.c ****    ESCvar.segmented = 0;
 395:Lib/soes/src/esc.c ****    ESCvar.frags = 0;
 396:Lib/soes/src/esc.c ****    ESCvar.fragsleft = 0;
 397:Lib/soes/src/esc.c ****    ESCvar.txcue = 0;
 398:Lib/soes/src/esc.c ****    ESCvar.index = 0;
 399:Lib/soes/src/esc.c ****    ESCvar.subindex = 0;
 400:Lib/soes/src/esc.c ****    ESCvar.flags = 0;
 401:Lib/soes/src/esc.c **** }
 402:Lib/soes/src/esc.c **** 
 403:Lib/soes/src/esc.c **** /** Read Receive mailbox and store data in local ESCvar.MBX variable.
 404:Lib/soes/src/esc.c ****  * Combined function for bootstrap and other states. State check decides
 405:Lib/soes/src/esc.c ****  * which one to read.
 406:Lib/soes/src/esc.c ****  */
 407:Lib/soes/src/esc.c **** void ESC_readmbx (void)
 408:Lib/soes/src/esc.c **** {
 409:Lib/soes/src/esc.c ****    _MBX *MB = (_MBX *)&MBX[0];
 410:Lib/soes/src/esc.c ****    uint16_t length;
 411:Lib/soes/src/esc.c **** 
 412:Lib/soes/src/esc.c ****    ESC_read (ESC_MBX0_sma, MB, ESC_MBXHSIZE);
 413:Lib/soes/src/esc.c ****    length = etohs (MB->header.length);
 414:Lib/soes/src/esc.c **** 
 415:Lib/soes/src/esc.c ****    if (length > (ESC_MBX0_sml - ESC_MBXHSIZE))
 416:Lib/soes/src/esc.c ****    {
 417:Lib/soes/src/esc.c ****       length = (uint16_t)(ESC_MBX0_sml - ESC_MBXHSIZE);
 418:Lib/soes/src/esc.c ****    }
 419:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESC_MBX0_sma + ESC_MBXHSIZE), MB->b, length);
 420:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX0_sml)
 421:Lib/soes/src/esc.c ****    {
 422:Lib/soes/src/esc.c ****       ESC_read (ESC_MBX0_sme, &length, 1);
 423:Lib/soes/src/esc.c ****    }
 424:Lib/soes/src/esc.c **** 
 425:Lib/soes/src/esc.c ****    MBXcontrol[0].state = MBXstate_inclaim;
 426:Lib/soes/src/esc.c **** }
 427:Lib/soes/src/esc.c **** /** Write local mailbox buffer ESCvar.MBX[n] to Send mailbox.
 428:Lib/soes/src/esc.c ****  * Combined function for bootstrap and other states. State check decides
 429:Lib/soes/src/esc.c ****  * which one to write.
ARM GAS  /tmp/ccoKziDo.s 			page 9


 430:Lib/soes/src/esc.c ****  *
 431:Lib/soes/src/esc.c ****  * @param[in] n   = Which local mailbox buffer n to send.
 432:Lib/soes/src/esc.c ****  */
 433:Lib/soes/src/esc.c **** void ESC_writembx (uint8_t n)
 434:Lib/soes/src/esc.c **** {
 435:Lib/soes/src/esc.c ****    _MBXh *MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 436:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 437:Lib/soes/src/esc.c ****    uint16_t length;
 438:Lib/soes/src/esc.c ****    length = etohs (MBh->length);
 439:Lib/soes/src/esc.c **** 
 440:Lib/soes/src/esc.c ****    if (length > (ESC_MBX1_sml - ESC_MBXHSIZE))
 441:Lib/soes/src/esc.c ****    {
 442:Lib/soes/src/esc.c ****       length = (uint16_t)(ESC_MBX1_sml - ESC_MBXHSIZE);
 443:Lib/soes/src/esc.c ****    }
 444:Lib/soes/src/esc.c ****    ESC_write (ESC_MBX1_sma, MBh, (uint16_t)(ESC_MBXHSIZE + length));
 445:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX1_sml)
 446:Lib/soes/src/esc.c ****    {
 447:Lib/soes/src/esc.c ****       ESC_write (ESC_MBX1_sme, &dummy, 1);
 448:Lib/soes/src/esc.c ****    }
 449:Lib/soes/src/esc.c **** 
 450:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 0;
 451:Lib/soes/src/esc.c **** }
 452:Lib/soes/src/esc.c **** 
 453:Lib/soes/src/esc.c **** /** TBD
 454:Lib/soes/src/esc.c ****  */
 455:Lib/soes/src/esc.c **** void ESC_ackmbxread (void)
 456:Lib/soes/src/esc.c **** {
 457:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 458:Lib/soes/src/esc.c **** 
 459:Lib/soes/src/esc.c ****    ESC_write (ESC_MBX1_sma, &dummy, 1);
 460:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 461:Lib/soes/src/esc.c **** }
 462:Lib/soes/src/esc.c **** 
 463:Lib/soes/src/esc.c **** /** Allocate and prepare a mailbox buffer. Take the first Idle buffer from the End.
 464:Lib/soes/src/esc.c ****  * Set Mailbox control state to be used for outbox and fill the mailbox buffer with
 465:Lib/soes/src/esc.c ****  * address master and mailbox next CNT value between 1-7.
 466:Lib/soes/src/esc.c ****  *
 467:Lib/soes/src/esc.c ****  * @return The index of Mailbox buffer prepared for outbox. IF no buffer is available return 0.
 468:Lib/soes/src/esc.c ****  */
 469:Lib/soes/src/esc.c **** uint8_t ESC_claimbuffer (void)
 470:Lib/soes/src/esc.c **** {
 471:Lib/soes/src/esc.c ****    _MBXh *MBh;
 472:Lib/soes/src/esc.c ****    uint8_t n = ESC_MBXBUFFERS - 1;
 473:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state))
 474:Lib/soes/src/esc.c ****    {
 475:Lib/soes/src/esc.c ****       n--;
 476:Lib/soes/src/esc.c ****    }
 477:Lib/soes/src/esc.c ****    if (n)
 478:Lib/soes/src/esc.c ****    {
 479:Lib/soes/src/esc.c ****       MBXcontrol[n].state = MBXstate_outclaim;
 480:Lib/soes/src/esc.c ****       MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 481:Lib/soes/src/esc.c ****       ESCvar.mbxcnt++;
 482:Lib/soes/src/esc.c ****       ESCvar.mbxcnt = (ESCvar.mbxcnt & 0x07);
 483:Lib/soes/src/esc.c ****       if (ESCvar.mbxcnt == 0)
 484:Lib/soes/src/esc.c ****       {
 485:Lib/soes/src/esc.c ****          ESCvar.mbxcnt = 1;
 486:Lib/soes/src/esc.c ****       }
ARM GAS  /tmp/ccoKziDo.s 			page 10


 487:Lib/soes/src/esc.c ****       MBh->address = htoes (0x0000);      // destination is master
 488:Lib/soes/src/esc.c ****       MBh->channel = 0;
 489:Lib/soes/src/esc.c ****       MBh->priority = 0;
 490:Lib/soes/src/esc.c ****       MBh->mbxcnt = ESCvar.mbxcnt & 0xFU;
 491:Lib/soes/src/esc.c ****       ESCvar.txcue++;
 492:Lib/soes/src/esc.c ****    }
 493:Lib/soes/src/esc.c ****    return n;
 494:Lib/soes/src/esc.c **** }
 495:Lib/soes/src/esc.c **** 
 496:Lib/soes/src/esc.c **** /** Look for any present requests for posting to the outbox.
 497:Lib/soes/src/esc.c ****  *
 498:Lib/soes/src/esc.c ****  * @return the index of Mailbox buffer ready to be posted.
 499:Lib/soes/src/esc.c ****  */
 500:Lib/soes/src/esc.c **** uint8_t ESC_outreqbuffer (void)
 501:Lib/soes/src/esc.c **** {
 502:Lib/soes/src/esc.c ****    uint8_t n = ESC_MBXBUFFERS - 1;
 503:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state != MBXstate_outreq))
 504:Lib/soes/src/esc.c ****    {
 505:Lib/soes/src/esc.c ****       n--;
 506:Lib/soes/src/esc.c ****    }
 507:Lib/soes/src/esc.c ****    return n;
 508:Lib/soes/src/esc.c **** }
 509:Lib/soes/src/esc.c **** /** Allocate and prepare a mailbox buffer for sending an error message. Take the first Idle
 510:Lib/soes/src/esc.c ****  * buffer from the end. Set Mailbox control state to be used for outbox and fill the mailbox
 511:Lib/soes/src/esc.c ****  * buffer with error information.
 512:Lib/soes/src/esc.c ****  *
 513:Lib/soes/src/esc.c ****  * @param[in] n   = Error number to be sent in mailbox error message.
 514:Lib/soes/src/esc.c ****  */
 515:Lib/soes/src/esc.c **** void MBX_error (uint16_t error)
 516:Lib/soes/src/esc.c **** {
 517:Lib/soes/src/esc.c ****    uint8_t MBXout;
 518:Lib/soes/src/esc.c ****    _MBXerr *mbxerr;
 519:Lib/soes/src/esc.c ****    MBXout = ESC_claimbuffer ();
 520:Lib/soes/src/esc.c ****    if (MBXout)
 521:Lib/soes/src/esc.c ****    {
 522:Lib/soes/src/esc.c ****       mbxerr = (_MBXerr *) &MBX[MBXout * ESC_MBXSIZE];
 523:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 524:Lib/soes/src/esc.c ****       mbxerr->mbxheader.mbxtype = MBXERR;
 525:Lib/soes/src/esc.c ****       mbxerr->type = htoes ((uint16_t) 0x01);
 526:Lib/soes/src/esc.c ****       mbxerr->detail = htoes (error);
 527:Lib/soes/src/esc.c ****       MBXcontrol[MBXout].state = MBXstate_outreq;
 528:Lib/soes/src/esc.c ****    }
 529:Lib/soes/src/esc.c **** }
 530:Lib/soes/src/esc.c **** 
 531:Lib/soes/src/esc.c **** /** Mailbox routine for implementing the low-level part of the mailbox protocol
 532:Lib/soes/src/esc.c ****  * used by Application Layers running on-top of mailboxes. It takes care of sending
 533:Lib/soes/src/esc.c ****  * a mailbox, re-sending a mailbox, reading a mailbox and handles a mailbox full event.
 534:Lib/soes/src/esc.c ****  *
 535:Lib/soes/src/esc.c ****  * @return =0 if nothing to do. =1 if something to be handled by mailbox protocols.
 536:Lib/soes/src/esc.c ****  */
 537:Lib/soes/src/esc.c **** uint8_t ESC_mbxprocess (void)
 538:Lib/soes/src/esc.c **** {
 539:Lib/soes/src/esc.c ****    uint8_t mbxhandle = 0;
 540:Lib/soes/src/esc.c ****    _MBXh *MBh = (_MBXh *)&MBX[0];
 541:Lib/soes/src/esc.c **** 
 542:Lib/soes/src/esc.c ****    if (ESCvar.MBXrun == 0)
 543:Lib/soes/src/esc.c ****    {
ARM GAS  /tmp/ccoKziDo.s 			page 11


 544:Lib/soes/src/esc.c ****       /* nothing to do */
 545:Lib/soes/src/esc.c ****       return 0;
 546:Lib/soes/src/esc.c ****    }
 547:Lib/soes/src/esc.c **** 
 548:Lib/soes/src/esc.c ****    /* SM0/1 access */
 549:Lib/soes/src/esc.c ****    if (ESCvar.ALevent & (ESCREG_ALEVENT_SM0 | ESCREG_ALEVENT_SM1))
 550:Lib/soes/src/esc.c ****    {
 551:Lib/soes/src/esc.c ****       ESC_SMstatus (0);
 552:Lib/soes/src/esc.c ****       ESC_SMstatus (1);
 553:Lib/soes/src/esc.c ****    }
 554:Lib/soes/src/esc.c **** 
 555:Lib/soes/src/esc.c ****    /* outmbx read by master */
 556:Lib/soes/src/esc.c ****    if (ESCvar.mbxoutpost && (ESCvar.ALevent & ESCREG_ALEVENT_SM1))
 557:Lib/soes/src/esc.c ****    {
 558:Lib/soes/src/esc.c ****       ESC_ackmbxread ();
 559:Lib/soes/src/esc.c ****       /* dispose old backup */
 560:Lib/soes/src/esc.c ****       if (ESCvar.mbxbackup)
 561:Lib/soes/src/esc.c ****       {
 562:Lib/soes/src/esc.c ****          MBXcontrol[ESCvar.mbxbackup].state = MBXstate_idle;
 563:Lib/soes/src/esc.c ****       }
 564:Lib/soes/src/esc.c ****       /* if still to do */
 565:Lib/soes/src/esc.c ****       if (MBXcontrol[ESCvar.mbxoutpost].state == MBXstate_again)
 566:Lib/soes/src/esc.c ****       {
 567:Lib/soes/src/esc.c ****          ESC_writembx (ESCvar.mbxoutpost);
 568:Lib/soes/src/esc.c ****       }
 569:Lib/soes/src/esc.c ****       /* create new backup */
 570:Lib/soes/src/esc.c ****       MBXcontrol[ESCvar.mbxoutpost].state = MBXstate_backup;
 571:Lib/soes/src/esc.c ****       ESCvar.mbxbackup = ESCvar.mbxoutpost;
 572:Lib/soes/src/esc.c ****       ESCvar.mbxoutpost = 0;
 573:Lib/soes/src/esc.c ****       /* Do we have any ongoing protocol transfers, return 1 */
 574:Lib/soes/src/esc.c ****       if(ESCvar.xoe > 0)
 575:Lib/soes/src/esc.c ****       {
 576:Lib/soes/src/esc.c ****          return 1;
 577:Lib/soes/src/esc.c ****       }
 578:Lib/soes/src/esc.c ****       return 0;
 579:Lib/soes/src/esc.c ****    }
 580:Lib/soes/src/esc.c **** 
 581:Lib/soes/src/esc.c ****    /* repeat request */
 582:Lib/soes/src/esc.c ****    if (ESCvar.SM[1].ECrep != ESCvar.toggle)
 583:Lib/soes/src/esc.c ****    {
 584:Lib/soes/src/esc.c ****       if (ESCvar.mbxoutpost || ESCvar.mbxbackup)
 585:Lib/soes/src/esc.c ****       {
 586:Lib/soes/src/esc.c ****          /* if outmbx empty */
 587:Lib/soes/src/esc.c ****          if (ESCvar.mbxoutpost == 0)
 588:Lib/soes/src/esc.c ****          {
 589:Lib/soes/src/esc.c ****             /* use backup mbx */
 590:Lib/soes/src/esc.c ****             ESC_writembx (ESCvar.mbxbackup);
 591:Lib/soes/src/esc.c ****          }
 592:Lib/soes/src/esc.c ****          else
 593:Lib/soes/src/esc.c ****          {
 594:Lib/soes/src/esc.c ****             /* reset mailbox */
 595:Lib/soes/src/esc.c ****             ESC_SMdisable (1);
 596:Lib/soes/src/esc.c ****             /* have to resend later */
 597:Lib/soes/src/esc.c ****             MBXcontrol[ESCvar.mbxoutpost].state = MBXstate_again;
 598:Lib/soes/src/esc.c ****             /* activate mailbox */
 599:Lib/soes/src/esc.c ****             ESC_SMenable (1);
 600:Lib/soes/src/esc.c ****             /* use backup mbx */
ARM GAS  /tmp/ccoKziDo.s 			page 12


 601:Lib/soes/src/esc.c ****             ESC_writembx (ESCvar.mbxbackup);
 602:Lib/soes/src/esc.c ****          }
 603:Lib/soes/src/esc.c ****          ESCvar.toggle = ESCvar.SM[1].ECrep;
 604:Lib/soes/src/esc.c ****          ESCvar.SM[1].PDIrep = ESCvar.toggle & 0x1U;
 605:Lib/soes/src/esc.c ****          ESC_SMwritepdi (1);
 606:Lib/soes/src/esc.c ****       }
 607:Lib/soes/src/esc.c ****       return 0;
 608:Lib/soes/src/esc.c ****    }
 609:Lib/soes/src/esc.c **** 
 610:Lib/soes/src/esc.c ****    /* if the outmailbox is free check if we have something to send */
 611:Lib/soes/src/esc.c ****    if (ESCvar.txcue && (ESCvar.mbxfree || !ESCvar.SM[1].MBXstat))
 612:Lib/soes/src/esc.c ****    {
 613:Lib/soes/src/esc.c ****       /* check out request mbx */
 614:Lib/soes/src/esc.c ****       mbxhandle = ESC_outreqbuffer ();
 615:Lib/soes/src/esc.c ****       /* outmbx empty and outreq mbx available */
 616:Lib/soes/src/esc.c ****       if (mbxhandle)
 617:Lib/soes/src/esc.c ****       {
 618:Lib/soes/src/esc.c ****          ESC_writembx (mbxhandle);
 619:Lib/soes/src/esc.c ****          /* Refresh SM status */
 620:Lib/soes/src/esc.c ****          ESC_SMstatus (1);
 621:Lib/soes/src/esc.c ****          /* change state */
 622:Lib/soes/src/esc.c ****          MBXcontrol[mbxhandle].state = MBXstate_outpost;
 623:Lib/soes/src/esc.c ****          ESCvar.mbxoutpost = mbxhandle;
 624:Lib/soes/src/esc.c ****          if (ESCvar.txcue)
 625:Lib/soes/src/esc.c ****          {
 626:Lib/soes/src/esc.c ****             ESCvar.txcue--;
 627:Lib/soes/src/esc.c ****          }
 628:Lib/soes/src/esc.c ****       }
 629:Lib/soes/src/esc.c ****    }
 630:Lib/soes/src/esc.c **** 
 631:Lib/soes/src/esc.c ****    /* read mailbox if full and no xoe in progress */
 632:Lib/soes/src/esc.c ****    if ((ESCvar.SM[0].MBXstat != 0) && (MBXcontrol[0].state == 0)
 633:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
 634:Lib/soes/src/esc.c ****    {
 635:Lib/soes/src/esc.c ****       ESC_readmbx ();
 636:Lib/soes/src/esc.c ****       ESCvar.SM[0].MBXstat = 0;
 637:Lib/soes/src/esc.c ****       if (etohs (MBh->length) == 0)
 638:Lib/soes/src/esc.c ****       {
 639:Lib/soes/src/esc.c ****          MBX_error (MBXERR_INVALIDHEADER);
 640:Lib/soes/src/esc.c ****          /* drop mailbox */
 641:Lib/soes/src/esc.c ****          MBXcontrol[0].state = MBXstate_idle;
 642:Lib/soes/src/esc.c ****       }
 643:Lib/soes/src/esc.c ****       if ((MBh->mbxcnt != 0) && (MBh->mbxcnt == ESCvar.mbxincnt))
 644:Lib/soes/src/esc.c ****       {
 645:Lib/soes/src/esc.c ****          /* drop mailbox */
 646:Lib/soes/src/esc.c ****          MBXcontrol[0].state = MBXstate_idle;
 647:Lib/soes/src/esc.c ****       }
 648:Lib/soes/src/esc.c ****       ESCvar.mbxincnt = MBh->mbxcnt;
 649:Lib/soes/src/esc.c ****       return 1;
 650:Lib/soes/src/esc.c ****    }
 651:Lib/soes/src/esc.c **** 
 652:Lib/soes/src/esc.c ****    return 0;
 653:Lib/soes/src/esc.c **** }
 654:Lib/soes/src/esc.c **** /** Handler for incorrect or unsupported mailbox data. Write error response
 655:Lib/soes/src/esc.c ****  * in Mailbox.
 656:Lib/soes/src/esc.c ****  */
 657:Lib/soes/src/esc.c **** void ESC_xoeprocess (void)
ARM GAS  /tmp/ccoKziDo.s 			page 13


 658:Lib/soes/src/esc.c **** {
 659:Lib/soes/src/esc.c ****    _MBXh *mbh;
 660:Lib/soes/src/esc.c ****    if (ESCvar.MBXrun == 0)
 661:Lib/soes/src/esc.c ****    {
 662:Lib/soes/src/esc.c ****       return;
 663:Lib/soes/src/esc.c ****    }
 664:Lib/soes/src/esc.c ****    if ((ESCvar.xoe == 0) && (MBXcontrol[0].state == MBXstate_inclaim))
 665:Lib/soes/src/esc.c ****    {
 666:Lib/soes/src/esc.c ****       mbh = (_MBXh *) &MBX[0];
 667:Lib/soes/src/esc.c ****       if ((mbh->mbxtype == 0) || (etohs (mbh->length) == 0))
 668:Lib/soes/src/esc.c ****       {
 669:Lib/soes/src/esc.c ****          MBX_error (MBXERR_INVALIDHEADER);
 670:Lib/soes/src/esc.c ****       }
 671:Lib/soes/src/esc.c ****       else
 672:Lib/soes/src/esc.c ****       {
 673:Lib/soes/src/esc.c ****          MBX_error (MBXERR_UNSUPPORTEDPROTOCOL);
 674:Lib/soes/src/esc.c ****       }
 675:Lib/soes/src/esc.c ****       /* mailbox type not supported, drop mailbox */
 676:Lib/soes/src/esc.c ****       MBXcontrol[0].state = MBXstate_idle;
 677:Lib/soes/src/esc.c ****    }
 678:Lib/soes/src/esc.c **** }
 679:Lib/soes/src/esc.c **** 
 680:Lib/soes/src/esc.c **** /** Validate the values of Sync Manager 2 & 3 that the current ESC values is
 681:Lib/soes/src/esc.c ****  * equal to configured and calculated local values.
 682:Lib/soes/src/esc.c ****  *
 683:Lib/soes/src/esc.c ****  * @param[in] state   = Requested state.
 684:Lib/soes/src/esc.c ****  * @return = incoming state request if every thing checks out OK. = state (PREOP | ERROR)  if somet
 685:Lib/soes/src/esc.c ****  */
 686:Lib/soes/src/esc.c **** uint8_t ESC_checkSM23 (uint8_t state)
 687:Lib/soes/src/esc.c **** {
 688:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 689:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM2, (void *) &ESCvar.SM[2], sizeof (ESCvar.SM[2]));
 690:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[2];
 691:Lib/soes/src/esc.c ****    
 692:Lib/soes/src/esc.c ****    /* Check SM settings */
 693:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_SM2_sma) ||
 694:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM2_smc))
 695:Lib/soes/src/esc.c ****    {
 696:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM2;
 697:Lib/soes/src/esc.c ****       /* fail state change */
 698:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 699:Lib/soes/src/esc.c ****    }
 700:Lib/soes/src/esc.c ****    /* Check run-time settings */
 701:Lib/soes/src/esc.c ****    /* Check length */
 702:Lib/soes/src/esc.c ****    else if (etohs (SM->Length) != ESCvar.ESC_SM2_sml)
 703:Lib/soes/src/esc.c ****    {
 704:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM2;
 705:Lib/soes/src/esc.c ****       /* fail state change */
 706:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 707:Lib/soes/src/esc.c ****    }
 708:Lib/soes/src/esc.c ****    /* SM disabled and (SM activated or length > 0) set by master */
 709:Lib/soes/src/esc.c ****    else if (((ESC_SM2_act & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 710:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) || (ESCvar.ESC_SM2_sml > 0)))
 711:Lib/soes/src/esc.c ****    {
 712:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM2;
 713:Lib/soes/src/esc.c ****       /* fail state change */
 714:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
ARM GAS  /tmp/ccoKziDo.s 			page 14


 715:Lib/soes/src/esc.c ****    }
 716:Lib/soes/src/esc.c ****    /* SM enabled and (length > 0 but SM disabled) set by master */
 717:Lib/soes/src/esc.c ****    else if (((ESC_SM2_act & ESCREG_SYNC_ACT_ACTIVATED) > 0) &&
 718:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 719:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM2_sml > 0))
 720:Lib/soes/src/esc.c ****    {
 721:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM2;
 722:Lib/soes/src/esc.c ****       /* fail state change */
 723:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 724:Lib/soes/src/esc.c ****    }
 725:Lib/soes/src/esc.c **** 
 726:Lib/soes/src/esc.c ****    if ((ESC_SM2_sma + (etohs (SM->Length) * 3)) > ESC_SM3_sma)
 727:Lib/soes/src/esc.c ****    {
 728:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM2;
 729:Lib/soes/src/esc.c ****       /* SM2 overlaps SM3, fail state change */
 730:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 731:Lib/soes/src/esc.c ****    }
 732:Lib/soes/src/esc.c **** 
 733:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM3, (void *) &ESCvar.SM[3], sizeof (ESCvar.SM[3]));
 734:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[3];
 735:Lib/soes/src/esc.c ****    /* Check SM settings */
 736:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_SM3_sma) ||
 737:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM3_smc))
 738:Lib/soes/src/esc.c ****    {
 739:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM3;
 740:Lib/soes/src/esc.c ****       /* fail state change */
 741:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 742:Lib/soes/src/esc.c ****    }
 743:Lib/soes/src/esc.c ****    /* Check run-time settings */
 744:Lib/soes/src/esc.c ****    /* Check length */
 745:Lib/soes/src/esc.c ****    else if (etohs (SM->Length) != ESCvar.ESC_SM3_sml)
 746:Lib/soes/src/esc.c ****    {
 747:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM3;
 748:Lib/soes/src/esc.c ****       /* fail state change */
 749:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 750:Lib/soes/src/esc.c ****    }
 751:Lib/soes/src/esc.c ****    /* SM disabled and (SM activated or length > 0) set by master */
 752:Lib/soes/src/esc.c ****    else if (((ESC_SM3_act & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 753:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) || (ESCvar.ESC_SM3_sml > 0)))
 754:Lib/soes/src/esc.c ****    {
 755:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM3;
 756:Lib/soes/src/esc.c ****       /* fail state change */
 757:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 758:Lib/soes/src/esc.c ****    }
 759:Lib/soes/src/esc.c ****    /* SM enabled and (length > 0 but SM disabled) set by master */
 760:Lib/soes/src/esc.c ****    else if (((ESC_SM3_act & ESCREG_SYNC_ACT_ACTIVATED) > 0) &&
 761:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 762:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM3_sml > 0))
 763:Lib/soes/src/esc.c ****    {
 764:Lib/soes/src/esc.c ****       ESCvar.SMtestresult = SMRESULT_ERRSM3;
 765:Lib/soes/src/esc.c ****       /* fail state change */
 766:Lib/soes/src/esc.c ****       return (ESCpreop | ESCerror);
 767:Lib/soes/src/esc.c ****    }
 768:Lib/soes/src/esc.c ****    return state;
 769:Lib/soes/src/esc.c **** }
 770:Lib/soes/src/esc.c **** 
 771:Lib/soes/src/esc.c **** /** Function trying to enable start updating the process data inputs. It calls the check SM 2 & 3
ARM GAS  /tmp/ccoKziDo.s 			page 15


 772:Lib/soes/src/esc.c ****  * routine, based on the result from there if enables or disables the Input SyncManager, in additio
 773:Lib/soes/src/esc.c ****  * it updates the ALStatusCode case something didn't pass the check.
 774:Lib/soes/src/esc.c ****  *
 775:Lib/soes/src/esc.c ****  * @param[in] state   = Requested state.
 776:Lib/soes/src/esc.c ****  * @return = state, incoming state request if every thing checks out OK. =state (PREOP | ERROR) if 
 777:Lib/soes/src/esc.c ****  */
 778:Lib/soes/src/esc.c **** uint8_t ESC_startinput (uint8_t state)
 779:Lib/soes/src/esc.c **** {
 780:Lib/soes/src/esc.c **** 
 781:Lib/soes/src/esc.c ****    state = ESC_checkSM23 (state);
 782:Lib/soes/src/esc.c **** 
 783:Lib/soes/src/esc.c ****    if (state != (ESCpreop | ESCerror))
 784:Lib/soes/src/esc.c ****    {
 785:Lib/soes/src/esc.c ****    	  /* If inputs > 0 , enable SM3 */
 786:Lib/soes/src/esc.c ****       if (ESCvar.ESC_SM3_sml > 0)
 787:Lib/soes/src/esc.c ****       {
 788:Lib/soes/src/esc.c ****          ESC_SMenable (3);
 789:Lib/soes/src/esc.c ****       }
 790:Lib/soes/src/esc.c ****       /* Go to state input regardless of any inputs present */
 791:Lib/soes/src/esc.c ****       CC_ATOMIC_SET(ESCvar.App.state, APPSTATE_INPUT);
 792:Lib/soes/src/esc.c ****    }
 793:Lib/soes/src/esc.c ****    else
 794:Lib/soes/src/esc.c ****    {
 795:Lib/soes/src/esc.c ****       ESC_SMdisable (2);
 796:Lib/soes/src/esc.c ****       ESC_SMdisable (3);
 797:Lib/soes/src/esc.c ****       if (ESCvar.SMtestresult & SMRESULT_ERRSM3)
 798:Lib/soes/src/esc.c ****       {
 799:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDINPUTSM);
 800:Lib/soes/src/esc.c ****       }
 801:Lib/soes/src/esc.c ****       else
 802:Lib/soes/src/esc.c ****       {
 803:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDOUTPUTSM);
 804:Lib/soes/src/esc.c ****       }
 805:Lib/soes/src/esc.c ****    }
 806:Lib/soes/src/esc.c **** 
 807:Lib/soes/src/esc.c ****    /* Exit here if polling */
 808:Lib/soes/src/esc.c ****    if (ESCvar.use_interrupt == 0)
 809:Lib/soes/src/esc.c ****    {
 810:Lib/soes/src/esc.c ****       return state;
 811:Lib/soes/src/esc.c ****    }
 812:Lib/soes/src/esc.c **** 
 813:Lib/soes/src/esc.c ****    if (state != (ESCpreop | ESCerror))
 814:Lib/soes/src/esc.c ****    {
 815:Lib/soes/src/esc.c ****       uint16_t dc_check_result;
 816:Lib/soes/src/esc.c ****       dc_check_result = ESC_checkDC();
 817:Lib/soes/src/esc.c ****       if(dc_check_result > 0)
 818:Lib/soes/src/esc.c ****       {
 819:Lib/soes/src/esc.c ****          ESC_ALerror (dc_check_result);
 820:Lib/soes/src/esc.c ****          state = (ESCpreop | ESCerror);
 821:Lib/soes/src/esc.c **** 
 822:Lib/soes/src/esc.c ****          ESC_SMdisable (2);
 823:Lib/soes/src/esc.c ****          ESC_SMdisable (3);
 824:Lib/soes/src/esc.c ****          CC_ATOMIC_SET(ESCvar.App.state, APPSTATE_IDLE);
 825:Lib/soes/src/esc.c ****       }
 826:Lib/soes/src/esc.c ****       else
 827:Lib/soes/src/esc.c ****       {
 828:Lib/soes/src/esc.c ****          if (ESCvar.esc_hw_interrupt_enable != NULL)
ARM GAS  /tmp/ccoKziDo.s 			page 16


 829:Lib/soes/src/esc.c ****          {
 830:Lib/soes/src/esc.c ****             uint32_t int_mask;
 831:Lib/soes/src/esc.c **** 
 832:Lib/soes/src/esc.c ****             if (ESCvar.ESC_SM2_sml == 0)
 833:Lib/soes/src/esc.c ****             {
 834:Lib/soes/src/esc.c ****                int_mask = ESCREG_ALEVENT_SM3;
 835:Lib/soes/src/esc.c ****             }
 836:Lib/soes/src/esc.c ****             else
 837:Lib/soes/src/esc.c ****             {
 838:Lib/soes/src/esc.c ****                int_mask = ESCREG_ALEVENT_SM2;
 839:Lib/soes/src/esc.c ****             }
 840:Lib/soes/src/esc.c **** 
 841:Lib/soes/src/esc.c ****             if (ESCvar.dcsync > 0)
 842:Lib/soes/src/esc.c ****             {
 843:Lib/soes/src/esc.c ****                int_mask |= ESCREG_ALEVENT_DC_SYNC0;
 844:Lib/soes/src/esc.c ****             }
 845:Lib/soes/src/esc.c ****             ESCvar.esc_hw_interrupt_enable (int_mask);
 846:Lib/soes/src/esc.c ****          }
 847:Lib/soes/src/esc.c ****       }
 848:Lib/soes/src/esc.c ****    }
 849:Lib/soes/src/esc.c **** 
 850:Lib/soes/src/esc.c ****    return state;
 851:Lib/soes/src/esc.c **** }
 852:Lib/soes/src/esc.c **** 
 853:Lib/soes/src/esc.c **** /** Unconditional stop of updating inputs by disabling Sync Manager 2 & 3.
 854:Lib/soes/src/esc.c ****  * Set the App.state to APPSTATE_IDLE.
 855:Lib/soes/src/esc.c ****  *
 856:Lib/soes/src/esc.c ****  */
 857:Lib/soes/src/esc.c **** void ESC_stopinput (void)
 858:Lib/soes/src/esc.c **** {
 859:Lib/soes/src/esc.c ****    CC_ATOMIC_SET(ESCvar.App.state, APPSTATE_IDLE);
 860:Lib/soes/src/esc.c ****    ESC_SMdisable (3);
 861:Lib/soes/src/esc.c ****    ESC_SMdisable (2);
 862:Lib/soes/src/esc.c **** 
 863:Lib/soes/src/esc.c ****    /* Call interrupt disable hook case it have been configured  */
 864:Lib/soes/src/esc.c ****    if ((ESCvar.use_interrupt != 0) &&
 865:Lib/soes/src/esc.c ****          (ESCvar.esc_hw_interrupt_disable != NULL))
 866:Lib/soes/src/esc.c ****    {
 867:Lib/soes/src/esc.c ****       ESCvar.esc_hw_interrupt_disable (ESCREG_ALEVENT_DC_SYNC0 |
 868:Lib/soes/src/esc.c ****             ESCREG_ALEVENT_SM2 |
 869:Lib/soes/src/esc.c ****             ESCREG_ALEVENT_SM3);
 870:Lib/soes/src/esc.c ****    }
 871:Lib/soes/src/esc.c **** }
 872:Lib/soes/src/esc.c **** 
 873:Lib/soes/src/esc.c **** 
 874:Lib/soes/src/esc.c **** /** Unconditional start of updating outputs by enabling Sync Manager 2.
 875:Lib/soes/src/esc.c ****  * Set the App.state to APPSTATE_OUTPUT.
 876:Lib/soes/src/esc.c ****  *
 877:Lib/soes/src/esc.c ****  * @param[in] state   = Not used.
 878:Lib/soes/src/esc.c ****  * @return = state unchanged.
 879:Lib/soes/src/esc.c ****  *
 880:Lib/soes/src/esc.c ****  */
 881:Lib/soes/src/esc.c **** uint8_t ESC_startoutput (uint8_t state)
 882:Lib/soes/src/esc.c **** {
 883:Lib/soes/src/esc.c **** 	
 884:Lib/soes/src/esc.c ****    /* If outputs > 0 , enable SM2 */
 885:Lib/soes/src/esc.c ****    if (ESCvar.ESC_SM2_sml > 0)
ARM GAS  /tmp/ccoKziDo.s 			page 17


 886:Lib/soes/src/esc.c ****    {
 887:Lib/soes/src/esc.c ****       ESC_SMenable (2);
 888:Lib/soes/src/esc.c ****    }
 889:Lib/soes/src/esc.c ****    /* Go to state output regardless of any outputs present */
 890:Lib/soes/src/esc.c ****    CC_ATOMIC_OR(ESCvar.App.state, APPSTATE_OUTPUT);
 891:Lib/soes/src/esc.c ****    return state;
 892:Lib/soes/src/esc.c **** 
 893:Lib/soes/src/esc.c **** }
 894:Lib/soes/src/esc.c **** 
 895:Lib/soes/src/esc.c **** /** Unconditional stop of updating outputs by disabling Sync Manager 2.
 896:Lib/soes/src/esc.c ****  * Set the App.state to APPSTATE_INPUT. Call application hook APP_safeoutput
 897:Lib/soes/src/esc.c ****  * letting the user to set safe state values on outputs.
 898:Lib/soes/src/esc.c ****  *
 899:Lib/soes/src/esc.c ****  */
 900:Lib/soes/src/esc.c **** void ESC_stopoutput (void)
 901:Lib/soes/src/esc.c **** {
 902:Lib/soes/src/esc.c ****    CC_ATOMIC_AND(ESCvar.App.state, APPSTATE_INPUT);
 903:Lib/soes/src/esc.c ****    ESC_SMdisable (2);
 904:Lib/soes/src/esc.c ****    APP_safeoutput ();
 905:Lib/soes/src/esc.c **** }
 906:Lib/soes/src/esc.c **** 
 907:Lib/soes/src/esc.c **** /** The state handler acting on SyncManager Activation BIT(4)
 908:Lib/soes/src/esc.c ****  * events in the Al Event Request register 0x220.
 909:Lib/soes/src/esc.c ****  *
 910:Lib/soes/src/esc.c ****  */
 911:Lib/soes/src/esc.c **** void ESC_sm_act_event (void)
 912:Lib/soes/src/esc.c **** {
 913:Lib/soes/src/esc.c ****    uint8_t ac, an, as, ax, ax23;
 914:Lib/soes/src/esc.c **** 
 915:Lib/soes/src/esc.c ****    /* Have at least on Sync Manager  changed */
 916:Lib/soes/src/esc.c ****    if ((ESCvar.ALevent & ESCREG_ALEVENT_SMCHANGE) == 0)
 917:Lib/soes/src/esc.c ****    {
 918:Lib/soes/src/esc.c ****       /* nothing to do */
 919:Lib/soes/src/esc.c ****       return;
 920:Lib/soes/src/esc.c ****    }
 921:Lib/soes/src/esc.c **** 
 922:Lib/soes/src/esc.c ****    /* Mask state request bits + Error ACK */
 923:Lib/soes/src/esc.c ****    ac = ESCvar.ALcontrol & ESCREG_AL_STATEMASK;
 924:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 925:Lib/soes/src/esc.c ****    an = as;
 926:Lib/soes/src/esc.c ****    if (((ac & ESCerror) || (ac == ESCinit)))
 927:Lib/soes/src/esc.c ****    {
 928:Lib/soes/src/esc.c ****       /* if error bit confirmed reset */
 929:Lib/soes/src/esc.c ****       ac &= ESCREG_AL_ERRACKMASK;
 930:Lib/soes/src/esc.c ****       an &= ESCREG_AL_ERRACKMASK;
 931:Lib/soes/src/esc.c ****    }
 932:Lib/soes/src/esc.c ****    /* Enter SM changed handling for all steps but Init and Boot when Mailboxes
 933:Lib/soes/src/esc.c ****     * is up and running
 934:Lib/soes/src/esc.c ****     */
 935:Lib/soes/src/esc.c ****    if ((as & ESCREG_AL_ALLBUTINITMASK) &&
 936:Lib/soes/src/esc.c ****        ((as == ESCboot) == 0) && ESCvar.MBXrun)
 937:Lib/soes/src/esc.c ****    {
 938:Lib/soes/src/esc.c ****       /* Validate Sync Managers, reading the Activation register will
 939:Lib/soes/src/esc.c ****        * acknowledge the SyncManager Activation event making us enter
 940:Lib/soes/src/esc.c ****        * this execution path.
 941:Lib/soes/src/esc.c ****        */
 942:Lib/soes/src/esc.c ****       ax = ESC_checkmbx (as);
ARM GAS  /tmp/ccoKziDo.s 			page 18


 943:Lib/soes/src/esc.c ****       ax23 = ESC_checkSM23 (as);
 944:Lib/soes/src/esc.c ****       if ((an & ESCerror) && ((ac & ESCerror) == 0))
 945:Lib/soes/src/esc.c ****       {
 946:Lib/soes/src/esc.c ****          /* if in error then stay there */
 947:Lib/soes/src/esc.c ****       }
 948:Lib/soes/src/esc.c ****       /* Have we been forced to step down to INIT we will stop mailboxes,
 949:Lib/soes/src/esc.c ****        * update AL Status Code and exit ESC_state
 950:Lib/soes/src/esc.c ****        */
 951:Lib/soes/src/esc.c ****       else if (ax == (ESCinit | ESCerror))
 952:Lib/soes/src/esc.c ****       {
 953:Lib/soes/src/esc.c ****          /* If we have activated Inputs and Outputs we need to disable them */
 954:Lib/soes/src/esc.c ****          if (CC_ATOMIC_GET(ESCvar.App.state))
 955:Lib/soes/src/esc.c ****          {
 956:Lib/soes/src/esc.c ****             ESC_stopoutput ();
 957:Lib/soes/src/esc.c ****             ESC_stopinput ();
 958:Lib/soes/src/esc.c ****          }
 959:Lib/soes/src/esc.c ****          /* Stop mailboxes and update ALStatus code */
 960:Lib/soes/src/esc.c ****          ESC_stopmbx ();
 961:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDMBXCONFIG);
 962:Lib/soes/src/esc.c ****          ESCvar.MBXrun = 0;
 963:Lib/soes/src/esc.c ****          ESC_ALstatus (ax);
 964:Lib/soes/src/esc.c ****          return;
 965:Lib/soes/src/esc.c ****       }
 966:Lib/soes/src/esc.c ****       /* Have we been forced to step down to PREOP we will stop inputs
 967:Lib/soes/src/esc.c ****        * and outputs, update AL Status Code and exit ESC_state
 968:Lib/soes/src/esc.c ****        */
 969:Lib/soes/src/esc.c ****       else if (CC_ATOMIC_GET(ESCvar.App.state) && (ax23 == (ESCpreop | ESCerror)))
 970:Lib/soes/src/esc.c ****       {
 971:Lib/soes/src/esc.c ****          ESC_stopoutput ();
 972:Lib/soes/src/esc.c ****          ESC_stopinput ();
 973:Lib/soes/src/esc.c ****          if (ESCvar.SMtestresult & SMRESULT_ERRSM3)
 974:Lib/soes/src/esc.c ****          {
 975:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDINPUTSM);
 976:Lib/soes/src/esc.c ****          }
 977:Lib/soes/src/esc.c ****          else
 978:Lib/soes/src/esc.c ****          {
 979:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDOUTPUTSM);
 980:Lib/soes/src/esc.c ****          }
 981:Lib/soes/src/esc.c ****          ESC_ALstatus (ax23);
 982:Lib/soes/src/esc.c ****       }
 983:Lib/soes/src/esc.c ****    }
 984:Lib/soes/src/esc.c ****    else
 985:Lib/soes/src/esc.c ****    {
 986:Lib/soes/src/esc.c ****       ESC_SMack (0);
 987:Lib/soes/src/esc.c ****       ESC_SMack (1);
 988:Lib/soes/src/esc.c ****       ESC_SMack (2);
 989:Lib/soes/src/esc.c ****       ESC_SMack (3);
 990:Lib/soes/src/esc.c ****       ESC_SMack (4);
 991:Lib/soes/src/esc.c ****       ESC_SMack (5);
 992:Lib/soes/src/esc.c ****       ESC_SMack (6);
 993:Lib/soes/src/esc.c ****       ESC_SMack (7);
 994:Lib/soes/src/esc.c ****    }
 995:Lib/soes/src/esc.c **** }
 996:Lib/soes/src/esc.c **** 
 997:Lib/soes/src/esc.c **** static bool ESC_check_id_request (uint16_t ALcontrol, uint8_t * an)
 998:Lib/soes/src/esc.c **** {
  29              		.loc 1 998 1 view -0
ARM GAS  /tmp/ccoKziDo.s 			page 19


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 999:Lib/soes/src/esc.c ****    if ((ALcontrol & ESCREG_AL_ID_REQUEST) != 0)
  33              		.loc 1 999 4 view .LVU1
  34              		.loc 1 999 7 is_stmt 0 view .LVU2
  35 0000 10F0200F 		tst	r0, #32
  36 0004 1FD0     		beq	.L4
  37              	.LBB2:
1000:Lib/soes/src/esc.c ****    {
1001:Lib/soes/src/esc.c ****       uint8_t state = ALcontrol & ESCREG_AL_ERRACKMASK;
  38              		.loc 1 1001 7 is_stmt 1 view .LVU3
  39              		.loc 1 1001 33 is_stmt 0 view .LVU4
  40 0006 C3B2     		uxtb	r3, r0
  41              		.loc 1 1001 15 view .LVU5
  42 0008 00F00F00 		and	r0, r0, #15
  43              	.LVL1:
1002:Lib/soes/src/esc.c **** 
1003:Lib/soes/src/esc.c ****       if ((state != ESCboot) &&
  44              		.loc 1 1003 7 is_stmt 1 view .LVU6
  45              		.loc 1 1003 10 is_stmt 0 view .LVU7
  46 000c 0328     		cmp	r0, #3
  47 000e 1CD0     		beq	.L5
  48              		.loc 1 1003 30 discriminator 1 view .LVU8
  49 0010 13F00C0F 		tst	r3, #12
  50 0014 06D0     		beq	.L3
1004:Lib/soes/src/esc.c ****           ((state < ESCsafeop) || (*an == ESCsafeop) || (*an == ESCop)))
  51              		.loc 1 1004 36 view .LVU9
  52 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  53              		.loc 1 1004 32 view .LVU10
  54 0018 042B     		cmp	r3, #4
  55 001a 03D0     		beq	.L3
  56              		.loc 1 1004 54 discriminator 1 view .LVU11
  57 001c 082B     		cmp	r3, #8
  58 001e 01D0     		beq	.L3
  59              	.LBE2:
1005:Lib/soes/src/esc.c ****       {
1006:Lib/soes/src/esc.c ****          uint16_t ALstatuscode;
1007:Lib/soes/src/esc.c **** 
1008:Lib/soes/src/esc.c ****          ESC_read (ESCREG_ALERROR,
1009:Lib/soes/src/esc.c ****                    (void *)&ALstatuscode,
1010:Lib/soes/src/esc.c ****                    sizeof (ALstatuscode));
1011:Lib/soes/src/esc.c **** 
1012:Lib/soes/src/esc.c ****          return (ALstatuscode == ALERR_NONE);
1013:Lib/soes/src/esc.c ****       }
1014:Lib/soes/src/esc.c ****    }
1015:Lib/soes/src/esc.c **** 
1016:Lib/soes/src/esc.c ****    return false;
  60              		.loc 1 1016 11 view .LVU12
  61 0020 0020     		movs	r0, #0
  62              	.LVL2:
1017:Lib/soes/src/esc.c **** }
  63              		.loc 1 1017 1 view .LVU13
  64 0022 7047     		bx	lr
  65              	.LVL3:
  66              	.L3:
 998:Lib/soes/src/esc.c ****    if ((ALcontrol & ESCREG_AL_ID_REQUEST) != 0)
ARM GAS  /tmp/ccoKziDo.s 			page 20


  67              		.loc 1 998 1 view .LVU14
  68 0024 00B5     		push	{lr}
  69              		.cfi_def_cfa_offset 4
  70              		.cfi_offset 14, -4
  71 0026 83B0     		sub	sp, sp, #12
  72              		.cfi_def_cfa_offset 16
  73              	.LBB4:
  74              	.LBB3:
1006:Lib/soes/src/esc.c **** 
  75              		.loc 1 1006 10 is_stmt 1 view .LVU15
1008:Lib/soes/src/esc.c ****                    (void *)&ALstatuscode,
  76              		.loc 1 1008 10 view .LVU16
  77 0028 0222     		movs	r2, #2
  78 002a 0DF10601 		add	r1, sp, #6
  79              	.LVL4:
1008:Lib/soes/src/esc.c ****                    (void *)&ALstatuscode,
  80              		.loc 1 1008 10 is_stmt 0 view .LVU17
  81 002e 4FF49A70 		mov	r0, #308
  82              	.LVL5:
1008:Lib/soes/src/esc.c ****                    (void *)&ALstatuscode,
  83              		.loc 1 1008 10 view .LVU18
  84 0032 FFF7FEFF 		bl	ESC_read
  85              	.LVL6:
1012:Lib/soes/src/esc.c ****       }
  86              		.loc 1 1012 10 is_stmt 1 view .LVU19
1012:Lib/soes/src/esc.c ****       }
  87              		.loc 1 1012 31 is_stmt 0 view .LVU20
  88 0036 BDF80600 		ldrh	r0, [sp, #6]
  89 003a B0FA80F0 		clz	r0, r0
  90 003e 4009     		lsrs	r0, r0, #5
  91              	.LBE3:
  92              	.LBE4:
  93              		.loc 1 1017 1 view .LVU21
  94 0040 03B0     		add	sp, sp, #12
  95              		.cfi_def_cfa_offset 4
  96              		@ sp needed
  97 0042 5DF804FB 		ldr	pc, [sp], #4
  98              	.LVL7:
  99              	.L4:
 100              		.cfi_def_cfa_offset 0
 101              		.cfi_restore 14
1016:Lib/soes/src/esc.c **** }
 102              		.loc 1 1016 11 view .LVU22
 103 0046 0020     		movs	r0, #0
 104              	.LVL8:
1016:Lib/soes/src/esc.c **** }
 105              		.loc 1 1016 11 view .LVU23
 106 0048 7047     		bx	lr
 107              	.LVL9:
 108              	.L5:
1016:Lib/soes/src/esc.c **** }
 109              		.loc 1 1016 11 view .LVU24
 110 004a 0020     		movs	r0, #0
 111              	.LVL10:
1016:Lib/soes/src/esc.c **** }
 112              		.loc 1 1016 11 view .LVU25
 113 004c 7047     		bx	lr
ARM GAS  /tmp/ccoKziDo.s 			page 21


 114              		.cfi_endproc
 115              	.LFE36:
 117              		.section	.text.ESC_ALerror,"ax",%progbits
 118              		.align	1
 119              		.global	ESC_ALerror
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	ESC_ALerror:
 125              	.LVL11:
 126              	.LFB0:
  24:Lib/soes/src/esc.c ****    uint16_t dummy;
 127              		.loc 1 24 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 8
 130              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Lib/soes/src/esc.c ****    uint16_t dummy;
 131              		.loc 1 24 1 is_stmt 0 view .LVU27
 132 0000 00B5     		push	{lr}
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 14, -4
 135 0002 83B0     		sub	sp, sp, #12
 136              		.cfi_def_cfa_offset 16
  25:Lib/soes/src/esc.c ****    ESCvar.ALerror = errornumber;
 137              		.loc 1 25 4 is_stmt 1 view .LVU28
  26:Lib/soes/src/esc.c ****    dummy = htoes (errornumber);
 138              		.loc 1 26 4 view .LVU29
  26:Lib/soes/src/esc.c ****    dummy = htoes (errornumber);
 139              		.loc 1 26 19 is_stmt 0 view .LVU30
 140 0004 074B     		ldr	r3, .L12
 141 0006 A3F88400 		strh	r0, [r3, #132]	@ movhi
  27:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALERROR, &dummy, sizeof (dummy));
 142              		.loc 1 27 4 is_stmt 1 view .LVU31
  27:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALERROR, &dummy, sizeof (dummy));
 143              		.loc 1 27 10 is_stmt 0 view .LVU32
 144 000a ADF80600 		strh	r0, [sp, #6]	@ movhi
  28:Lib/soes/src/esc.c **** }
 145              		.loc 1 28 4 is_stmt 1 view .LVU33
 146 000e 0222     		movs	r2, #2
 147 0010 0DF10601 		add	r1, sp, #6
 148 0014 4FF49A70 		mov	r0, #308
 149              	.LVL12:
  28:Lib/soes/src/esc.c **** }
 150              		.loc 1 28 4 is_stmt 0 view .LVU34
 151 0018 FFF7FEFF 		bl	ESC_write
 152              	.LVL13:
  29:Lib/soes/src/esc.c **** 
 153              		.loc 1 29 1 view .LVU35
 154 001c 03B0     		add	sp, sp, #12
 155              		.cfi_def_cfa_offset 4
 156              		@ sp needed
 157 001e 5DF804FB 		ldr	pc, [sp], #4
 158              	.L13:
 159 0022 00BF     		.align	2
 160              	.L12:
 161 0024 00000000 		.word	ESCvar
 162              		.cfi_endproc
ARM GAS  /tmp/ccoKziDo.s 			page 22


 163              	.LFE0:
 165              		.section	.text.ESC_load_device_id,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	ESC_load_device_id:
 172              	.LFB37:
1018:Lib/soes/src/esc.c **** 
1019:Lib/soes/src/esc.c **** static uint8_t ESC_load_device_id (void)
1020:Lib/soes/src/esc.c **** {
 173              		.loc 1 1020 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 00B5     		push	{lr}
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 83B0     		sub	sp, sp, #12
 181              		.cfi_def_cfa_offset 16
1021:Lib/soes/src/esc.c ****    uint16_t device_id;
 182              		.loc 1 1021 4 view .LVU37
1022:Lib/soes/src/esc.c **** 
1023:Lib/soes/src/esc.c ****    if (ESCvar.get_device_id != NULL)
 183              		.loc 1 1023 4 view .LVU38
 184              		.loc 1 1023 14 is_stmt 0 view .LVU39
 185 0004 0D4B     		ldr	r3, .L21
 186 0006 5B6E     		ldr	r3, [r3, #100]
 187              		.loc 1 1023 7 view .LVU40
 188 0008 6BB1     		cbz	r3, .L15
1024:Lib/soes/src/esc.c ****    {
1025:Lib/soes/src/esc.c ****       if (ESCvar.get_device_id (&device_id) != 0)
 189              		.loc 1 1025 7 is_stmt 1 view .LVU41
 190              		.loc 1 1025 11 is_stmt 0 view .LVU42
 191 000a 0DF10600 		add	r0, sp, #6
 192 000e 9847     		blx	r3
 193              	.LVL14:
 194              		.loc 1 1025 10 view .LVU43
 195 0010 10B1     		cbz	r0, .L16
1026:Lib/soes/src/esc.c ****       {
1027:Lib/soes/src/esc.c ****          device_id = 0;
 196              		.loc 1 1027 10 is_stmt 1 view .LVU44
 197              		.loc 1 1027 20 is_stmt 0 view .LVU45
 198 0012 0023     		movs	r3, #0
 199 0014 ADF80630 		strh	r3, [sp, #6]	@ movhi
 200              	.L16:
1028:Lib/soes/src/esc.c ****       }
1029:Lib/soes/src/esc.c ****    }
1030:Lib/soes/src/esc.c ****    else
1031:Lib/soes/src/esc.c ****    {
1032:Lib/soes/src/esc.c ****       ESC_read (ESCREG_CONF_STATION_ALIAS,
1033:Lib/soes/src/esc.c ****                 (void *)&device_id,
1034:Lib/soes/src/esc.c ****                 sizeof (device_id));
1035:Lib/soes/src/esc.c ****    }
1036:Lib/soes/src/esc.c **** 
1037:Lib/soes/src/esc.c ****    if (device_id != 0)
 201              		.loc 1 1037 4 is_stmt 1 view .LVU46
ARM GAS  /tmp/ccoKziDo.s 			page 23


 202              		.loc 1 1037 18 is_stmt 0 view .LVU47
 203 0018 BDF80600 		ldrh	r0, [sp, #6]
 204              		.loc 1 1037 7 view .LVU48
 205 001c 50B9     		cbnz	r0, .L20
1038:Lib/soes/src/esc.c ****    {
1039:Lib/soes/src/esc.c ****       /* Load the Device Identification Value to the AL Status Code register */
1040:Lib/soes/src/esc.c ****       ESC_ALerror (device_id);
1041:Lib/soes/src/esc.c **** 
1042:Lib/soes/src/esc.c ****       return ESCREG_AL_ID_REQUEST;
1043:Lib/soes/src/esc.c ****    }
1044:Lib/soes/src/esc.c **** 
1045:Lib/soes/src/esc.c ****    return 0;
 206              		.loc 1 1045 11 view .LVU49
 207 001e 0020     		movs	r0, #0
 208              	.L17:
1046:Lib/soes/src/esc.c **** }
 209              		.loc 1 1046 1 view .LVU50
 210 0020 03B0     		add	sp, sp, #12
 211              		.cfi_remember_state
 212              		.cfi_def_cfa_offset 4
 213              		@ sp needed
 214 0022 5DF804FB 		ldr	pc, [sp], #4
 215              	.L15:
 216              		.cfi_restore_state
1032:Lib/soes/src/esc.c ****                 (void *)&device_id,
 217              		.loc 1 1032 7 is_stmt 1 view .LVU51
 218 0026 0222     		movs	r2, #2
 219 0028 0DF10601 		add	r1, sp, #6
 220 002c 1220     		movs	r0, #18
 221 002e FFF7FEFF 		bl	ESC_read
 222              	.LVL15:
 223 0032 F1E7     		b	.L16
 224              	.L20:
1040:Lib/soes/src/esc.c **** 
 225              		.loc 1 1040 7 view .LVU52
 226 0034 FFF7FEFF 		bl	ESC_ALerror
 227              	.LVL16:
1042:Lib/soes/src/esc.c ****    }
 228              		.loc 1 1042 7 view .LVU53
1042:Lib/soes/src/esc.c ****    }
 229              		.loc 1 1042 14 is_stmt 0 view .LVU54
 230 0038 2020     		movs	r0, #32
 231 003a F1E7     		b	.L17
 232              	.L22:
 233              		.align	2
 234              	.L21:
 235 003c 00000000 		.word	ESCvar
 236              		.cfi_endproc
 237              	.LFE37:
 239              		.section	.text.ESC_ALstatus,"ax",%progbits
 240              		.align	1
 241              		.global	ESC_ALstatus
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	ESC_ALstatus:
 247              	.LVL17:
ARM GAS  /tmp/ccoKziDo.s 			page 24


 248              	.LFB1:
  37:Lib/soes/src/esc.c ****    uint16_t dummy;
 249              		.loc 1 37 1 is_stmt 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 0, uses_anonymous_args = 0
  37:Lib/soes/src/esc.c ****    uint16_t dummy;
 253              		.loc 1 37 1 is_stmt 0 view .LVU56
 254 0000 00B5     		push	{lr}
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 14, -4
 257 0002 83B0     		sub	sp, sp, #12
 258              		.cfi_def_cfa_offset 16
  38:Lib/soes/src/esc.c ****    ESCvar.ALstatus = status;
 259              		.loc 1 38 4 is_stmt 1 view .LVU57
  39:Lib/soes/src/esc.c ****    dummy = htoes ((uint16_t) status);
 260              		.loc 1 39 4 view .LVU58
  39:Lib/soes/src/esc.c ****    dummy = htoes ((uint16_t) status);
 261              		.loc 1 39 20 is_stmt 0 view .LVU59
 262 0004 074B     		ldr	r3, .L25
 263 0006 A3F88000 		strh	r0, [r3, #128]	@ movhi
  40:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALSTATUS, &dummy, sizeof (dummy));
 264              		.loc 1 40 4 is_stmt 1 view .LVU60
  40:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALSTATUS, &dummy, sizeof (dummy));
 265              		.loc 1 40 10 is_stmt 0 view .LVU61
 266 000a ADF80600 		strh	r0, [sp, #6]	@ movhi
  41:Lib/soes/src/esc.c **** }
 267              		.loc 1 41 4 is_stmt 1 view .LVU62
 268 000e 0222     		movs	r2, #2
 269 0010 0DF10601 		add	r1, sp, #6
 270 0014 4FF49870 		mov	r0, #304
 271              	.LVL18:
  41:Lib/soes/src/esc.c **** }
 272              		.loc 1 41 4 is_stmt 0 view .LVU63
 273 0018 FFF7FEFF 		bl	ESC_write
 274              	.LVL19:
  42:Lib/soes/src/esc.c **** 
 275              		.loc 1 42 1 view .LVU64
 276 001c 03B0     		add	sp, sp, #12
 277              		.cfi_def_cfa_offset 4
 278              		@ sp needed
 279 001e 5DF804FB 		ldr	pc, [sp], #4
 280              	.L26:
 281 0022 00BF     		.align	2
 282              	.L25:
 283 0024 00000000 		.word	ESCvar
 284              		.cfi_endproc
 285              	.LFE1:
 287              		.section	.text.ESC_ALeventmaskwrite,"ax",%progbits
 288              		.align	1
 289              		.global	ESC_ALeventmaskwrite
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	ESC_ALeventmaskwrite:
 295              	.LVL20:
 296              	.LFB3:
ARM GAS  /tmp/ccoKziDo.s 			page 25


  91:Lib/soes/src/esc.c ****    uint32_t aleventmask;
 297              		.loc 1 91 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Lib/soes/src/esc.c ****    uint32_t aleventmask;
 301              		.loc 1 91 1 is_stmt 0 view .LVU66
 302 0000 00B5     		push	{lr}
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 14, -4
 305 0002 83B0     		sub	sp, sp, #12
 306              		.cfi_def_cfa_offset 16
  92:Lib/soes/src/esc.c ****    aleventmask = htoel(mask);
 307              		.loc 1 92 4 is_stmt 1 view .LVU67
  93:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENTMASK, &aleventmask, sizeof(aleventmask));
 308              		.loc 1 93 4 view .LVU68
  93:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENTMASK, &aleventmask, sizeof(aleventmask));
 309              		.loc 1 93 16 is_stmt 0 view .LVU69
 310 0004 0190     		str	r0, [sp, #4]
  94:Lib/soes/src/esc.c **** }
 311              		.loc 1 94 4 is_stmt 1 view .LVU70
 312 0006 0422     		movs	r2, #4
 313 0008 0DEB0201 		add	r1, sp, r2
 314 000c 4FF40170 		mov	r0, #516
 315              	.LVL21:
  94:Lib/soes/src/esc.c **** }
 316              		.loc 1 94 4 is_stmt 0 view .LVU71
 317 0010 FFF7FEFF 		bl	ESC_write
 318              	.LVL22:
  95:Lib/soes/src/esc.c **** 
 319              		.loc 1 95 1 view .LVU72
 320 0014 03B0     		add	sp, sp, #12
 321              		.cfi_def_cfa_offset 4
 322              		@ sp needed
 323 0016 5DF804FB 		ldr	pc, [sp], #4
 324              		.cfi_endproc
 325              	.LFE3:
 327              		.section	.text.ESC_ALeventmaskread,"ax",%progbits
 328              		.align	1
 329              		.global	ESC_ALeventmaskread
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 334              	ESC_ALeventmaskread:
 335              	.LFB4:
 102:Lib/soes/src/esc.c ****    uint32_t aleventmask;
 336              		.loc 1 102 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 8
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 00B5     		push	{lr}
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 14, -4
 343 0002 83B0     		sub	sp, sp, #12
 344              		.cfi_def_cfa_offset 16
 103:Lib/soes/src/esc.c **** 
 345              		.loc 1 103 4 view .LVU74
ARM GAS  /tmp/ccoKziDo.s 			page 26


 105:Lib/soes/src/esc.c ****    return htoel(aleventmask);
 346              		.loc 1 105 4 view .LVU75
 347 0004 0422     		movs	r2, #4
 348 0006 0DEB0201 		add	r1, sp, r2
 349 000a 4FF40170 		mov	r0, #516
 350 000e FFF7FEFF 		bl	ESC_read
 351              	.LVL23:
 106:Lib/soes/src/esc.c **** }
 352              		.loc 1 106 4 view .LVU76
 107:Lib/soes/src/esc.c **** 
 353              		.loc 1 107 1 is_stmt 0 view .LVU77
 354 0012 0198     		ldr	r0, [sp, #4]
 355 0014 03B0     		add	sp, sp, #12
 356              		.cfi_def_cfa_offset 4
 357              		@ sp needed
 358 0016 5DF804FB 		ldr	pc, [sp], #4
 359              		.cfi_endproc
 360              	.LFE4:
 362              		.section	.text.ESC_ALeventwrite,"ax",%progbits
 363              		.align	1
 364              		.global	ESC_ALeventwrite
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	ESC_ALeventwrite:
 370              	.LVL24:
 371              	.LFB5:
 114:Lib/soes/src/esc.c ****    uint32_t alevent;
 372              		.loc 1 114 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 114:Lib/soes/src/esc.c ****    uint32_t alevent;
 376              		.loc 1 114 1 is_stmt 0 view .LVU79
 377 0000 00B5     		push	{lr}
 378              		.cfi_def_cfa_offset 4
 379              		.cfi_offset 14, -4
 380 0002 83B0     		sub	sp, sp, #12
 381              		.cfi_def_cfa_offset 16
 115:Lib/soes/src/esc.c ****    alevent = htoel(event);
 382              		.loc 1 115 4 is_stmt 1 view .LVU80
 116:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENT, &alevent, sizeof(alevent));
 383              		.loc 1 116 4 view .LVU81
 116:Lib/soes/src/esc.c ****    ESC_write (ESCREG_ALEVENT, &alevent, sizeof(alevent));
 384              		.loc 1 116 12 is_stmt 0 view .LVU82
 385 0004 0190     		str	r0, [sp, #4]
 117:Lib/soes/src/esc.c **** }
 386              		.loc 1 117 4 is_stmt 1 view .LVU83
 387 0006 0422     		movs	r2, #4
 388 0008 0DEB0201 		add	r1, sp, r2
 389 000c 4FF40870 		mov	r0, #544
 390              	.LVL25:
 117:Lib/soes/src/esc.c **** }
 391              		.loc 1 117 4 is_stmt 0 view .LVU84
 392 0010 FFF7FEFF 		bl	ESC_write
 393              	.LVL26:
 118:Lib/soes/src/esc.c **** 
ARM GAS  /tmp/ccoKziDo.s 			page 27


 394              		.loc 1 118 1 view .LVU85
 395 0014 03B0     		add	sp, sp, #12
 396              		.cfi_def_cfa_offset 4
 397              		@ sp needed
 398 0016 5DF804FB 		ldr	pc, [sp], #4
 399              		.cfi_endproc
 400              	.LFE5:
 402              		.section	.text.ESC_ALeventread,"ax",%progbits
 403              		.align	1
 404              		.global	ESC_ALeventread
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	ESC_ALeventread:
 410              	.LFB6:
 125:Lib/soes/src/esc.c ****    uint32_t alevent;
 411              		.loc 1 125 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 00B5     		push	{lr}
 416              		.cfi_def_cfa_offset 4
 417              		.cfi_offset 14, -4
 418 0002 83B0     		sub	sp, sp, #12
 419              		.cfi_def_cfa_offset 16
 126:Lib/soes/src/esc.c ****    ESC_read (ESCREG_ALEVENT, &alevent, sizeof(alevent));
 420              		.loc 1 126 4 view .LVU87
 127:Lib/soes/src/esc.c ****    return htoel(alevent);
 421              		.loc 1 127 4 view .LVU88
 422 0004 0422     		movs	r2, #4
 423 0006 0DEB0201 		add	r1, sp, r2
 424 000a 4FF40870 		mov	r0, #544
 425 000e FFF7FEFF 		bl	ESC_read
 426              	.LVL27:
 128:Lib/soes/src/esc.c **** }
 427              		.loc 1 128 4 view .LVU89
 129:Lib/soes/src/esc.c **** 
 428              		.loc 1 129 1 is_stmt 0 view .LVU90
 429 0012 0198     		ldr	r0, [sp, #4]
 430 0014 03B0     		add	sp, sp, #12
 431              		.cfi_def_cfa_offset 4
 432              		@ sp needed
 433 0016 5DF804FB 		ldr	pc, [sp], #4
 434              		.cfi_endproc
 435              	.LFE6:
 437              		.section	.text.ESC_SMack,"ax",%progbits
 438              		.align	1
 439              		.global	ESC_SMack
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	ESC_SMack:
 445              	.LVL28:
 446              	.LFB7:
 137:Lib/soes/src/esc.c ****    uint8_t dummy;
 447              		.loc 1 137 1 is_stmt 1 view -0
 448              		.cfi_startproc
ARM GAS  /tmp/ccoKziDo.s 			page 28


 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 137:Lib/soes/src/esc.c ****    uint8_t dummy;
 451              		.loc 1 137 1 is_stmt 0 view .LVU92
 452 0000 00B5     		push	{lr}
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 14, -4
 455 0002 83B0     		sub	sp, sp, #12
 456              		.cfi_def_cfa_offset 16
 138:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESCREG_SM0ACTIVATE + (n << 3)), &dummy, 1);
 457              		.loc 1 138 4 is_stmt 1 view .LVU93
 139:Lib/soes/src/esc.c **** }
 458              		.loc 1 139 4 view .LVU94
 139:Lib/soes/src/esc.c **** }
 459              		.loc 1 139 49 is_stmt 0 view .LVU95
 460 0004 C000     		lsls	r0, r0, #3
 461              	.LVL29:
 139:Lib/soes/src/esc.c **** }
 462              		.loc 1 139 4 view .LVU96
 463 0006 0122     		movs	r2, #1
 464 0008 0DF10701 		add	r1, sp, #7
 465 000c 00F60600 		addw	r0, r0, #2054
 466 0010 FFF7FEFF 		bl	ESC_read
 467              	.LVL30:
 140:Lib/soes/src/esc.c **** 
 468              		.loc 1 140 1 view .LVU97
 469 0014 03B0     		add	sp, sp, #12
 470              		.cfi_def_cfa_offset 4
 471              		@ sp needed
 472 0016 5DF804FB 		ldr	pc, [sp], #4
 473              		.cfi_endproc
 474              	.LFE7:
 476              		.section	.text.ESC_SMstatus,"ax",%progbits
 477              		.align	1
 478              		.global	ESC_SMstatus
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	ESC_SMstatus:
 484              	.LVL31:
 485              	.LFB8:
 148:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 486              		.loc 1 148 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 148:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 490              		.loc 1 148 1 is_stmt 0 view .LVU99
 491 0000 08B5     		push	{r3, lr}
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 3, -8
 494              		.cfi_offset 14, -4
 149:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 495              		.loc 1 149 4 is_stmt 1 view .LVU100
 150:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESCREG_SM0STATUS + (n << 3)), &(sm->Status), 1);
 496              		.loc 1 150 4 view .LVU101
 150:Lib/soes/src/esc.c ****    ESC_read ((uint16_t)(ESCREG_SM0STATUS + (n << 3)), &(sm->Status), 1);
ARM GAS  /tmp/ccoKziDo.s 			page 29


 497              		.loc 1 150 7 is_stmt 0 view .LVU102
 498 0002 00F11703 		add	r3, r0, #23
 499 0006 0549     		ldr	r1, .L39
 500 0008 01EBC301 		add	r1, r1, r3, lsl #3
 501              	.LVL32:
 151:Lib/soes/src/esc.c **** }
 502              		.loc 1 151 4 is_stmt 1 view .LVU103
 151:Lib/soes/src/esc.c **** }
 503              		.loc 1 151 47 is_stmt 0 view .LVU104
 504 000c C000     		lsls	r0, r0, #3
 505              	.LVL33:
 151:Lib/soes/src/esc.c **** }
 506              		.loc 1 151 4 view .LVU105
 507 000e 0122     		movs	r2, #1
 508 0010 0931     		adds	r1, r1, #9
 509              	.LVL34:
 151:Lib/soes/src/esc.c **** }
 510              		.loc 1 151 4 view .LVU106
 511 0012 00F60500 		addw	r0, r0, #2053
 512 0016 FFF7FEFF 		bl	ESC_read
 513              	.LVL35:
 152:Lib/soes/src/esc.c **** 
 514              		.loc 1 152 1 view .LVU107
 515 001a 08BD     		pop	{r3, pc}
 516              	.L40:
 517              		.align	2
 518              	.L39:
 519 001c 00000000 		.word	ESCvar
 520              		.cfi_endproc
 521              	.LFE8:
 523              		.section	.text.ESC_SMwritepdi,"ax",%progbits
 524              		.align	1
 525              		.global	ESC_SMwritepdi
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	ESC_SMwritepdi:
 531              	.LVL36:
 532              	.LFB9:
 159:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 533              		.loc 1 159 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 159:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 537              		.loc 1 159 1 is_stmt 0 view .LVU109
 538 0000 08B5     		push	{r3, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 160:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 542              		.loc 1 160 4 is_stmt 1 view .LVU110
 161:Lib/soes/src/esc.c ****    ESC_write ((uint16_t)(ESCREG_SM0PDI + (n << 3)), &(sm->ActPDI), 1);
 543              		.loc 1 161 4 view .LVU111
 161:Lib/soes/src/esc.c ****    ESC_write ((uint16_t)(ESCREG_SM0PDI + (n << 3)), &(sm->ActPDI), 1);
 544              		.loc 1 161 7 is_stmt 0 view .LVU112
 545 0002 00F11703 		add	r3, r0, #23
ARM GAS  /tmp/ccoKziDo.s 			page 30


 546 0006 0549     		ldr	r1, .L43
 547 0008 01EBC301 		add	r1, r1, r3, lsl #3
 548              	.LVL37:
 162:Lib/soes/src/esc.c **** }
 549              		.loc 1 162 4 is_stmt 1 view .LVU113
 162:Lib/soes/src/esc.c **** }
 550              		.loc 1 162 45 is_stmt 0 view .LVU114
 551 000c C000     		lsls	r0, r0, #3
 552              	.LVL38:
 162:Lib/soes/src/esc.c **** }
 553              		.loc 1 162 4 view .LVU115
 554 000e 0122     		movs	r2, #1
 555 0010 0B31     		adds	r1, r1, #11
 556              	.LVL39:
 162:Lib/soes/src/esc.c **** }
 557              		.loc 1 162 4 view .LVU116
 558 0012 00F60700 		addw	r0, r0, #2055
 559 0016 FFF7FEFF 		bl	ESC_write
 560              	.LVL40:
 163:Lib/soes/src/esc.c **** 
 561              		.loc 1 163 1 view .LVU117
 562 001a 08BD     		pop	{r3, pc}
 563              	.L44:
 564              		.align	2
 565              	.L43:
 566 001c 00000000 		.word	ESCvar
 567              		.cfi_endproc
 568              	.LFE9:
 570              		.section	.text.ESC_SMenable,"ax",%progbits
 571              		.align	1
 572              		.global	ESC_SMenable
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	ESC_SMenable:
 578              	.LVL41:
 579              	.LFB10:
 170:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 580              		.loc 1 170 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 584              		.loc 1 170 1 is_stmt 0 view .LVU119
 585 0000 08B5     		push	{r3, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 3, -8
 588              		.cfi_offset 14, -4
 171:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 589              		.loc 1 171 4 is_stmt 1 view .LVU120
 172:Lib/soes/src/esc.c ****    sm->ActPDI &= (uint8_t)~ESCREG_SMENABLE_BIT;
 590              		.loc 1 172 4 view .LVU121
 172:Lib/soes/src/esc.c ****    sm->ActPDI &= (uint8_t)~ESCREG_SMENABLE_BIT;
 591              		.loc 1 172 7 is_stmt 0 view .LVU122
 592 0002 00F11702 		add	r2, r0, #23
 593 0006 054B     		ldr	r3, .L47
 594 0008 03EBC203 		add	r3, r3, r2, lsl #3
ARM GAS  /tmp/ccoKziDo.s 			page 31


 595              	.LVL42:
 173:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 596              		.loc 1 173 4 is_stmt 1 view .LVU123
 173:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 597              		.loc 1 173 15 is_stmt 0 view .LVU124
 598 000c DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 599 000e 22F00102 		bic	r2, r2, #1
 600 0012 DA72     		strb	r2, [r3, #11]
 174:Lib/soes/src/esc.c **** }
 601              		.loc 1 174 4 is_stmt 1 view .LVU125
 602 0014 FFF7FEFF 		bl	ESC_SMwritepdi
 603              	.LVL43:
 175:Lib/soes/src/esc.c **** /** Write 1 to Bit0 in SM PDI control register 0x807(+ offset to SyncManager n) to De-activte the S
 604              		.loc 1 175 1 is_stmt 0 view .LVU126
 605 0018 08BD     		pop	{r3, pc}
 606              	.L48:
 607 001a 00BF     		.align	2
 608              	.L47:
 609 001c 00000000 		.word	ESCvar
 610              		.cfi_endproc
 611              	.LFE10:
 613              		.section	.text.ESC_SMdisable,"ax",%progbits
 614              		.align	1
 615              		.global	ESC_SMdisable
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 620              	ESC_SMdisable:
 621              	.LVL44:
 622              	.LFB11:
 181:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 623              		.loc 1 181 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 181:Lib/soes/src/esc.c ****    _ESCsm2 *sm;
 627              		.loc 1 181 1 is_stmt 0 view .LVU128
 628 0000 08B5     		push	{r3, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
 182:Lib/soes/src/esc.c ****    sm = (_ESCsm2 *)&ESCvar.SM[n];
 632              		.loc 1 182 4 is_stmt 1 view .LVU129
 183:Lib/soes/src/esc.c ****    sm->ActPDI |= ESCREG_SMENABLE_BIT;
 633              		.loc 1 183 4 view .LVU130
 183:Lib/soes/src/esc.c ****    sm->ActPDI |= ESCREG_SMENABLE_BIT;
 634              		.loc 1 183 7 is_stmt 0 view .LVU131
 635 0002 00F11702 		add	r2, r0, #23
 636 0006 054B     		ldr	r3, .L51
 637 0008 03EBC203 		add	r3, r3, r2, lsl #3
 638              	.LVL45:
 184:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 639              		.loc 1 184 4 is_stmt 1 view .LVU132
 184:Lib/soes/src/esc.c ****    ESC_SMwritepdi (n);
 640              		.loc 1 184 15 is_stmt 0 view .LVU133
 641 000c DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 642 000e 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccoKziDo.s 			page 32


 643 0012 DA72     		strb	r2, [r3, #11]
 185:Lib/soes/src/esc.c **** }
 644              		.loc 1 185 4 is_stmt 1 view .LVU134
 645 0014 FFF7FEFF 		bl	ESC_SMwritepdi
 646              	.LVL46:
 186:Lib/soes/src/esc.c **** /** Read Configured Station Address register 0x010 assigned by the Master.
 647              		.loc 1 186 1 is_stmt 0 view .LVU135
 648 0018 08BD     		pop	{r3, pc}
 649              	.L52:
 650 001a 00BF     		.align	2
 651              	.L51:
 652 001c 00000000 		.word	ESCvar
 653              		.cfi_endproc
 654              	.LFE11:
 656              		.section	.text.ESC_address,"ax",%progbits
 657              		.align	1
 658              		.global	ESC_address
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 663              	ESC_address:
 664              	.LFB12:
 191:Lib/soes/src/esc.c ****    ESC_read (ESCREG_ADDRESS, (void *) &ESCvar.address, sizeof (ESCvar.address));
 665              		.loc 1 191 1 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669 0000 08B5     		push	{r3, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 3, -8
 672              		.cfi_offset 14, -4
 192:Lib/soes/src/esc.c ****    ESCvar.address = etohs (ESCvar.address);
 673              		.loc 1 192 4 view .LVU137
 674 0002 0222     		movs	r2, #2
 675 0004 0249     		ldr	r1, .L55
 676 0006 1020     		movs	r0, #16
 677 0008 FFF7FEFF 		bl	ESC_read
 678              	.LVL47:
 193:Lib/soes/src/esc.c **** }
 679              		.loc 1 193 4 view .LVU138
 194:Lib/soes/src/esc.c **** 
 680              		.loc 1 194 1 is_stmt 0 view .LVU139
 681 000c 08BD     		pop	{r3, pc}
 682              	.L56:
 683 000e 00BF     		.align	2
 684              	.L55:
 685 0010 88000000 		.word	ESCvar+136
 686              		.cfi_endproc
 687              	.LFE12:
 689              		.section	.text.ESC_WDstatus,"ax",%progbits
 690              		.align	1
 691              		.global	ESC_WDstatus
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 696              	ESC_WDstatus:
 697              	.LFB13:
ARM GAS  /tmp/ccoKziDo.s 			page 33


 201:Lib/soes/src/esc.c ****    uint16_t wdstatus;
 698              		.loc 1 201 1 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702 0000 00B5     		push	{lr}
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 14, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              		.cfi_def_cfa_offset 16
 202:Lib/soes/src/esc.c ****    ESC_read (ESCREG_WDSTATUS, &wdstatus, 2);
 707              		.loc 1 202 4 view .LVU141
 203:Lib/soes/src/esc.c ****    wdstatus = etohs (wdstatus);
 708              		.loc 1 203 4 view .LVU142
 709 0004 0222     		movs	r2, #2
 710 0006 0DF10601 		add	r1, sp, #6
 711 000a 4FF48860 		mov	r0, #1088
 712 000e FFF7FEFF 		bl	ESC_read
 713              	.LVL48:
 204:Lib/soes/src/esc.c ****    return (uint8_t) wdstatus;
 714              		.loc 1 204 4 view .LVU143
 205:Lib/soes/src/esc.c **** }
 715              		.loc 1 205 4 view .LVU144
 206:Lib/soes/src/esc.c **** 
 716              		.loc 1 206 1 is_stmt 0 view .LVU145
 717 0012 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 718 0016 03B0     		add	sp, sp, #12
 719              		.cfi_def_cfa_offset 4
 720              		@ sp needed
 721 0018 5DF804FB 		ldr	pc, [sp], #4
 722              		.cfi_endproc
 723              	.LFE13:
 725              		.section	.text.ESC_SYNCactivation,"ax",%progbits
 726              		.align	1
 727              		.global	ESC_SYNCactivation
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	ESC_SYNCactivation:
 733              	.LFB14:
 213:Lib/soes/src/esc.c ****    uint8_t activation;
 734              		.loc 1 213 1 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 8
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738 0000 00B5     		push	{lr}
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 14, -4
 741 0002 83B0     		sub	sp, sp, #12
 742              		.cfi_def_cfa_offset 16
 214:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC_ACT, &activation, sizeof(activation));
 743              		.loc 1 214 4 view .LVU147
 215:Lib/soes/src/esc.c ****    return activation;
 744              		.loc 1 215 4 view .LVU148
 745 0004 0122     		movs	r2, #1
 746 0006 0DF10701 		add	r1, sp, #7
 747 000a 40F68110 		movw	r0, #2433
ARM GAS  /tmp/ccoKziDo.s 			page 34


 748 000e FFF7FEFF 		bl	ESC_read
 749              	.LVL49:
 216:Lib/soes/src/esc.c **** }
 750              		.loc 1 216 4 view .LVU149
 217:Lib/soes/src/esc.c **** 
 751              		.loc 1 217 1 is_stmt 0 view .LVU150
 752 0012 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 753 0016 03B0     		add	sp, sp, #12
 754              		.cfi_def_cfa_offset 4
 755              		@ sp needed
 756 0018 5DF804FB 		ldr	pc, [sp], #4
 757              		.cfi_endproc
 758              	.LFE14:
 760              		.section	.text.ESC_SYNC0cycletime,"ax",%progbits
 761              		.align	1
 762              		.global	ESC_SYNC0cycletime
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	ESC_SYNC0cycletime:
 768              	.LFB15:
 224:Lib/soes/src/esc.c ****    uint32_t cycletime;
 769              		.loc 1 224 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 8
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773 0000 00B5     		push	{lr}
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 14, -4
 776 0002 83B0     		sub	sp, sp, #12
 777              		.cfi_def_cfa_offset 16
 225:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC0_CYCLE_TIME, &cycletime, sizeof(cycletime));
 778              		.loc 1 225 4 view .LVU152
 226:Lib/soes/src/esc.c ****    cycletime = etohl (cycletime);
 779              		.loc 1 226 4 view .LVU153
 780 0004 0422     		movs	r2, #4
 781 0006 0DEB0201 		add	r1, sp, r2
 782 000a 4FF41A60 		mov	r0, #2464
 783 000e FFF7FEFF 		bl	ESC_read
 784              	.LVL50:
 227:Lib/soes/src/esc.c ****    return cycletime;
 785              		.loc 1 227 4 view .LVU154
 228:Lib/soes/src/esc.c **** }
 786              		.loc 1 228 4 view .LVU155
 229:Lib/soes/src/esc.c **** 
 787              		.loc 1 229 1 is_stmt 0 view .LVU156
 788 0012 0198     		ldr	r0, [sp, #4]
 789 0014 03B0     		add	sp, sp, #12
 790              		.cfi_def_cfa_offset 4
 791              		@ sp needed
 792 0016 5DF804FB 		ldr	pc, [sp], #4
 793              		.cfi_endproc
 794              	.LFE15:
 796              		.section	.text.ESC_SYNC1cycletime,"ax",%progbits
 797              		.align	1
 798              		.global	ESC_SYNC1cycletime
 799              		.syntax unified
ARM GAS  /tmp/ccoKziDo.s 			page 35


 800              		.thumb
 801              		.thumb_func
 803              	ESC_SYNC1cycletime:
 804              	.LFB16:
 236:Lib/soes/src/esc.c ****    uint32_t cycletime;
 805              		.loc 1 236 1 is_stmt 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809 0000 00B5     		push	{lr}
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 14, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              		.cfi_def_cfa_offset 16
 237:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SYNC1_CYCLE_TIME, &cycletime, 4);
 814              		.loc 1 237 4 view .LVU158
 238:Lib/soes/src/esc.c ****    cycletime = etohl (cycletime);
 815              		.loc 1 238 4 view .LVU159
 816 0004 0422     		movs	r2, #4
 817 0006 0DEB0201 		add	r1, sp, r2
 818 000a 40F6A410 		movw	r0, #2468
 819 000e FFF7FEFF 		bl	ESC_read
 820              	.LVL51:
 239:Lib/soes/src/esc.c ****    return cycletime;
 821              		.loc 1 239 4 view .LVU160
 240:Lib/soes/src/esc.c **** }
 822              		.loc 1 240 4 view .LVU161
 241:Lib/soes/src/esc.c **** 
 823              		.loc 1 241 1 is_stmt 0 view .LVU162
 824 0012 0198     		ldr	r0, [sp, #4]
 825 0014 03B0     		add	sp, sp, #12
 826              		.cfi_def_cfa_offset 4
 827              		@ sp needed
 828 0016 5DF804FB 		ldr	pc, [sp], #4
 829              		.cfi_endproc
 830              	.LFE16:
 832              		.section	.text.ESC_checkDC,"ax",%progbits
 833              		.align	1
 834              		.global	ESC_checkDC
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	ESC_checkDC:
 840              	.LFB17:
 249:Lib/soes/src/esc.c ****    uint16_t ret = 0;
 841              		.loc 1 249 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845 0000 08B5     		push	{r3, lr}
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 3, -8
 848              		.cfi_offset 14, -4
 250:Lib/soes/src/esc.c **** 
 849              		.loc 1 250 4 view .LVU164
 850              	.LVL52:
 252:Lib/soes/src/esc.c ****    /* Do we need to check sync settings? */
ARM GAS  /tmp/ccoKziDo.s 			page 36


 851              		.loc 1 252 4 view .LVU165
 252:Lib/soes/src/esc.c ****    /* Do we need to check sync settings? */
 852              		.loc 1 252 23 is_stmt 0 view .LVU166
 853 0002 FFF7FEFF 		bl	ESC_SYNCactivation
 854              	.LVL53:
 254:Lib/soes/src/esc.c ****    {
 855              		.loc 1 254 4 is_stmt 1 view .LVU167
 254:Lib/soes/src/esc.c ****    {
 856              		.loc 1 254 6 is_stmt 0 view .LVU168
 857 0006 10F0090F 		tst	r0, #9
 858 000a 04D0     		beq	.L66
 259:Lib/soes/src/esc.c ****       if(ESCvar.esc_check_dc_handler != NULL)
 859              		.loc 1 259 7 is_stmt 1 view .LVU169
 860              	.LVL54:
 260:Lib/soes/src/esc.c ****       {
 861              		.loc 1 260 7 view .LVU170
 260:Lib/soes/src/esc.c ****       {
 862              		.loc 1 260 16 is_stmt 0 view .LVU171
 863 000c 064B     		ldr	r3, .L70
 864 000e 1B6E     		ldr	r3, [r3, #96]
 260:Lib/soes/src/esc.c ****       {
 865              		.loc 1 260 9 view .LVU172
 866 0010 43B1     		cbz	r3, .L68
 262:Lib/soes/src/esc.c ****       }
 867              		.loc 1 262 10 is_stmt 1 view .LVU173
 262:Lib/soes/src/esc.c ****       }
 868              		.loc 1 262 23 is_stmt 0 view .LVU174
 869 0012 9847     		blx	r3
 870              	.LVL55:
 262:Lib/soes/src/esc.c ****       }
 871              		.loc 1 262 23 view .LVU175
 872 0014 05E0     		b	.L67
 873              	.LVL56:
 874              	.L66:
 267:Lib/soes/src/esc.c ****       ESCvar.synccounter = 0;
 875              		.loc 1 267 7 is_stmt 1 view .LVU176
 267:Lib/soes/src/esc.c ****       ESCvar.synccounter = 0;
 876              		.loc 1 267 21 is_stmt 0 view .LVU177
 877 0016 044B     		ldr	r3, .L70
 878 0018 0020     		movs	r0, #0
 879              	.LVL57:
 267:Lib/soes/src/esc.c ****       ESCvar.synccounter = 0;
 880              		.loc 1 267 21 view .LVU178
 881 001a 83F87C00 		strb	r0, [r3, #124]
 268:Lib/soes/src/esc.c ****    }
 882              		.loc 1 268 7 is_stmt 1 view .LVU179
 268:Lib/soes/src/esc.c ****    }
 883              		.loc 1 268 26 is_stmt 0 view .LVU180
 884 001e 83F8E800 		strb	r0, [r3, #232]
 885              	.LVL58:
 886              	.L67:
 271:Lib/soes/src/esc.c **** }
 887              		.loc 1 271 4 is_stmt 1 view .LVU181
 272:Lib/soes/src/esc.c **** 
 888              		.loc 1 272 1 is_stmt 0 view .LVU182
 889 0022 08BD     		pop	{r3, pc}
 890              	.LVL59:
ARM GAS  /tmp/ccoKziDo.s 			page 37


 891              	.L68:
 259:Lib/soes/src/esc.c ****       if(ESCvar.esc_check_dc_handler != NULL)
 892              		.loc 1 259 11 view .LVU183
 893 0024 3020     		movs	r0, #48
 894              	.LVL60:
 259:Lib/soes/src/esc.c ****       if(ESCvar.esc_check_dc_handler != NULL)
 895              		.loc 1 259 11 view .LVU184
 896 0026 FCE7     		b	.L67
 897              	.L71:
 898              		.align	2
 899              	.L70:
 900 0028 00000000 		.word	ESCvar
 901              		.cfi_endproc
 902              	.LFE17:
 904              		.section	.text.ESC_checkmbx,"ax",%progbits
 905              		.align	1
 906              		.global	ESC_checkmbx
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	ESC_checkmbx:
 912              	.LVL61:
 913              	.LFB18:
 284:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 914              		.loc 1 284 1 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 284:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 918              		.loc 1 284 1 is_stmt 0 view .LVU186
 919 0000 38B5     		push	{r3, r4, r5, lr}
 920              		.cfi_def_cfa_offset 16
 921              		.cfi_offset 3, -16
 922              		.cfi_offset 4, -12
 923              		.cfi_offset 5, -8
 924              		.cfi_offset 14, -4
 925 0002 0546     		mov	r5, r0
 285:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM0, (void *) &ESCvar.SM[0], sizeof (ESCvar.SM[0]));
 926              		.loc 1 285 4 is_stmt 1 view .LVU187
 286:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM1, (void *) &ESCvar.SM[1], sizeof (ESCvar.SM[1]));
 927              		.loc 1 286 4 view .LVU188
 928 0004 2B4C     		ldr	r4, .L79
 929 0006 0822     		movs	r2, #8
 930 0008 2146     		mov	r1, r4
 931 000a 4FF40060 		mov	r0, #2048
 932              	.LVL62:
 286:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM1, (void *) &ESCvar.SM[1], sizeof (ESCvar.SM[1]));
 933              		.loc 1 286 4 is_stmt 0 view .LVU189
 934 000e FFF7FEFF 		bl	ESC_read
 935              	.LVL63:
 287:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[0];
 936              		.loc 1 287 4 is_stmt 1 view .LVU190
 937 0012 0822     		movs	r2, #8
 938 0014 A118     		adds	r1, r4, r2
 939 0016 40F60800 		movw	r0, #2056
 940 001a FFF7FEFF 		bl	ESC_read
 941              	.LVL64:
ARM GAS  /tmp/ccoKziDo.s 			page 38


 288:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_MBX0_sma) || (etohs (SM->Length) != ESC_MBX0_sml)
 942              		.loc 1 288 4 view .LVU191
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 943              		.loc 1 289 4 view .LVU192
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 944              		.loc 1 289 9 is_stmt 0 view .LVU193
 945 001e 34F8BC19 		ldrh	r1, [r4], #-188
 946              	.LVL65:
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 947              		.loc 1 289 28 view .LVU194
 948 0022 236F     		ldr	r3, [r4, #112]
 949 0024 1A88     		ldrh	r2, [r3]
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 950              		.loc 1 289 7 view .LVU195
 951 0026 9142     		cmp	r1, r2
 952 0028 2CD1     		bne	.L73
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 953              		.loc 1 289 46 discriminator 1 view .LVU196
 954 002a 234A     		ldr	r2, .L79+4
 955 002c B2F8BE10 		ldrh	r1, [r2, #190]
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 956              		.loc 1 289 68 discriminator 1 view .LVU197
 957 0030 5A88     		ldrh	r2, [r3, #2]
 289:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX0_smc) || (ESCvar.SM[0].ECsm == 0))
 958              		.loc 1 289 42 discriminator 1 view .LVU198
 959 0032 9142     		cmp	r1, r2
 960 0034 26D1     		bne	.L73
 290:Lib/soes/src/esc.c ****    {
 961              		.loc 1 290 14 view .LVU199
 962 0036 204A     		ldr	r2, .L79+4
 963 0038 92F8C020 		ldrb	r2, [r2, #192]	@ zero_extendqisi2
 290:Lib/soes/src/esc.c ****    {
 964              		.loc 1 290 27 view .LVU200
 965 003c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 290:Lib/soes/src/esc.c ****    {
 966              		.loc 1 290 8 view .LVU201
 967 003e 9A42     		cmp	r2, r3
 968 0040 20D1     		bne	.L73
 290:Lib/soes/src/esc.c ****    {
 969              		.loc 1 290 63 discriminator 1 view .LVU202
 970 0042 1D4B     		ldr	r3, .L79+4
 971 0044 93F8C230 		ldrb	r3, [r3, #194]	@ zero_extendqisi2
 290:Lib/soes/src/esc.c ****    {
 972              		.loc 1 290 41 discriminator 1 view .LVU203
 973 0048 13F0010F 		tst	r3, #1
 974 004c 1AD0     		beq	.L73
 297:Lib/soes/src/esc.c ****    if ((etohs (SM->PSA) != ESC_MBX1_sma) || (etohs (SM->Length) != ESC_MBX1_sml)
 975              		.loc 1 297 4 is_stmt 1 view .LVU204
 976              	.LVL66:
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 977              		.loc 1 298 4 view .LVU205
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 978              		.loc 1 298 9 is_stmt 0 view .LVU206
 979 004e 1A4B     		ldr	r3, .L79+4
 980 0050 B3F8C410 		ldrh	r1, [r3, #196]
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 981              		.loc 1 298 28 view .LVU207
ARM GAS  /tmp/ccoKziDo.s 			page 39


 982 0054 5B6F     		ldr	r3, [r3, #116]
 983 0056 1A88     		ldrh	r2, [r3]
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 984              		.loc 1 298 7 view .LVU208
 985 0058 9142     		cmp	r1, r2
 986 005a 1FD1     		bne	.L76
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 987              		.loc 1 298 46 discriminator 1 view .LVU209
 988 005c 164A     		ldr	r2, .L79+4
 989 005e B2F8C610 		ldrh	r1, [r2, #198]
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 990              		.loc 1 298 68 discriminator 1 view .LVU210
 991 0062 5A88     		ldrh	r2, [r3, #2]
 298:Lib/soes/src/esc.c ****        || (SM->Command != ESC_MBX1_smc) || (ESCvar.SM[1].ECsm == 0))
 992              		.loc 1 298 42 discriminator 1 view .LVU211
 993 0064 9142     		cmp	r1, r2
 994 0066 19D1     		bne	.L76
 299:Lib/soes/src/esc.c ****    {
 995              		.loc 1 299 14 view .LVU212
 996 0068 134A     		ldr	r2, .L79+4
 997 006a 92F8C820 		ldrb	r2, [r2, #200]	@ zero_extendqisi2
 299:Lib/soes/src/esc.c ****    {
 998              		.loc 1 299 27 view .LVU213
 999 006e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 299:Lib/soes/src/esc.c ****    {
 1000              		.loc 1 299 8 view .LVU214
 1001 0070 9A42     		cmp	r2, r3
 1002 0072 13D1     		bne	.L76
 299:Lib/soes/src/esc.c ****    {
 1003              		.loc 1 299 63 discriminator 1 view .LVU215
 1004 0074 104B     		ldr	r3, .L79+4
 1005 0076 93F8CA30 		ldrb	r3, [r3, #202]	@ zero_extendqisi2
 299:Lib/soes/src/esc.c ****    {
 1006              		.loc 1 299 41 discriminator 1 view .LVU216
 1007 007a 13F0010F 		tst	r3, #1
 1008 007e 0DD0     		beq	.L76
 306:Lib/soes/src/esc.c **** }
 1009              		.loc 1 306 11 view .LVU217
 1010 0080 2846     		mov	r0, r5
 1011 0082 0AE0     		b	.L75
 1012              	.LVL67:
 1013              	.L73:
 292:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 1014              		.loc 1 292 7 is_stmt 1 view .LVU218
 292:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 1015              		.loc 1 292 27 is_stmt 0 view .LVU219
 1016 0084 0124     		movs	r4, #1
 1017 0086 0C4B     		ldr	r3, .L79+4
 1018 0088 83F8B440 		strb	r4, [r3, #180]
 293:Lib/soes/src/esc.c ****       ESC_SMdisable (1);
 1019              		.loc 1 293 7 is_stmt 1 view .LVU220
 1020 008c 0020     		movs	r0, #0
 1021 008e FFF7FEFF 		bl	ESC_SMdisable
 1022              	.LVL68:
 294:Lib/soes/src/esc.c ****       return (uint8_t) (ESCinit | ESCerror);      //fail state change
 1023              		.loc 1 294 7 view .LVU221
 1024 0092 2046     		mov	r0, r4
ARM GAS  /tmp/ccoKziDo.s 			page 40


 1025 0094 FFF7FEFF 		bl	ESC_SMdisable
 1026              	.LVL69:
 295:Lib/soes/src/esc.c ****    }
 1027              		.loc 1 295 7 view .LVU222
 295:Lib/soes/src/esc.c ****    }
 1028              		.loc 1 295 14 is_stmt 0 view .LVU223
 1029 0098 1120     		movs	r0, #17
 1030              	.LVL70:
 1031              	.L75:
 307:Lib/soes/src/esc.c **** /** Try to start mailboxes for current ALControl state request by enabling SyncManager 0 and 1.
 1032              		.loc 1 307 1 view .LVU224
 1033 009a 38BD     		pop	{r3, r4, r5, pc}
 1034              	.LVL71:
 1035              	.L76:
 301:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 1036              		.loc 1 301 7 is_stmt 1 view .LVU225
 301:Lib/soes/src/esc.c ****       ESC_SMdisable (0);
 1037              		.loc 1 301 27 is_stmt 0 view .LVU226
 1038 009c 064B     		ldr	r3, .L79+4
 1039 009e 0222     		movs	r2, #2
 1040 00a0 83F8B420 		strb	r2, [r3, #180]
 302:Lib/soes/src/esc.c ****       ESC_SMdisable (1);
 1041              		.loc 1 302 7 is_stmt 1 view .LVU227
 1042 00a4 0020     		movs	r0, #0
 1043 00a6 FFF7FEFF 		bl	ESC_SMdisable
 1044              	.LVL72:
 303:Lib/soes/src/esc.c ****       return ESCinit | ESCerror;        //fail state change
 1045              		.loc 1 303 7 view .LVU228
 1046 00aa 0120     		movs	r0, #1
 1047 00ac FFF7FEFF 		bl	ESC_SMdisable
 1048              	.LVL73:
 304:Lib/soes/src/esc.c ****    }
 1049              		.loc 1 304 7 view .LVU229
 304:Lib/soes/src/esc.c ****    }
 1050              		.loc 1 304 14 is_stmt 0 view .LVU230
 1051 00b0 1120     		movs	r0, #17
 1052 00b2 F2E7     		b	.L75
 1053              	.L80:
 1054              		.align	2
 1055              	.L79:
 1056 00b4 BC000000 		.word	ESCvar+188
 1057 00b8 00000000 		.word	ESCvar
 1058              		.cfi_endproc
 1059              	.LFE18:
 1061              		.section	.text.ESC_startmbx,"ax",%progbits
 1062              		.align	1
 1063              		.global	ESC_startmbx
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1068              	ESC_startmbx:
 1069              	.LVL74:
 1070              	.LFB19:
 318:Lib/soes/src/esc.c ****    /* Assign SM settings */
 1071              		.loc 1 318 1 is_stmt 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoKziDo.s 			page 41


 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 318:Lib/soes/src/esc.c ****    /* Assign SM settings */
 1075              		.loc 1 318 1 is_stmt 0 view .LVU232
 1076 0000 10B5     		push	{r4, lr}
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 4, -8
 1079              		.cfi_offset 14, -4
 1080 0002 0446     		mov	r4, r0
 320:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mb[0];
 1081              		.loc 1 320 4 is_stmt 1 view .LVU233
 320:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mb[0];
 1082              		.loc 1 320 25 is_stmt 0 view .LVU234
 1083 0004 174B     		ldr	r3, .L86
 1084 0006 4FF40072 		mov	r2, #512
 1085 000a DA66     		str	r2, [r3, #108]
 321:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mb[1];
 1086              		.loc 1 321 4 is_stmt 1 view .LVU235
 321:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mb[1];
 1087              		.loc 1 321 21 is_stmt 0 view .LVU236
 1088 000c 1A1D     		adds	r2, r3, #4
 1089 000e 1A67     		str	r2, [r3, #112]
 322:Lib/soes/src/esc.c **** 
 1090              		.loc 1 322 4 is_stmt 1 view .LVU237
 322:Lib/soes/src/esc.c **** 
 1091              		.loc 1 322 21 is_stmt 0 view .LVU238
 1092 0010 03F10C02 		add	r2, r3, #12
 1093 0014 5A67     		str	r2, [r3, #116]
 325:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 1094              		.loc 1 325 4 is_stmt 1 view .LVU239
 1095 0016 0020     		movs	r0, #0
 1096              	.LVL75:
 325:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 1097              		.loc 1 325 4 is_stmt 0 view .LVU240
 1098 0018 FFF7FEFF 		bl	ESC_SMenable
 1099              	.LVL76:
 326:Lib/soes/src/esc.c ****    ESC_SMstatus (0);
 1100              		.loc 1 326 4 is_stmt 1 view .LVU241
 1101 001c 0120     		movs	r0, #1
 1102 001e FFF7FEFF 		bl	ESC_SMenable
 1103              	.LVL77:
 327:Lib/soes/src/esc.c ****    ESC_SMstatus (1);
 1104              		.loc 1 327 4 view .LVU242
 1105 0022 0020     		movs	r0, #0
 1106 0024 FFF7FEFF 		bl	ESC_SMstatus
 1107              	.LVL78:
 328:Lib/soes/src/esc.c ****    if ((state = ESC_checkmbx (state)) & ESCerror)
 1108              		.loc 1 328 4 view .LVU243
 1109 0028 0120     		movs	r0, #1
 1110 002a FFF7FEFF 		bl	ESC_SMstatus
 1111              	.LVL79:
 329:Lib/soes/src/esc.c ****    {
 1112              		.loc 1 329 4 view .LVU244
 329:Lib/soes/src/esc.c ****    {
 1113              		.loc 1 329 17 is_stmt 0 view .LVU245
 1114 002e 2046     		mov	r0, r4
 1115 0030 FFF7FEFF 		bl	ESC_checkmbx
 1116              	.LVL80:
ARM GAS  /tmp/ccoKziDo.s 			page 42


 1117 0034 0446     		mov	r4, r0
 1118              	.LVL81:
 329:Lib/soes/src/esc.c ****    {
 1119              		.loc 1 329 7 view .LVU246
 1120 0036 10F0100F 		tst	r0, #16
 1121 003a 0BD1     		bne	.L85
 336:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1122              		.loc 1 336 7 is_stmt 1 view .LVU247
 336:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1123              		.loc 1 336 35 is_stmt 0 view .LVU248
 1124 003c 094B     		ldr	r3, .L86
 1125 003e 93F8CA20 		ldrb	r2, [r3, #202]	@ zero_extendqisi2
 1126 0042 C2F34002 		ubfx	r2, r2, #1, #1
 336:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1127              		.loc 1 336 21 view .LVU249
 1128 0046 83F8AA20 		strb	r2, [r3, #170]
 337:Lib/soes/src/esc.c ****    }
 1129              		.loc 1 337 7 is_stmt 1 view .LVU250
 337:Lib/soes/src/esc.c ****    }
 1130              		.loc 1 337 21 is_stmt 0 view .LVU251
 1131 004a 0122     		movs	r2, #1
 1132 004c 83F86820 		strb	r2, [r3, #104]
 1133              	.LVL82:
 1134              	.L83:
 339:Lib/soes/src/esc.c **** }
 1135              		.loc 1 339 4 is_stmt 1 view .LVU252
 340:Lib/soes/src/esc.c **** 
 1136              		.loc 1 340 1 is_stmt 0 view .LVU253
 1137 0050 2046     		mov	r0, r4
 1138 0052 10BD     		pop	{r4, pc}
 1139              	.LVL83:
 1140              	.L85:
 331:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 1141              		.loc 1 331 7 is_stmt 1 view .LVU254
 1142 0054 1620     		movs	r0, #22
 1143              	.LVL84:
 331:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 1144              		.loc 1 331 7 is_stmt 0 view .LVU255
 1145 0056 FFF7FEFF 		bl	ESC_ALerror
 1146              	.LVL85:
 332:Lib/soes/src/esc.c ****    }
 1147              		.loc 1 332 7 is_stmt 1 view .LVU256
 332:Lib/soes/src/esc.c ****    }
 1148              		.loc 1 332 21 is_stmt 0 view .LVU257
 1149 005a 024B     		ldr	r3, .L86
 1150 005c 0022     		movs	r2, #0
 1151 005e 83F86820 		strb	r2, [r3, #104]
 1152 0062 F5E7     		b	.L83
 1153              	.L87:
 1154              		.align	2
 1155              	.L86:
 1156 0064 00000000 		.word	ESCvar
 1157              		.cfi_endproc
 1158              	.LFE19:
 1160              		.section	.text.ESC_startmbxboot,"ax",%progbits
 1161              		.align	1
 1162              		.global	ESC_startmbxboot
ARM GAS  /tmp/ccoKziDo.s 			page 43


 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	ESC_startmbxboot:
 1168              	.LVL86:
 1169              	.LFB20:
 352:Lib/soes/src/esc.c ****    /* Assign SM settings */
 1170              		.loc 1 352 1 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 352:Lib/soes/src/esc.c ****    /* Assign SM settings */
 1174              		.loc 1 352 1 is_stmt 0 view .LVU259
 1175 0000 10B5     		push	{r4, lr}
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 4, -8
 1178              		.cfi_offset 14, -4
 1179 0002 0446     		mov	r4, r0
 354:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mbboot[0];
 1180              		.loc 1 354 4 is_stmt 1 view .LVU260
 354:Lib/soes/src/esc.c ****    ESCvar.activemb0 = &ESCvar.mbboot[0];
 1181              		.loc 1 354 25 is_stmt 0 view .LVU261
 1182 0004 184B     		ldr	r3, .L93
 1183 0006 4FF40072 		mov	r2, #512
 1184 000a DA66     		str	r2, [r3, #108]
 355:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mbboot[1];
 1185              		.loc 1 355 4 is_stmt 1 view .LVU262
 355:Lib/soes/src/esc.c ****    ESCvar.activemb1 = &ESCvar.mbboot[1];
 1186              		.loc 1 355 21 is_stmt 0 view .LVU263
 1187 000c 03F11402 		add	r2, r3, #20
 1188 0010 1A67     		str	r2, [r3, #112]
 356:Lib/soes/src/esc.c **** 
 1189              		.loc 1 356 4 is_stmt 1 view .LVU264
 356:Lib/soes/src/esc.c **** 
 1190              		.loc 1 356 21 is_stmt 0 view .LVU265
 1191 0012 03F11C02 		add	r2, r3, #28
 1192 0016 5A67     		str	r2, [r3, #116]
 358:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 1193              		.loc 1 358 4 is_stmt 1 view .LVU266
 1194 0018 0020     		movs	r0, #0
 1195              	.LVL87:
 358:Lib/soes/src/esc.c ****    ESC_SMenable (1);
 1196              		.loc 1 358 4 is_stmt 0 view .LVU267
 1197 001a FFF7FEFF 		bl	ESC_SMenable
 1198              	.LVL88:
 359:Lib/soes/src/esc.c ****    ESC_SMstatus (0);
 1199              		.loc 1 359 4 is_stmt 1 view .LVU268
 1200 001e 0120     		movs	r0, #1
 1201 0020 FFF7FEFF 		bl	ESC_SMenable
 1202              	.LVL89:
 360:Lib/soes/src/esc.c ****    ESC_SMstatus (1);
 1203              		.loc 1 360 4 view .LVU269
 1204 0024 0020     		movs	r0, #0
 1205 0026 FFF7FEFF 		bl	ESC_SMstatus
 1206              	.LVL90:
 361:Lib/soes/src/esc.c ****    if ((state = ESC_checkmbx (state)) & ESCerror)
 1207              		.loc 1 361 4 view .LVU270
ARM GAS  /tmp/ccoKziDo.s 			page 44


 1208 002a 0120     		movs	r0, #1
 1209 002c FFF7FEFF 		bl	ESC_SMstatus
 1210              	.LVL91:
 362:Lib/soes/src/esc.c ****    {
 1211              		.loc 1 362 4 view .LVU271
 362:Lib/soes/src/esc.c ****    {
 1212              		.loc 1 362 17 is_stmt 0 view .LVU272
 1213 0030 2046     		mov	r0, r4
 1214 0032 FFF7FEFF 		bl	ESC_checkmbx
 1215              	.LVL92:
 1216 0036 0446     		mov	r4, r0
 1217              	.LVL93:
 362:Lib/soes/src/esc.c ****    {
 1218              		.loc 1 362 7 view .LVU273
 1219 0038 10F0100F 		tst	r0, #16
 1220 003c 0BD1     		bne	.L92
 369:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1221              		.loc 1 369 7 is_stmt 1 view .LVU274
 369:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1222              		.loc 1 369 35 is_stmt 0 view .LVU275
 1223 003e 0A4B     		ldr	r3, .L93
 1224 0040 93F8CA20 		ldrb	r2, [r3, #202]	@ zero_extendqisi2
 1225 0044 C2F34002 		ubfx	r2, r2, #1, #1
 369:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 1;
 1226              		.loc 1 369 21 view .LVU276
 1227 0048 83F8AA20 		strb	r2, [r3, #170]
 370:Lib/soes/src/esc.c ****    }
 1228              		.loc 1 370 7 is_stmt 1 view .LVU277
 370:Lib/soes/src/esc.c ****    }
 1229              		.loc 1 370 21 is_stmt 0 view .LVU278
 1230 004c 0122     		movs	r2, #1
 1231 004e 83F86820 		strb	r2, [r3, #104]
 1232              	.LVL94:
 1233              	.L90:
 372:Lib/soes/src/esc.c **** }
 1234              		.loc 1 372 4 is_stmt 1 view .LVU279
 373:Lib/soes/src/esc.c **** 
 1235              		.loc 1 373 1 is_stmt 0 view .LVU280
 1236 0052 2046     		mov	r0, r4
 1237 0054 10BD     		pop	{r4, pc}
 1238              	.LVL95:
 1239              	.L92:
 364:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 1240              		.loc 1 364 7 is_stmt 1 view .LVU281
 1241 0056 1520     		movs	r0, #21
 1242              	.LVL96:
 364:Lib/soes/src/esc.c ****       ESCvar.MBXrun = 0;
 1243              		.loc 1 364 7 is_stmt 0 view .LVU282
 1244 0058 FFF7FEFF 		bl	ESC_ALerror
 1245              	.LVL97:
 365:Lib/soes/src/esc.c ****    }
 1246              		.loc 1 365 7 is_stmt 1 view .LVU283
 365:Lib/soes/src/esc.c ****    }
 1247              		.loc 1 365 21 is_stmt 0 view .LVU284
 1248 005c 024B     		ldr	r3, .L93
 1249 005e 0022     		movs	r2, #0
 1250 0060 83F86820 		strb	r2, [r3, #104]
ARM GAS  /tmp/ccoKziDo.s 			page 45


 1251 0064 F5E7     		b	.L90
 1252              	.L94:
 1253 0066 00BF     		.align	2
 1254              	.L93:
 1255 0068 00000000 		.word	ESCvar
 1256              		.cfi_endproc
 1257              	.LFE20:
 1259              		.section	.text.ESC_stopmbx,"ax",%progbits
 1260              		.align	1
 1261              		.global	ESC_stopmbx
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1266              	ESC_stopmbx:
 1267              	.LFB21:
 379:Lib/soes/src/esc.c ****    uint8_t n;
 1268              		.loc 1 379 1 is_stmt 1 view -0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272 0000 10B5     		push	{r4, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 4, -8
 1275              		.cfi_offset 14, -4
 380:Lib/soes/src/esc.c ****    ESCvar.MBXrun = 0;
 1276              		.loc 1 380 4 view .LVU286
 381:Lib/soes/src/esc.c ****    ESC_SMdisable (0);
 1277              		.loc 1 381 4 view .LVU287
 381:Lib/soes/src/esc.c ****    ESC_SMdisable (0);
 1278              		.loc 1 381 18 is_stmt 0 view .LVU288
 1279 0002 0024     		movs	r4, #0
 1280 0004 174B     		ldr	r3, .L99
 1281 0006 83F86840 		strb	r4, [r3, #104]
 382:Lib/soes/src/esc.c ****    ESC_SMdisable (1);
 1282              		.loc 1 382 4 is_stmt 1 view .LVU289
 1283 000a 2046     		mov	r0, r4
 1284 000c FFF7FEFF 		bl	ESC_SMdisable
 1285              	.LVL98:
 383:Lib/soes/src/esc.c ****    for (n = 0; n < ESC_MBXBUFFERS; n++)
 1286              		.loc 1 383 4 view .LVU290
 1287 0010 0120     		movs	r0, #1
 1288 0012 FFF7FEFF 		bl	ESC_SMdisable
 1289              	.LVL99:
 384:Lib/soes/src/esc.c ****    {
 1290              		.loc 1 384 4 view .LVU291
 384:Lib/soes/src/esc.c ****    {
 1291              		.loc 1 384 11 is_stmt 0 view .LVU292
 1292 0016 2046     		mov	r0, r4
 384:Lib/soes/src/esc.c ****    {
 1293              		.loc 1 384 4 view .LVU293
 1294 0018 04E0     		b	.L96
 1295              	.LVL100:
 1296              	.L97:
 386:Lib/soes/src/esc.c ****    }
 1297              		.loc 1 386 7 is_stmt 1 discriminator 3 view .LVU294
 386:Lib/soes/src/esc.c ****    }
 1298              		.loc 1 386 27 is_stmt 0 discriminator 3 view .LVU295
ARM GAS  /tmp/ccoKziDo.s 			page 46


 1299 001a 134B     		ldr	r3, .L99+4
 1300 001c 0022     		movs	r2, #0
 1301 001e 1A54     		strb	r2, [r3, r0]
 384:Lib/soes/src/esc.c ****    {
 1302              		.loc 1 384 36 is_stmt 1 discriminator 3 view .LVU296
 384:Lib/soes/src/esc.c ****    {
 1303              		.loc 1 384 37 is_stmt 0 discriminator 3 view .LVU297
 1304 0020 0130     		adds	r0, r0, #1
 1305              	.LVL101:
 384:Lib/soes/src/esc.c ****    {
 1306              		.loc 1 384 37 discriminator 3 view .LVU298
 1307 0022 C0B2     		uxtb	r0, r0
 1308              	.LVL102:
 1309              	.L96:
 384:Lib/soes/src/esc.c ****    {
 1310              		.loc 1 384 16 is_stmt 1 discriminator 1 view .LVU299
 384:Lib/soes/src/esc.c ****    {
 1311              		.loc 1 384 4 is_stmt 0 discriminator 1 view .LVU300
 1312 0024 0228     		cmp	r0, #2
 1313 0026 F8D9     		bls	.L97
 388:Lib/soes/src/esc.c ****    ESCvar.mbxbackup = 0;
 1314              		.loc 1 388 4 is_stmt 1 view .LVU301
 388:Lib/soes/src/esc.c ****    ESCvar.mbxbackup = 0;
 1315              		.loc 1 388 22 is_stmt 0 view .LVU302
 1316 0028 0E4B     		ldr	r3, .L99
 1317 002a 0022     		movs	r2, #0
 1318 002c 83F88C20 		strb	r2, [r3, #140]
 389:Lib/soes/src/esc.c ****    ESCvar.xoe = 0;
 1319              		.loc 1 389 4 is_stmt 1 view .LVU303
 389:Lib/soes/src/esc.c ****    ESCvar.xoe = 0;
 1320              		.loc 1 389 21 is_stmt 0 view .LVU304
 1321 0030 83F88D20 		strb	r2, [r3, #141]
 390:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 1322              		.loc 1 390 4 is_stmt 1 view .LVU305
 390:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 1323              		.loc 1 390 15 is_stmt 0 view .LVU306
 1324 0034 83F88E20 		strb	r2, [r3, #142]
 391:Lib/soes/src/esc.c ****    ESCvar.toggle = 0;
 1325              		.loc 1 391 4 is_stmt 1 view .LVU307
 391:Lib/soes/src/esc.c ****    ESCvar.toggle = 0;
 1326              		.loc 1 391 19 is_stmt 0 view .LVU308
 1327 0038 0121     		movs	r1, #1
 1328 003a 83F89010 		strb	r1, [r3, #144]
 392:Lib/soes/src/esc.c ****    ESCvar.mbxincnt = 0;
 1329              		.loc 1 392 4 is_stmt 1 view .LVU309
 392:Lib/soes/src/esc.c ****    ESCvar.mbxincnt = 0;
 1330              		.loc 1 392 18 is_stmt 0 view .LVU310
 1331 003e 83F8AA20 		strb	r2, [r3, #170]
 393:Lib/soes/src/esc.c ****    ESCvar.segmented = 0;
 1332              		.loc 1 393 4 is_stmt 1 view .LVU311
 393:Lib/soes/src/esc.c ****    ESCvar.segmented = 0;
 1333              		.loc 1 393 20 is_stmt 0 view .LVU312
 1334 0042 83F88B20 		strb	r2, [r3, #139]
 394:Lib/soes/src/esc.c ****    ESCvar.frags = 0;
 1335              		.loc 1 394 4 is_stmt 1 view .LVU313
 394:Lib/soes/src/esc.c ****    ESCvar.frags = 0;
 1336              		.loc 1 394 21 is_stmt 0 view .LVU314
ARM GAS  /tmp/ccoKziDo.s 			page 47


 1337 0046 83F89120 		strb	r2, [r3, #145]
 395:Lib/soes/src/esc.c ****    ESCvar.fragsleft = 0;
 1338              		.loc 1 395 4 is_stmt 1 view .LVU315
 395:Lib/soes/src/esc.c ****    ESCvar.fragsleft = 0;
 1339              		.loc 1 395 17 is_stmt 0 view .LVU316
 1340 004a C3F89C20 		str	r2, [r3, #156]
 396:Lib/soes/src/esc.c ****    ESCvar.txcue = 0;
 1341              		.loc 1 396 4 is_stmt 1 view .LVU317
 396:Lib/soes/src/esc.c ****    ESCvar.txcue = 0;
 1342              		.loc 1 396 21 is_stmt 0 view .LVU318
 1343 004e C3F8A020 		str	r2, [r3, #160]
 397:Lib/soes/src/esc.c ****    ESCvar.index = 0;
 1344              		.loc 1 397 4 is_stmt 1 view .LVU319
 397:Lib/soes/src/esc.c ****    ESCvar.index = 0;
 1345              		.loc 1 397 17 is_stmt 0 view .LVU320
 1346 0052 83F88F20 		strb	r2, [r3, #143]
 398:Lib/soes/src/esc.c ****    ESCvar.subindex = 0;
 1347              		.loc 1 398 4 is_stmt 1 view .LVU321
 398:Lib/soes/src/esc.c ****    ESCvar.subindex = 0;
 1348              		.loc 1 398 17 is_stmt 0 view .LVU322
 1349 0056 A3F8A420 		strh	r2, [r3, #164]	@ movhi
 399:Lib/soes/src/esc.c ****    ESCvar.flags = 0;
 1350              		.loc 1 399 4 is_stmt 1 view .LVU323
 399:Lib/soes/src/esc.c ****    ESCvar.flags = 0;
 1351              		.loc 1 399 20 is_stmt 0 view .LVU324
 1352 005a 83F8A620 		strb	r2, [r3, #166]
 400:Lib/soes/src/esc.c **** }
 1353              		.loc 1 400 4 is_stmt 1 view .LVU325
 400:Lib/soes/src/esc.c **** }
 1354              		.loc 1 400 17 is_stmt 0 view .LVU326
 1355 005e A3F8A820 		strh	r2, [r3, #168]	@ movhi
 401:Lib/soes/src/esc.c **** 
 1356              		.loc 1 401 1 view .LVU327
 1357 0062 10BD     		pop	{r4, pc}
 1358              	.L100:
 1359              		.align	2
 1360              	.L99:
 1361 0064 00000000 		.word	ESCvar
 1362 0068 00000000 		.word	MBXcontrol
 1363              		.cfi_endproc
 1364              	.LFE21:
 1366              		.section	.text.ESC_readmbx,"ax",%progbits
 1367              		.align	1
 1368              		.global	ESC_readmbx
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1373              	ESC_readmbx:
 1374              	.LFB22:
 408:Lib/soes/src/esc.c ****    _MBX *MB = (_MBX *)&MBX[0];
 1375              		.loc 1 408 1 is_stmt 1 view -0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379 0000 30B5     		push	{r4, r5, lr}
 1380              		.cfi_def_cfa_offset 12
 1381              		.cfi_offset 4, -12
ARM GAS  /tmp/ccoKziDo.s 			page 48


 1382              		.cfi_offset 5, -8
 1383              		.cfi_offset 14, -4
 1384 0002 83B0     		sub	sp, sp, #12
 1385              		.cfi_def_cfa_offset 24
 409:Lib/soes/src/esc.c ****    uint16_t length;
 1386              		.loc 1 409 4 view .LVU329
 1387              	.LVL103:
 410:Lib/soes/src/esc.c **** 
 1388              		.loc 1 410 4 view .LVU330
 412:Lib/soes/src/esc.c ****    length = etohs (MB->header.length);
 1389              		.loc 1 412 4 view .LVU331
 412:Lib/soes/src/esc.c ****    length = etohs (MB->header.length);
 1390              		.loc 1 412 14 is_stmt 0 view .LVU332
 1391 0004 174C     		ldr	r4, .L106
 1392 0006 236F     		ldr	r3, [r4, #112]
 412:Lib/soes/src/esc.c ****    length = etohs (MB->header.length);
 1393              		.loc 1 412 4 view .LVU333
 1394 0008 174D     		ldr	r5, .L106+4
 1395 000a 0622     		movs	r2, #6
 1396 000c 2946     		mov	r1, r5
 1397 000e 1888     		ldrh	r0, [r3]
 1398 0010 FFF7FEFF 		bl	ESC_read
 1399              	.LVL104:
 413:Lib/soes/src/esc.c **** 
 1400              		.loc 1 413 4 is_stmt 1 view .LVU334
 413:Lib/soes/src/esc.c **** 
 1401              		.loc 1 413 13 is_stmt 0 view .LVU335
 1402 0014 2B88     		ldrh	r3, [r5]	@ unaligned
 1403 0016 98B2     		uxth	r0, r3
 413:Lib/soes/src/esc.c **** 
 1404              		.loc 1 413 11 view .LVU336
 1405 0018 ADF80630 		strh	r3, [sp, #6]	@ movhi
 415:Lib/soes/src/esc.c ****    {
 1406              		.loc 1 415 4 is_stmt 1 view .LVU337
 415:Lib/soes/src/esc.c ****    {
 1407              		.loc 1 415 18 is_stmt 0 view .LVU338
 1408 001c 226F     		ldr	r2, [r4, #112]
 1409 001e 5388     		ldrh	r3, [r2, #2]
 415:Lib/soes/src/esc.c ****    {
 1410              		.loc 1 415 31 view .LVU339
 1411 0020 991F     		subs	r1, r3, #6
 415:Lib/soes/src/esc.c ****    {
 1412              		.loc 1 415 7 view .LVU340
 1413 0022 8842     		cmp	r0, r1
 1414 0024 01D9     		bls	.L102
 417:Lib/soes/src/esc.c ****    }
 1415              		.loc 1 417 7 is_stmt 1 view .LVU341
 417:Lib/soes/src/esc.c ****    }
 1416              		.loc 1 417 14 is_stmt 0 view .LVU342
 1417 0026 ADF80610 		strh	r1, [sp, #6]	@ movhi
 1418              	.L102:
 419:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX0_sml)
 1419              		.loc 1 419 4 is_stmt 1 view .LVU343
 419:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX0_sml)
 1420              		.loc 1 419 25 is_stmt 0 view .LVU344
 1421 002a 1088     		ldrh	r0, [r2]
 419:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX0_sml)
ARM GAS  /tmp/ccoKziDo.s 			page 49


 1422              		.loc 1 419 4 view .LVU345
 1423 002c 0630     		adds	r0, r0, #6
 1424 002e BDF80620 		ldrh	r2, [sp, #6]
 1425 0032 0E49     		ldr	r1, .L106+8
 1426 0034 80B2     		uxth	r0, r0
 1427 0036 FFF7FEFF 		bl	ESC_read
 1428              	.LVL105:
 420:Lib/soes/src/esc.c ****    {
 1429              		.loc 1 420 4 is_stmt 1 view .LVU346
 420:Lib/soes/src/esc.c ****    {
 1430              		.loc 1 420 15 is_stmt 0 view .LVU347
 1431 003a BDF80630 		ldrh	r3, [sp, #6]
 1432 003e 0633     		adds	r3, r3, #6
 420:Lib/soes/src/esc.c ****    {
 1433              		.loc 1 420 32 view .LVU348
 1434 0040 084A     		ldr	r2, .L106
 1435 0042 106F     		ldr	r0, [r2, #112]
 1436 0044 4288     		ldrh	r2, [r0, #2]
 420:Lib/soes/src/esc.c ****    {
 1437              		.loc 1 420 7 view .LVU349
 1438 0046 9342     		cmp	r3, r2
 1439 0048 04D3     		bcc	.L105
 1440              	.L103:
 425:Lib/soes/src/esc.c **** }
 1441              		.loc 1 425 4 is_stmt 1 view .LVU350
 425:Lib/soes/src/esc.c **** }
 1442              		.loc 1 425 24 is_stmt 0 view .LVU351
 1443 004a 094B     		ldr	r3, .L106+12
 1444 004c 0122     		movs	r2, #1
 1445 004e 1A70     		strb	r2, [r3]
 426:Lib/soes/src/esc.c **** /** Write local mailbox buffer ESCvar.MBX[n] to Send mailbox.
 1446              		.loc 1 426 1 view .LVU352
 1447 0050 03B0     		add	sp, sp, #12
 1448              		.cfi_remember_state
 1449              		.cfi_def_cfa_offset 12
 1450              		@ sp needed
 1451 0052 30BD     		pop	{r4, r5, pc}
 1452              	.L105:
 1453              		.cfi_restore_state
 422:Lib/soes/src/esc.c ****    }
 1454              		.loc 1 422 7 is_stmt 1 view .LVU353
 1455 0054 0122     		movs	r2, #1
 1456 0056 0DF10601 		add	r1, sp, #6
 1457 005a 8088     		ldrh	r0, [r0, #4]
 1458 005c FFF7FEFF 		bl	ESC_read
 1459              	.LVL106:
 1460 0060 F3E7     		b	.L103
 1461              	.L107:
 1462 0062 00BF     		.align	2
 1463              	.L106:
 1464 0064 00000000 		.word	ESCvar
 1465 0068 00000000 		.word	MBX
 1466 006c 06000000 		.word	MBX+6
 1467 0070 00000000 		.word	MBXcontrol
 1468              		.cfi_endproc
 1469              	.LFE22:
 1471              		.section	.text.ESC_writembx,"ax",%progbits
ARM GAS  /tmp/ccoKziDo.s 			page 50


 1472              		.align	1
 1473              		.global	ESC_writembx
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	ESC_writembx:
 1479              	.LVL107:
 1480              	.LFB23:
 434:Lib/soes/src/esc.c ****    _MBXh *MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 1481              		.loc 1 434 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 8
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 434:Lib/soes/src/esc.c ****    _MBXh *MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 1485              		.loc 1 434 1 is_stmt 0 view .LVU355
 1486 0000 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 82B0     		sub	sp, sp, #8
 1491              		.cfi_def_cfa_offset 16
 435:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 1492              		.loc 1 435 4 is_stmt 1 view .LVU356
 435:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 1493              		.loc 1 435 35 is_stmt 0 view .LVU357
 1494 0004 134A     		ldr	r2, .L113
 1495 0006 D36E     		ldr	r3, [r2, #108]
 435:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 1496              		.loc 1 435 33 view .LVU358
 1497 0008 03FB00F0 		mul	r0, r3, r0
 1498              	.LVL108:
 435:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 1499              		.loc 1 435 11 view .LVU359
 1500 000c 124B     		ldr	r3, .L113+4
 1501 000e C118     		adds	r1, r0, r3
 1502              	.LVL109:
 436:Lib/soes/src/esc.c ****    uint16_t length;
 1503              		.loc 1 436 4 is_stmt 1 view .LVU360
 436:Lib/soes/src/esc.c ****    uint16_t length;
 1504              		.loc 1 436 12 is_stmt 0 view .LVU361
 1505 0010 0024     		movs	r4, #0
 1506 0012 8DF80740 		strb	r4, [sp, #7]
 437:Lib/soes/src/esc.c ****    length = etohs (MBh->length);
 1507              		.loc 1 437 4 is_stmt 1 view .LVU362
 438:Lib/soes/src/esc.c **** 
 1508              		.loc 1 438 4 view .LVU363
 438:Lib/soes/src/esc.c **** 
 1509              		.loc 1 438 11 is_stmt 0 view .LVU364
 1510 0016 1B5A     		ldrh	r3, [r3, r0]	@ unaligned
 1511              	.LVL110:
 440:Lib/soes/src/esc.c ****    {
 1512              		.loc 1 440 4 is_stmt 1 view .LVU365
 440:Lib/soes/src/esc.c ****    {
 1513              		.loc 1 440 18 is_stmt 0 view .LVU366
 1514 0018 506F     		ldr	r0, [r2, #116]
 1515 001a 4288     		ldrh	r2, [r0, #2]
 440:Lib/soes/src/esc.c ****    {
ARM GAS  /tmp/ccoKziDo.s 			page 51


 1516              		.loc 1 440 31 view .LVU367
 1517 001c 941F     		subs	r4, r2, #6
 440:Lib/soes/src/esc.c ****    {
 1518              		.loc 1 440 7 view .LVU368
 1519 001e A342     		cmp	r3, r4
 1520 0020 00D9     		bls	.L109
 442:Lib/soes/src/esc.c ****    }
 1521              		.loc 1 442 7 is_stmt 1 view .LVU369
 442:Lib/soes/src/esc.c ****    }
 1522              		.loc 1 442 14 is_stmt 0 view .LVU370
 1523 0022 A3B2     		uxth	r3, r4
 1524              	.LVL111:
 1525              	.L109:
 444:Lib/soes/src/esc.c ****    if (length + ESC_MBXHSIZE < ESC_MBX1_sml)
 1526              		.loc 1 444 4 is_stmt 1 view .LVU371
 1527 0024 9C1D     		adds	r4, r3, #6
 1528 0026 A2B2     		uxth	r2, r4
 1529 0028 0088     		ldrh	r0, [r0]
 1530 002a FFF7FEFF 		bl	ESC_write
 1531              	.LVL112:
 445:Lib/soes/src/esc.c ****    {
 1532              		.loc 1 445 4 view .LVU372
 445:Lib/soes/src/esc.c ****    {
 1533              		.loc 1 445 32 is_stmt 0 view .LVU373
 1534 002e 094B     		ldr	r3, .L113
 1535 0030 5B6F     		ldr	r3, [r3, #116]
 1536 0032 5A88     		ldrh	r2, [r3, #2]
 445:Lib/soes/src/esc.c ****    {
 1537              		.loc 1 445 7 view .LVU374
 1538 0034 9442     		cmp	r4, r2
 1539 0036 05D3     		bcc	.L112
 1540              	.L110:
 450:Lib/soes/src/esc.c **** }
 1541              		.loc 1 450 4 is_stmt 1 view .LVU375
 450:Lib/soes/src/esc.c **** }
 1542              		.loc 1 450 19 is_stmt 0 view .LVU376
 1543 0038 064B     		ldr	r3, .L113
 1544 003a 0022     		movs	r2, #0
 1545 003c 83F89020 		strb	r2, [r3, #144]
 451:Lib/soes/src/esc.c **** 
 1546              		.loc 1 451 1 view .LVU377
 1547 0040 02B0     		add	sp, sp, #8
 1548              		.cfi_remember_state
 1549              		.cfi_def_cfa_offset 8
 1550              		@ sp needed
 1551 0042 10BD     		pop	{r4, pc}
 1552              	.L112:
 1553              		.cfi_restore_state
 447:Lib/soes/src/esc.c ****    }
 1554              		.loc 1 447 7 is_stmt 1 view .LVU378
 1555 0044 0122     		movs	r2, #1
 1556 0046 0DF10701 		add	r1, sp, #7
 1557 004a 9888     		ldrh	r0, [r3, #4]
 1558 004c FFF7FEFF 		bl	ESC_write
 1559              	.LVL113:
 1560 0050 F2E7     		b	.L110
 1561              	.L114:
ARM GAS  /tmp/ccoKziDo.s 			page 52


 1562 0052 00BF     		.align	2
 1563              	.L113:
 1564 0054 00000000 		.word	ESCvar
 1565 0058 00000000 		.word	MBX
 1566              		.cfi_endproc
 1567              	.LFE23:
 1569              		.section	.text.ESC_ackmbxread,"ax",%progbits
 1570              		.align	1
 1571              		.global	ESC_ackmbxread
 1572              		.syntax unified
 1573              		.thumb
 1574              		.thumb_func
 1576              	ESC_ackmbxread:
 1577              	.LFB24:
 456:Lib/soes/src/esc.c ****    uint8_t dummy = 0;
 1578              		.loc 1 456 1 view -0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 8
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582 0000 10B5     		push	{r4, lr}
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 4, -8
 1585              		.cfi_offset 14, -4
 1586 0002 82B0     		sub	sp, sp, #8
 1587              		.cfi_def_cfa_offset 16
 457:Lib/soes/src/esc.c **** 
 1588              		.loc 1 457 4 view .LVU380
 457:Lib/soes/src/esc.c **** 
 1589              		.loc 1 457 12 is_stmt 0 view .LVU381
 1590 0004 0023     		movs	r3, #0
 1591 0006 8DF80730 		strb	r3, [sp, #7]
 459:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 1592              		.loc 1 459 4 is_stmt 1 view .LVU382
 459:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 1593              		.loc 1 459 15 is_stmt 0 view .LVU383
 1594 000a 064C     		ldr	r4, .L117
 1595 000c 636F     		ldr	r3, [r4, #116]
 459:Lib/soes/src/esc.c ****    ESCvar.mbxfree = 1;
 1596              		.loc 1 459 4 view .LVU384
 1597 000e 0122     		movs	r2, #1
 1598 0010 0DF10701 		add	r1, sp, #7
 1599 0014 1888     		ldrh	r0, [r3]
 1600 0016 FFF7FEFF 		bl	ESC_write
 1601              	.LVL114:
 460:Lib/soes/src/esc.c **** }
 1602              		.loc 1 460 4 is_stmt 1 view .LVU385
 460:Lib/soes/src/esc.c **** }
 1603              		.loc 1 460 19 is_stmt 0 view .LVU386
 1604 001a 0123     		movs	r3, #1
 1605 001c 84F89030 		strb	r3, [r4, #144]
 461:Lib/soes/src/esc.c **** 
 1606              		.loc 1 461 1 view .LVU387
 1607 0020 02B0     		add	sp, sp, #8
 1608              		.cfi_def_cfa_offset 8
 1609              		@ sp needed
 1610 0022 10BD     		pop	{r4, pc}
 1611              	.L118:
ARM GAS  /tmp/ccoKziDo.s 			page 53


 1612              		.align	2
 1613              	.L117:
 1614 0024 00000000 		.word	ESCvar
 1615              		.cfi_endproc
 1616              	.LFE24:
 1618              		.section	.text.ESC_claimbuffer,"ax",%progbits
 1619              		.align	1
 1620              		.global	ESC_claimbuffer
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1625              	ESC_claimbuffer:
 1626              	.LFB25:
 470:Lib/soes/src/esc.c ****    _MBXh *MBh;
 1627              		.loc 1 470 1 is_stmt 1 view -0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631              		@ link register save eliminated.
 471:Lib/soes/src/esc.c ****    uint8_t n = ESC_MBXBUFFERS - 1;
 1632              		.loc 1 471 4 view .LVU389
 472:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state))
 1633              		.loc 1 472 4 view .LVU390
 1634              	.LVL115:
 473:Lib/soes/src/esc.c ****    {
 1635              		.loc 1 473 4 view .LVU391
 472:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state))
 1636              		.loc 1 472 12 is_stmt 0 view .LVU392
 1637 0000 0220     		movs	r0, #2
 473:Lib/soes/src/esc.c ****    {
 1638              		.loc 1 473 10 view .LVU393
 1639 0002 01E0     		b	.L120
 1640              	.LVL116:
 1641              	.L122:
 475:Lib/soes/src/esc.c ****    }
 1642              		.loc 1 475 7 is_stmt 1 view .LVU394
 475:Lib/soes/src/esc.c ****    }
 1643              		.loc 1 475 8 is_stmt 0 view .LVU395
 1644 0004 0138     		subs	r0, r0, #1
 1645              	.LVL117:
 475:Lib/soes/src/esc.c ****    }
 1646              		.loc 1 475 8 view .LVU396
 1647 0006 C0B2     		uxtb	r0, r0
 1648              	.LVL118:
 1649              	.L120:
 473:Lib/soes/src/esc.c ****    {
 1650              		.loc 1 473 10 is_stmt 1 view .LVU397
 1651 0008 18B1     		cbz	r0, .L121
 473:Lib/soes/src/esc.c ****    {
 1652              		.loc 1 473 36 is_stmt 0 discriminator 1 view .LVU398
 1653 000a 1A4B     		ldr	r3, .L125
 1654 000c 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 473:Lib/soes/src/esc.c ****    {
 1655              		.loc 1 473 19 discriminator 1 view .LVU399
 1656 000e 002B     		cmp	r3, #0
 1657 0010 F8D1     		bne	.L122
 1658              	.L121:
ARM GAS  /tmp/ccoKziDo.s 			page 54


 477:Lib/soes/src/esc.c ****    {
 1659              		.loc 1 477 4 is_stmt 1 view .LVU400
 477:Lib/soes/src/esc.c ****    {
 1660              		.loc 1 477 7 is_stmt 0 view .LVU401
 1661 0012 68B3     		cbz	r0, .L123
 479:Lib/soes/src/esc.c ****       MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 1662              		.loc 1 479 7 is_stmt 1 view .LVU402
 479:Lib/soes/src/esc.c ****       MBh = (_MBXh *)&MBX[n * ESC_MBXSIZE];
 1663              		.loc 1 479 27 is_stmt 0 view .LVU403
 1664 0014 174B     		ldr	r3, .L125
 1665 0016 0222     		movs	r2, #2
 1666 0018 1A54     		strb	r2, [r3, r0]
 480:Lib/soes/src/esc.c ****       ESCvar.mbxcnt++;
 1667              		.loc 1 480 7 is_stmt 1 view .LVU404
 480:Lib/soes/src/esc.c ****       ESCvar.mbxcnt++;
 1668              		.loc 1 480 31 is_stmt 0 view .LVU405
 1669 001a 1749     		ldr	r1, .L125+4
 1670 001c CA6E     		ldr	r2, [r1, #108]
 480:Lib/soes/src/esc.c ****       ESCvar.mbxcnt++;
 1671              		.loc 1 480 11 view .LVU406
 1672 001e 174B     		ldr	r3, .L125+8
 1673 0020 02FB0033 		mla	r3, r2, r0, r3
 1674              	.LVL119:
 481:Lib/soes/src/esc.c ****       ESCvar.mbxcnt = (ESCvar.mbxcnt & 0x07);
 1675              		.loc 1 481 7 is_stmt 1 view .LVU407
 481:Lib/soes/src/esc.c ****       ESCvar.mbxcnt = (ESCvar.mbxcnt & 0x07);
 1676              		.loc 1 481 13 is_stmt 0 view .LVU408
 1677 0024 91F88A20 		ldrb	r2, [r1, #138]	@ zero_extendqisi2
 481:Lib/soes/src/esc.c ****       ESCvar.mbxcnt = (ESCvar.mbxcnt & 0x07);
 1678              		.loc 1 481 20 view .LVU409
 1679 0028 0132     		adds	r2, r2, #1
 1680 002a D2B2     		uxtb	r2, r2
 1681 002c 81F88A20 		strb	r2, [r1, #138]
 482:Lib/soes/src/esc.c ****       if (ESCvar.mbxcnt == 0)
 1682              		.loc 1 482 7 is_stmt 1 view .LVU410
 482:Lib/soes/src/esc.c ****       if (ESCvar.mbxcnt == 0)
 1683              		.loc 1 482 38 is_stmt 0 view .LVU411
 1684 0030 02F00702 		and	r2, r2, #7
 482:Lib/soes/src/esc.c ****       if (ESCvar.mbxcnt == 0)
 1685              		.loc 1 482 21 view .LVU412
 1686 0034 81F88A20 		strb	r2, [r1, #138]
 483:Lib/soes/src/esc.c ****       {
 1687              		.loc 1 483 7 is_stmt 1 view .LVU413
 483:Lib/soes/src/esc.c ****       {
 1688              		.loc 1 483 10 is_stmt 0 view .LVU414
 1689 0038 1AB9     		cbnz	r2, .L124
 485:Lib/soes/src/esc.c ****       }
 1690              		.loc 1 485 10 is_stmt 1 view .LVU415
 485:Lib/soes/src/esc.c ****       }
 1691              		.loc 1 485 24 is_stmt 0 view .LVU416
 1692 003a 0A46     		mov	r2, r1
 1693 003c 0121     		movs	r1, #1
 1694 003e 82F88A10 		strb	r1, [r2, #138]
 1695              	.L124:
 487:Lib/soes/src/esc.c ****       MBh->channel = 0;
 1696              		.loc 1 487 7 is_stmt 1 view .LVU417
 487:Lib/soes/src/esc.c ****       MBh->channel = 0;
ARM GAS  /tmp/ccoKziDo.s 			page 55


 1697              		.loc 1 487 20 is_stmt 0 view .LVU418
 1698 0042 0022     		movs	r2, #0
 1699 0044 9A70     		strb	r2, [r3, #2]
 1700 0046 DA70     		strb	r2, [r3, #3]
 488:Lib/soes/src/esc.c ****       MBh->priority = 0;
 1701              		.loc 1 488 7 is_stmt 1 view .LVU419
 488:Lib/soes/src/esc.c ****       MBh->priority = 0;
 1702              		.loc 1 488 20 is_stmt 0 view .LVU420
 1703 0048 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1704 004a 62F30501 		bfi	r1, r2, #0, #6
 1705 004e 1971     		strb	r1, [r3, #4]
 489:Lib/soes/src/esc.c ****       MBh->mbxcnt = ESCvar.mbxcnt & 0xFU;
 1706              		.loc 1 489 7 is_stmt 1 view .LVU421
 489:Lib/soes/src/esc.c ****       MBh->mbxcnt = ESCvar.mbxcnt & 0xFU;
 1707              		.loc 1 489 21 is_stmt 0 view .LVU422
 1708 0050 C9B2     		uxtb	r1, r1
 1709 0052 62F38711 		bfi	r1, r2, #6, #2
 1710 0056 1971     		strb	r1, [r3, #4]
 490:Lib/soes/src/esc.c ****       ESCvar.txcue++;
 1711              		.loc 1 490 7 is_stmt 1 view .LVU423
 490:Lib/soes/src/esc.c ****       ESCvar.txcue++;
 1712              		.loc 1 490 27 is_stmt 0 view .LVU424
 1713 0058 074A     		ldr	r2, .L125+4
 1714 005a 92F88AC0 		ldrb	ip, [r2, #138]	@ zero_extendqisi2
 490:Lib/soes/src/esc.c ****       ESCvar.txcue++;
 1715              		.loc 1 490 19 view .LVU425
 1716 005e 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1717 0060 6CF30711 		bfi	r1, ip, #4, #4
 1718 0064 5971     		strb	r1, [r3, #5]
 491:Lib/soes/src/esc.c ****    }
 1719              		.loc 1 491 7 is_stmt 1 view .LVU426
 491:Lib/soes/src/esc.c ****    }
 1720              		.loc 1 491 13 is_stmt 0 view .LVU427
 1721 0066 92F88F30 		ldrb	r3, [r2, #143]	@ zero_extendqisi2
 1722              	.LVL120:
 491:Lib/soes/src/esc.c ****    }
 1723              		.loc 1 491 19 view .LVU428
 1724 006a 0133     		adds	r3, r3, #1
 1725 006c 82F88F30 		strb	r3, [r2, #143]
 1726              	.LVL121:
 1727              	.L123:
 493:Lib/soes/src/esc.c **** }
 1728              		.loc 1 493 4 is_stmt 1 view .LVU429
 494:Lib/soes/src/esc.c **** 
 1729              		.loc 1 494 1 is_stmt 0 view .LVU430
 1730 0070 7047     		bx	lr
 1731              	.L126:
 1732 0072 00BF     		.align	2
 1733              	.L125:
 1734 0074 00000000 		.word	MBXcontrol
 1735 0078 00000000 		.word	ESCvar
 1736 007c 00000000 		.word	MBX
 1737              		.cfi_endproc
 1738              	.LFE25:
 1740              		.section	.text.ESC_outreqbuffer,"ax",%progbits
 1741              		.align	1
 1742              		.global	ESC_outreqbuffer
ARM GAS  /tmp/ccoKziDo.s 			page 56


 1743              		.syntax unified
 1744              		.thumb
 1745              		.thumb_func
 1747              	ESC_outreqbuffer:
 1748              	.LFB26:
 501:Lib/soes/src/esc.c ****    uint8_t n = ESC_MBXBUFFERS - 1;
 1749              		.loc 1 501 1 is_stmt 1 view -0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              		@ link register save eliminated.
 502:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state != MBXstate_outreq))
 1754              		.loc 1 502 4 view .LVU432
 1755              	.LVL122:
 503:Lib/soes/src/esc.c ****    {
 1756              		.loc 1 503 4 view .LVU433
 502:Lib/soes/src/esc.c ****    while ((n > 0) && (MBXcontrol[n].state != MBXstate_outreq))
 1757              		.loc 1 502 12 is_stmt 0 view .LVU434
 1758 0000 0220     		movs	r0, #2
 503:Lib/soes/src/esc.c ****    {
 1759              		.loc 1 503 10 view .LVU435
 1760 0002 01E0     		b	.L128
 1761              	.LVL123:
 1762              	.L130:
 505:Lib/soes/src/esc.c ****    }
 1763              		.loc 1 505 7 is_stmt 1 view .LVU436
 505:Lib/soes/src/esc.c ****    }
 1764              		.loc 1 505 8 is_stmt 0 view .LVU437
 1765 0004 0138     		subs	r0, r0, #1
 1766              	.LVL124:
 505:Lib/soes/src/esc.c ****    }
 1767              		.loc 1 505 8 view .LVU438
 1768 0006 C0B2     		uxtb	r0, r0
 1769              	.LVL125:
 1770              	.L128:
 503:Lib/soes/src/esc.c ****    {
 1771              		.loc 1 503 10 is_stmt 1 view .LVU439
 1772 0008 18B1     		cbz	r0, .L129
 503:Lib/soes/src/esc.c ****    {
 1773              		.loc 1 503 36 is_stmt 0 discriminator 1 view .LVU440
 1774 000a 024B     		ldr	r3, .L131
 1775 000c 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 503:Lib/soes/src/esc.c ****    {
 1776              		.loc 1 503 19 discriminator 1 view .LVU441
 1777 000e 032B     		cmp	r3, #3
 1778 0010 F8D1     		bne	.L130
 1779              	.L129:
 507:Lib/soes/src/esc.c **** }
 1780              		.loc 1 507 4 is_stmt 1 view .LVU442
 508:Lib/soes/src/esc.c **** /** Allocate and prepare a mailbox buffer for sending an error message. Take the first Idle
 1781              		.loc 1 508 1 is_stmt 0 view .LVU443
 1782 0012 7047     		bx	lr
 1783              	.L132:
 1784              		.align	2
 1785              	.L131:
 1786 0014 00000000 		.word	MBXcontrol
 1787              		.cfi_endproc
ARM GAS  /tmp/ccoKziDo.s 			page 57


 1788              	.LFE26:
 1790              		.section	.text.MBX_error,"ax",%progbits
 1791              		.align	1
 1792              		.global	MBX_error
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
 1797              	MBX_error:
 1798              	.LVL126:
 1799              	.LFB27:
 516:Lib/soes/src/esc.c ****    uint8_t MBXout;
 1800              		.loc 1 516 1 is_stmt 1 view -0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 0, uses_anonymous_args = 0
 516:Lib/soes/src/esc.c ****    uint8_t MBXout;
 1804              		.loc 1 516 1 is_stmt 0 view .LVU445
 1805 0000 10B5     		push	{r4, lr}
 1806              		.cfi_def_cfa_offset 8
 1807              		.cfi_offset 4, -8
 1808              		.cfi_offset 14, -4
 1809 0002 0446     		mov	r4, r0
 517:Lib/soes/src/esc.c ****    _MBXerr *mbxerr;
 1810              		.loc 1 517 4 is_stmt 1 view .LVU446
 518:Lib/soes/src/esc.c ****    MBXout = ESC_claimbuffer ();
 1811              		.loc 1 518 4 view .LVU447
 519:Lib/soes/src/esc.c ****    if (MBXout)
 1812              		.loc 1 519 4 view .LVU448
 519:Lib/soes/src/esc.c ****    if (MBXout)
 1813              		.loc 1 519 13 is_stmt 0 view .LVU449
 1814 0004 FFF7FEFF 		bl	ESC_claimbuffer
 1815              	.LVL127:
 520:Lib/soes/src/esc.c ****    {
 1816              		.loc 1 520 4 is_stmt 1 view .LVU450
 520:Lib/soes/src/esc.c ****    {
 1817              		.loc 1 520 7 is_stmt 0 view .LVU451
 1818 0008 D0B1     		cbz	r0, .L133
 1819 000a 0146     		mov	r1, r0
 522:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 1820              		.loc 1 522 7 is_stmt 1 view .LVU452
 522:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 1821              		.loc 1 522 42 is_stmt 0 view .LVU453
 1822 000c 0D4B     		ldr	r3, .L136
 1823 000e DA6E     		ldr	r2, [r3, #108]
 522:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 1824              		.loc 1 522 40 view .LVU454
 1825 0010 00FB02F2 		mul	r2, r0, r2
 522:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 1826              		.loc 1 522 14 view .LVU455
 1827 0014 0C48     		ldr	r0, .L136+4
 1828              	.LVL128:
 522:Lib/soes/src/esc.c ****       mbxerr->mbxheader.length = htoes ((uint16_t) 0x04);
 1829              		.loc 1 522 14 view .LVU456
 1830 0016 1318     		adds	r3, r2, r0
 1831              	.LVL129:
 523:Lib/soes/src/esc.c ****       mbxerr->mbxheader.mbxtype = MBXERR;
 1832              		.loc 1 523 7 is_stmt 1 view .LVU457
ARM GAS  /tmp/ccoKziDo.s 			page 58


 523:Lib/soes/src/esc.c ****       mbxerr->mbxheader.mbxtype = MBXERR;
 1833              		.loc 1 523 32 is_stmt 0 view .LVU458
 1834 0018 4FF0000C 		mov	ip, #0
 1835 001c 4FF0040E 		mov	lr, #4
 1836 0020 02F800E0 		strb	lr, [r2, r0]
 1837 0024 83F801C0 		strb	ip, [r3, #1]
 524:Lib/soes/src/esc.c ****       mbxerr->type = htoes ((uint16_t) 0x01);
 1838              		.loc 1 524 7 is_stmt 1 view .LVU459
 524:Lib/soes/src/esc.c ****       mbxerr->type = htoes ((uint16_t) 0x01);
 1839              		.loc 1 524 33 is_stmt 0 view .LVU460
 1840 0028 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 1841 002a 6CF30302 		bfi	r2, ip, #0, #4
 1842 002e 5A71     		strb	r2, [r3, #5]
 525:Lib/soes/src/esc.c ****       mbxerr->detail = htoes (error);
 1843              		.loc 1 525 7 is_stmt 1 view .LVU461
 525:Lib/soes/src/esc.c ****       mbxerr->detail = htoes (error);
 1844              		.loc 1 525 20 is_stmt 0 view .LVU462
 1845 0030 0122     		movs	r2, #1
 1846 0032 9A71     		strb	r2, [r3, #6]
 1847 0034 83F807C0 		strb	ip, [r3, #7]
 526:Lib/soes/src/esc.c ****       MBXcontrol[MBXout].state = MBXstate_outreq;
 1848              		.loc 1 526 7 is_stmt 1 view .LVU463
 526:Lib/soes/src/esc.c ****       MBXcontrol[MBXout].state = MBXstate_outreq;
 1849              		.loc 1 526 22 is_stmt 0 view .LVU464
 1850 0038 1C81     		strh	r4, [r3, #8]	@ unaligned
 527:Lib/soes/src/esc.c ****    }
 1851              		.loc 1 527 7 is_stmt 1 view .LVU465
 527:Lib/soes/src/esc.c ****    }
 1852              		.loc 1 527 32 is_stmt 0 view .LVU466
 1853 003a 044B     		ldr	r3, .L136+8
 1854              	.LVL130:
 527:Lib/soes/src/esc.c ****    }
 1855              		.loc 1 527 32 view .LVU467
 1856 003c 0322     		movs	r2, #3
 1857 003e 5A54     		strb	r2, [r3, r1]
 1858              	.LVL131:
 1859              	.L133:
 529:Lib/soes/src/esc.c **** 
 1860              		.loc 1 529 1 view .LVU468
 1861 0040 10BD     		pop	{r4, pc}
 1862              	.L137:
 1863 0042 00BF     		.align	2
 1864              	.L136:
 1865 0044 00000000 		.word	ESCvar
 1866 0048 00000000 		.word	MBX
 1867 004c 00000000 		.word	MBXcontrol
 1868              		.cfi_endproc
 1869              	.LFE27:
 1871              		.section	.text.ESC_mbxprocess,"ax",%progbits
 1872              		.align	1
 1873              		.global	ESC_mbxprocess
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1878              	ESC_mbxprocess:
 1879              	.LFB28:
 538:Lib/soes/src/esc.c ****    uint8_t mbxhandle = 0;
ARM GAS  /tmp/ccoKziDo.s 			page 59


 1880              		.loc 1 538 1 is_stmt 1 view -0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 539:Lib/soes/src/esc.c ****    _MBXh *MBh = (_MBXh *)&MBX[0];
 1884              		.loc 1 539 4 view .LVU470
 1885              	.LVL132:
 540:Lib/soes/src/esc.c **** 
 1886              		.loc 1 540 4 view .LVU471
 542:Lib/soes/src/esc.c ****    {
 1887              		.loc 1 542 4 view .LVU472
 542:Lib/soes/src/esc.c ****    {
 1888              		.loc 1 542 14 is_stmt 0 view .LVU473
 1889 0000 6F4B     		ldr	r3, .L163
 1890 0002 93F86800 		ldrb	r0, [r3, #104]	@ zero_extendqisi2
 542:Lib/soes/src/esc.c ****    {
 1891              		.loc 1 542 7 view .LVU474
 1892 0006 0028     		cmp	r0, #0
 1893 0008 00F0D880 		beq	.L154
 538:Lib/soes/src/esc.c ****    uint8_t mbxhandle = 0;
 1894              		.loc 1 538 1 view .LVU475
 1895 000c 10B5     		push	{r4, lr}
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 4, -8
 1898              		.cfi_offset 14, -4
 549:Lib/soes/src/esc.c ****    {
 1899              		.loc 1 549 4 is_stmt 1 view .LVU476
 549:Lib/soes/src/esc.c ****    {
 1900              		.loc 1 549 14 is_stmt 0 view .LVU477
 1901 000e D3F8E430 		ldr	r3, [r3, #228]
 549:Lib/soes/src/esc.c ****    {
 1902              		.loc 1 549 7 view .LVU478
 1903 0012 13F4407F 		tst	r3, #768
 1904 0016 2FD1     		bne	.L157
 1905              	.L140:
 556:Lib/soes/src/esc.c ****    {
 1906              		.loc 1 556 4 is_stmt 1 view .LVU479
 556:Lib/soes/src/esc.c ****    {
 1907              		.loc 1 556 14 is_stmt 0 view .LVU480
 1908 0018 694B     		ldr	r3, .L163
 1909 001a 93F88C10 		ldrb	r1, [r3, #140]	@ zero_extendqisi2
 556:Lib/soes/src/esc.c ****    {
 1910              		.loc 1 556 7 view .LVU481
 1911 001e 21B1     		cbz	r1, .L141
 556:Lib/soes/src/esc.c ****    {
 1912              		.loc 1 556 36 discriminator 1 view .LVU482
 1913 0020 D3F8E430 		ldr	r3, [r3, #228]
 556:Lib/soes/src/esc.c ****    {
 1914              		.loc 1 556 26 discriminator 1 view .LVU483
 1915 0024 13F4007F 		tst	r3, #512
 1916 0028 2DD1     		bne	.L158
 1917              	.L141:
 582:Lib/soes/src/esc.c ****    {
 1918              		.loc 1 582 4 is_stmt 1 view .LVU484
 582:Lib/soes/src/esc.c ****    {
 1919              		.loc 1 582 20 is_stmt 0 view .LVU485
 1920 002a 654A     		ldr	r2, .L163
ARM GAS  /tmp/ccoKziDo.s 			page 60


 1921 002c 92F8CA30 		ldrb	r3, [r2, #202]	@ zero_extendqisi2
 1922 0030 C3F34003 		ubfx	r3, r3, #1, #1
 582:Lib/soes/src/esc.c ****    {
 1923              		.loc 1 582 36 view .LVU486
 1924 0034 92F8AA20 		ldrb	r2, [r2, #170]	@ zero_extendqisi2
 582:Lib/soes/src/esc.c ****    {
 1925              		.loc 1 582 7 view .LVU487
 1926 0038 9342     		cmp	r3, r2
 1927 003a 59D0     		beq	.L144
 584:Lib/soes/src/esc.c ****       {
 1928              		.loc 1 584 7 is_stmt 1 view .LVU488
 584:Lib/soes/src/esc.c ****       {
 1929              		.loc 1 584 29 is_stmt 0 view .LVU489
 1930 003c 604B     		ldr	r3, .L163
 1931 003e B3F88C30 		ldrh	r3, [r3, #140]
 584:Lib/soes/src/esc.c ****       {
 1932              		.loc 1 584 10 view .LVU490
 1933 0042 BBB1     		cbz	r3, .L145
 587:Lib/soes/src/esc.c ****          {
 1934              		.loc 1 587 10 is_stmt 1 view .LVU491
 587:Lib/soes/src/esc.c ****          {
 1935              		.loc 1 587 13 is_stmt 0 view .LVU492
 1936 0044 0029     		cmp	r1, #0
 1937 0046 42D1     		bne	.L146
 590:Lib/soes/src/esc.c ****          }
 1938              		.loc 1 590 13 is_stmt 1 view .LVU493
 1939 0048 5D4B     		ldr	r3, .L163
 1940 004a 93F88D00 		ldrb	r0, [r3, #141]	@ zero_extendqisi2
 1941 004e FFF7FEFF 		bl	ESC_writembx
 1942              	.LVL133:
 1943              	.L147:
 603:Lib/soes/src/esc.c ****          ESCvar.SM[1].PDIrep = ESCvar.toggle & 0x1U;
 1944              		.loc 1 603 10 view .LVU494
 603:Lib/soes/src/esc.c ****          ESCvar.SM[1].PDIrep = ESCvar.toggle & 0x1U;
 1945              		.loc 1 603 38 is_stmt 0 view .LVU495
 1946 0052 5B4B     		ldr	r3, .L163
 1947 0054 93F8CA20 		ldrb	r2, [r3, #202]	@ zero_extendqisi2
 1948 0058 C2F34001 		ubfx	r1, r2, #1, #1
 1949 005c 0A46     		mov	r2, r1
 603:Lib/soes/src/esc.c ****          ESCvar.SM[1].PDIrep = ESCvar.toggle & 0x1U;
 1950              		.loc 1 603 24 view .LVU496
 1951 005e 83F8AA10 		strb	r1, [r3, #170]
 604:Lib/soes/src/esc.c ****          ESC_SMwritepdi (1);
 1952              		.loc 1 604 10 is_stmt 1 view .LVU497
 604:Lib/soes/src/esc.c ****          ESC_SMwritepdi (1);
 1953              		.loc 1 604 30 is_stmt 0 view .LVU498
 1954 0062 93F8CB10 		ldrb	r1, [r3, #203]	@ zero_extendqisi2
 1955 0066 62F34101 		bfi	r1, r2, #1, #1
 1956 006a 83F8CB10 		strb	r1, [r3, #203]
 605:Lib/soes/src/esc.c ****       }
 1957              		.loc 1 605 10 is_stmt 1 view .LVU499
 1958 006e 0120     		movs	r0, #1
 1959 0070 FFF7FEFF 		bl	ESC_SMwritepdi
 1960              	.LVL134:
 1961              	.L145:
 607:Lib/soes/src/esc.c ****    }
 1962              		.loc 1 607 7 view .LVU500
ARM GAS  /tmp/ccoKziDo.s 			page 61


 607:Lib/soes/src/esc.c ****    }
 1963              		.loc 1 607 14 is_stmt 0 view .LVU501
 1964 0074 0020     		movs	r0, #0
 1965              	.LVL135:
 1966              	.L139:
 653:Lib/soes/src/esc.c **** /** Handler for incorrect or unsupported mailbox data. Write error response
 1967              		.loc 1 653 1 view .LVU502
 1968 0076 10BD     		pop	{r4, pc}
 1969              	.LVL136:
 1970              	.L157:
 551:Lib/soes/src/esc.c ****       ESC_SMstatus (1);
 1971              		.loc 1 551 7 is_stmt 1 view .LVU503
 1972 0078 0020     		movs	r0, #0
 1973 007a FFF7FEFF 		bl	ESC_SMstatus
 1974              	.LVL137:
 552:Lib/soes/src/esc.c ****    }
 1975              		.loc 1 552 7 view .LVU504
 1976 007e 0120     		movs	r0, #1
 1977 0080 FFF7FEFF 		bl	ESC_SMstatus
 1978              	.LVL138:
 1979 0084 C8E7     		b	.L140
 1980              	.L158:
 558:Lib/soes/src/esc.c ****       /* dispose old backup */
 1981              		.loc 1 558 7 view .LVU505
 1982 0086 FFF7FEFF 		bl	ESC_ackmbxread
 1983              	.LVL139:
 560:Lib/soes/src/esc.c ****       {
 1984              		.loc 1 560 7 view .LVU506
 560:Lib/soes/src/esc.c ****       {
 1985              		.loc 1 560 17 is_stmt 0 view .LVU507
 1986 008a 4D4B     		ldr	r3, .L163
 1987 008c 93F88D30 		ldrb	r3, [r3, #141]	@ zero_extendqisi2
 560:Lib/soes/src/esc.c ****       {
 1988              		.loc 1 560 10 view .LVU508
 1989 0090 13B1     		cbz	r3, .L142
 562:Lib/soes/src/esc.c ****       }
 1990              		.loc 1 562 10 is_stmt 1 view .LVU509
 562:Lib/soes/src/esc.c ****       }
 1991              		.loc 1 562 45 is_stmt 0 view .LVU510
 1992 0092 4C4A     		ldr	r2, .L163+4
 1993 0094 0021     		movs	r1, #0
 1994 0096 D154     		strb	r1, [r2, r3]
 1995              	.L142:
 565:Lib/soes/src/esc.c ****       {
 1996              		.loc 1 565 7 is_stmt 1 view .LVU511
 565:Lib/soes/src/esc.c ****       {
 1997              		.loc 1 565 28 is_stmt 0 view .LVU512
 1998 0098 494B     		ldr	r3, .L163
 1999 009a 93F88C00 		ldrb	r0, [r3, #140]	@ zero_extendqisi2
 565:Lib/soes/src/esc.c ****       {
 2000              		.loc 1 565 40 view .LVU513
 2001 009e 494B     		ldr	r3, .L163+4
 2002 00a0 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 565:Lib/soes/src/esc.c ****       {
 2003              		.loc 1 565 10 view .LVU514
 2004 00a2 062B     		cmp	r3, #6
 2005 00a4 10D0     		beq	.L159
ARM GAS  /tmp/ccoKziDo.s 			page 62


 2006              	.L143:
 570:Lib/soes/src/esc.c ****       ESCvar.mbxbackup = ESCvar.mbxoutpost;
 2007              		.loc 1 570 7 is_stmt 1 view .LVU515
 570:Lib/soes/src/esc.c ****       ESCvar.mbxbackup = ESCvar.mbxoutpost;
 2008              		.loc 1 570 24 is_stmt 0 view .LVU516
 2009 00a6 464B     		ldr	r3, .L163
 2010 00a8 93F88C20 		ldrb	r2, [r3, #140]	@ zero_extendqisi2
 570:Lib/soes/src/esc.c ****       ESCvar.mbxbackup = ESCvar.mbxoutpost;
 2011              		.loc 1 570 43 view .LVU517
 2012 00ac 4549     		ldr	r1, .L163+4
 2013 00ae 0520     		movs	r0, #5
 2014 00b0 8854     		strb	r0, [r1, r2]
 571:Lib/soes/src/esc.c ****       ESCvar.mbxoutpost = 0;
 2015              		.loc 1 571 7 is_stmt 1 view .LVU518
 571:Lib/soes/src/esc.c ****       ESCvar.mbxoutpost = 0;
 2016              		.loc 1 571 24 is_stmt 0 view .LVU519
 2017 00b2 83F88D20 		strb	r2, [r3, #141]
 572:Lib/soes/src/esc.c ****       /* Do we have any ongoing protocol transfers, return 1 */
 2018              		.loc 1 572 7 is_stmt 1 view .LVU520
 572:Lib/soes/src/esc.c ****       /* Do we have any ongoing protocol transfers, return 1 */
 2019              		.loc 1 572 25 is_stmt 0 view .LVU521
 2020 00b6 0022     		movs	r2, #0
 2021 00b8 83F88C20 		strb	r2, [r3, #140]
 574:Lib/soes/src/esc.c ****       {
 2022              		.loc 1 574 7 is_stmt 1 view .LVU522
 574:Lib/soes/src/esc.c ****       {
 2023              		.loc 1 574 16 is_stmt 0 view .LVU523
 2024 00bc 93F88E00 		ldrb	r0, [r3, #142]	@ zero_extendqisi2
 574:Lib/soes/src/esc.c ****       {
 2025              		.loc 1 574 9 view .LVU524
 2026 00c0 0028     		cmp	r0, #0
 2027 00c2 D8D0     		beq	.L139
 576:Lib/soes/src/esc.c ****       }
 2028              		.loc 1 576 17 view .LVU525
 2029 00c4 0120     		movs	r0, #1
 2030 00c6 D6E7     		b	.L139
 2031              	.L159:
 567:Lib/soes/src/esc.c ****       }
 2032              		.loc 1 567 10 is_stmt 1 view .LVU526
 2033 00c8 FFF7FEFF 		bl	ESC_writembx
 2034              	.LVL140:
 2035 00cc EBE7     		b	.L143
 2036              	.L146:
 595:Lib/soes/src/esc.c ****             /* have to resend later */
 2037              		.loc 1 595 13 view .LVU527
 2038 00ce 0120     		movs	r0, #1
 2039 00d0 FFF7FEFF 		bl	ESC_SMdisable
 2040              	.LVL141:
 597:Lib/soes/src/esc.c ****             /* activate mailbox */
 2041              		.loc 1 597 13 view .LVU528
 597:Lib/soes/src/esc.c ****             /* activate mailbox */
 2042              		.loc 1 597 30 is_stmt 0 view .LVU529
 2043 00d4 3A4C     		ldr	r4, .L163
 2044 00d6 94F88C30 		ldrb	r3, [r4, #140]	@ zero_extendqisi2
 597:Lib/soes/src/esc.c ****             /* activate mailbox */
 2045              		.loc 1 597 49 view .LVU530
 2046 00da 3A4A     		ldr	r2, .L163+4
ARM GAS  /tmp/ccoKziDo.s 			page 63


 2047 00dc 0621     		movs	r1, #6
 2048 00de D154     		strb	r1, [r2, r3]
 599:Lib/soes/src/esc.c ****             /* use backup mbx */
 2049              		.loc 1 599 13 is_stmt 1 view .LVU531
 2050 00e0 0120     		movs	r0, #1
 2051 00e2 FFF7FEFF 		bl	ESC_SMenable
 2052              	.LVL142:
 601:Lib/soes/src/esc.c ****          }
 2053              		.loc 1 601 13 view .LVU532
 2054 00e6 94F88D00 		ldrb	r0, [r4, #141]	@ zero_extendqisi2
 2055 00ea FFF7FEFF 		bl	ESC_writembx
 2056              	.LVL143:
 2057 00ee B0E7     		b	.L147
 2058              	.L144:
 611:Lib/soes/src/esc.c ****    {
 2059              		.loc 1 611 4 view .LVU533
 611:Lib/soes/src/esc.c ****    {
 2060              		.loc 1 611 14 is_stmt 0 view .LVU534
 2061 00f0 334B     		ldr	r3, .L163
 2062 00f2 93F88F30 		ldrb	r3, [r3, #143]	@ zero_extendqisi2
 611:Lib/soes/src/esc.c ****    {
 2063              		.loc 1 611 7 view .LVU535
 2064 00f6 73B1     		cbz	r3, .L148
 611:Lib/soes/src/esc.c ****    {
 2065              		.loc 1 611 31 discriminator 1 view .LVU536
 2066 00f8 314B     		ldr	r3, .L163
 2067 00fa 93F89030 		ldrb	r3, [r3, #144]	@ zero_extendqisi2
 611:Lib/soes/src/esc.c ****    {
 2068              		.loc 1 611 21 discriminator 1 view .LVU537
 2069 00fe 2BB9     		cbnz	r3, .L149
 611:Lib/soes/src/esc.c ****    {
 2070              		.loc 1 611 43 discriminator 2 view .LVU538
 2071 0100 2F4B     		ldr	r3, .L163
 2072 0102 93F8C930 		ldrb	r3, [r3, #201]	@ zero_extendqisi2
 611:Lib/soes/src/esc.c ****    {
 2073              		.loc 1 611 40 discriminator 2 view .LVU539
 2074 0106 13F0080F 		tst	r3, #8
 2075 010a 04D1     		bne	.L148
 2076              	.L149:
 614:Lib/soes/src/esc.c ****       /* outmbx empty and outreq mbx available */
 2077              		.loc 1 614 7 is_stmt 1 view .LVU540
 614:Lib/soes/src/esc.c ****       /* outmbx empty and outreq mbx available */
 2078              		.loc 1 614 19 is_stmt 0 view .LVU541
 2079 010c FFF7FEFF 		bl	ESC_outreqbuffer
 2080              	.LVL144:
 616:Lib/soes/src/esc.c ****       {
 2081              		.loc 1 616 7 is_stmt 1 view .LVU542
 616:Lib/soes/src/esc.c ****       {
 2082              		.loc 1 616 10 is_stmt 0 view .LVU543
 2083 0110 0446     		mov	r4, r0
 2084 0112 0028     		cmp	r0, #0
 2085 0114 31D1     		bne	.L160
 2086              	.LVL145:
 2087              	.L148:
 632:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
 2088              		.loc 1 632 4 is_stmt 1 view .LVU544
 632:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
ARM GAS  /tmp/ccoKziDo.s 			page 64


 2089              		.loc 1 632 30 is_stmt 0 view .LVU545
 2090 0116 2A4B     		ldr	r3, .L163
 2091 0118 93F8C100 		ldrb	r0, [r3, #193]	@ zero_extendqisi2
 632:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
 2092              		.loc 1 632 7 view .LVU546
 2093 011c 10F00800 		ands	r0, r0, #8
 2094 0120 A9D0     		beq	.L139
 632:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
 2095              		.loc 1 632 53 discriminator 1 view .LVU547
 2096 0122 284B     		ldr	r3, .L163+4
 2097 0124 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 632:Lib/soes/src/esc.c ****          && (ESCvar.mbxoutpost == 0) && (ESCvar.xoe == 0))
 2098              		.loc 1 632 36 discriminator 1 view .LVU548
 2099 0126 0028     		cmp	r0, #0
 2100 0128 46D1     		bne	.L152
 633:Lib/soes/src/esc.c ****    {
 2101              		.loc 1 633 38 view .LVU549
 2102 012a 254B     		ldr	r3, .L163
 2103 012c D3F88C30 		ldr	r3, [r3, #140]
 2104 0130 13F0FF1F 		tst	r3, #16711935
 2105 0134 9FD1     		bne	.L139
 635:Lib/soes/src/esc.c ****       ESCvar.SM[0].MBXstat = 0;
 2106              		.loc 1 635 7 is_stmt 1 view .LVU550
 2107 0136 FFF7FEFF 		bl	ESC_readmbx
 2108              	.LVL146:
 636:Lib/soes/src/esc.c ****       if (etohs (MBh->length) == 0)
 2109              		.loc 1 636 7 view .LVU551
 636:Lib/soes/src/esc.c ****       if (etohs (MBh->length) == 0)
 2110              		.loc 1 636 28 is_stmt 0 view .LVU552
 2111 013a 214B     		ldr	r3, .L163
 2112 013c 93F8C120 		ldrb	r2, [r3, #193]	@ zero_extendqisi2
 2113 0140 6FF3C302 		bfc	r2, #3, #1
 2114 0144 83F8C120 		strb	r2, [r3, #193]
 637:Lib/soes/src/esc.c ****       {
 2115              		.loc 1 637 7 is_stmt 1 view .LVU553
 637:Lib/soes/src/esc.c ****       {
 2116              		.loc 1 637 11 is_stmt 0 view .LVU554
 2117 0148 1F4B     		ldr	r3, .L163+8
 2118 014a 1B88     		ldrh	r3, [r3]	@ unaligned
 637:Lib/soes/src/esc.c ****       {
 2119              		.loc 1 637 10 view .LVU555
 2120 014c 4BB3     		cbz	r3, .L161
 2121              	.L150:
 643:Lib/soes/src/esc.c ****       {
 2122              		.loc 1 643 7 is_stmt 1 view .LVU556
 643:Lib/soes/src/esc.c ****       {
 2123              		.loc 1 643 24 is_stmt 0 view .LVU557
 2124 014e 1E4B     		ldr	r3, .L163+8
 2125 0150 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 643:Lib/soes/src/esc.c ****       {
 2126              		.loc 1 643 10 view .LVU558
 2127 0152 13F0F00F 		tst	r3, #240
 2128 0156 07D0     		beq	.L151
 643:Lib/soes/src/esc.c ****       {
 2129              		.loc 1 643 37 discriminator 1 view .LVU559
 2130 0158 1B4B     		ldr	r3, .L163+8
 2131 015a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccoKziDo.s 			page 65


 643:Lib/soes/src/esc.c ****       {
 2132              		.loc 1 643 55 discriminator 1 view .LVU560
 2133 015c 184B     		ldr	r3, .L163
 2134 015e 93F88B30 		ldrb	r3, [r3, #139]	@ zero_extendqisi2
 643:Lib/soes/src/esc.c ****       {
 2135              		.loc 1 643 30 discriminator 1 view .LVU561
 2136 0162 B3EB121F 		cmp	r3, r2, lsr #4
 2137 0166 23D0     		beq	.L162
 2138              	.L151:
 648:Lib/soes/src/esc.c ****       return 1;
 2139              		.loc 1 648 7 is_stmt 1 view .LVU562
 648:Lib/soes/src/esc.c ****       return 1;
 2140              		.loc 1 648 28 is_stmt 0 view .LVU563
 2141 0168 174B     		ldr	r3, .L163+8
 2142 016a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2143 016c C3F30313 		ubfx	r3, r3, #4, #4
 648:Lib/soes/src/esc.c ****       return 1;
 2144              		.loc 1 648 23 view .LVU564
 2145 0170 134A     		ldr	r2, .L163
 2146 0172 82F88B30 		strb	r3, [r2, #139]
 649:Lib/soes/src/esc.c ****    }
 2147              		.loc 1 649 7 is_stmt 1 view .LVU565
 649:Lib/soes/src/esc.c ****    }
 2148              		.loc 1 649 14 is_stmt 0 view .LVU566
 2149 0176 0120     		movs	r0, #1
 2150 0178 7DE7     		b	.L139
 2151              	.LVL147:
 2152              	.L160:
 618:Lib/soes/src/esc.c ****          /* Refresh SM status */
 2153              		.loc 1 618 10 is_stmt 1 view .LVU567
 2154 017a FFF7FEFF 		bl	ESC_writembx
 2155              	.LVL148:
 620:Lib/soes/src/esc.c ****          /* change state */
 2156              		.loc 1 620 10 view .LVU568
 2157 017e 0120     		movs	r0, #1
 2158 0180 FFF7FEFF 		bl	ESC_SMstatus
 2159              	.LVL149:
 622:Lib/soes/src/esc.c ****          ESCvar.mbxoutpost = mbxhandle;
 2160              		.loc 1 622 10 view .LVU569
 622:Lib/soes/src/esc.c ****          ESCvar.mbxoutpost = mbxhandle;
 2161              		.loc 1 622 38 is_stmt 0 view .LVU570
 2162 0184 0F4B     		ldr	r3, .L163+4
 2163 0186 0422     		movs	r2, #4
 2164 0188 1A55     		strb	r2, [r3, r4]
 623:Lib/soes/src/esc.c ****          if (ESCvar.txcue)
 2165              		.loc 1 623 10 is_stmt 1 view .LVU571
 623:Lib/soes/src/esc.c ****          if (ESCvar.txcue)
 2166              		.loc 1 623 28 is_stmt 0 view .LVU572
 2167 018a 0D4B     		ldr	r3, .L163
 2168 018c 83F88C40 		strb	r4, [r3, #140]
 624:Lib/soes/src/esc.c ****          {
 2169              		.loc 1 624 10 is_stmt 1 view .LVU573
 624:Lib/soes/src/esc.c ****          {
 2170              		.loc 1 624 20 is_stmt 0 view .LVU574
 2171 0190 93F88F30 		ldrb	r3, [r3, #143]	@ zero_extendqisi2
 624:Lib/soes/src/esc.c ****          {
 2172              		.loc 1 624 13 view .LVU575
ARM GAS  /tmp/ccoKziDo.s 			page 66


 2173 0194 002B     		cmp	r3, #0
 2174 0196 BED0     		beq	.L148
 626:Lib/soes/src/esc.c ****          }
 2175              		.loc 1 626 13 is_stmt 1 view .LVU576
 626:Lib/soes/src/esc.c ****          }
 2176              		.loc 1 626 25 is_stmt 0 view .LVU577
 2177 0198 013B     		subs	r3, r3, #1
 2178 019a 094A     		ldr	r2, .L163
 2179 019c 82F88F30 		strb	r3, [r2, #143]
 2180 01a0 B9E7     		b	.L148
 2181              	.L161:
 639:Lib/soes/src/esc.c ****          /* drop mailbox */
 2182              		.loc 1 639 10 is_stmt 1 view .LVU578
 2183 01a2 0520     		movs	r0, #5
 2184 01a4 FFF7FEFF 		bl	MBX_error
 2185              	.LVL150:
 641:Lib/soes/src/esc.c ****       }
 2186              		.loc 1 641 10 view .LVU579
 641:Lib/soes/src/esc.c ****       }
 2187              		.loc 1 641 30 is_stmt 0 view .LVU580
 2188 01a8 064B     		ldr	r3, .L163+4
 2189 01aa 0022     		movs	r2, #0
 2190 01ac 1A70     		strb	r2, [r3]
 2191 01ae CEE7     		b	.L150
 2192              	.L162:
 646:Lib/soes/src/esc.c ****       }
 2193              		.loc 1 646 10 is_stmt 1 view .LVU581
 646:Lib/soes/src/esc.c ****       }
 2194              		.loc 1 646 30 is_stmt 0 view .LVU582
 2195 01b0 044B     		ldr	r3, .L163+4
 2196 01b2 0022     		movs	r2, #0
 2197 01b4 1A70     		strb	r2, [r3]
 2198 01b6 D7E7     		b	.L151
 2199              	.L152:
 652:Lib/soes/src/esc.c **** }
 2200              		.loc 1 652 11 view .LVU583
 2201 01b8 0020     		movs	r0, #0
 2202 01ba 5CE7     		b	.L139
 2203              	.LVL151:
 2204              	.L154:
 2205              		.cfi_def_cfa_offset 0
 2206              		.cfi_restore 4
 2207              		.cfi_restore 14
 653:Lib/soes/src/esc.c **** /** Handler for incorrect or unsupported mailbox data. Write error response
 2208              		.loc 1 653 1 view .LVU584
 2209 01bc 7047     		bx	lr
 2210              	.L164:
 2211 01be 00BF     		.align	2
 2212              	.L163:
 2213 01c0 00000000 		.word	ESCvar
 2214 01c4 00000000 		.word	MBXcontrol
 2215 01c8 00000000 		.word	MBX
 2216              		.cfi_endproc
 2217              	.LFE28:
 2219              		.section	.text.ESC_xoeprocess,"ax",%progbits
 2220              		.align	1
 2221              		.global	ESC_xoeprocess
ARM GAS  /tmp/ccoKziDo.s 			page 67


 2222              		.syntax unified
 2223              		.thumb
 2224              		.thumb_func
 2226              	ESC_xoeprocess:
 2227              	.LFB29:
 658:Lib/soes/src/esc.c ****    _MBXh *mbh;
 2228              		.loc 1 658 1 is_stmt 1 view -0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 0, uses_anonymous_args = 0
 2232 0000 08B5     		push	{r3, lr}
 2233              		.cfi_def_cfa_offset 8
 2234              		.cfi_offset 3, -8
 2235              		.cfi_offset 14, -4
 659:Lib/soes/src/esc.c ****    if (ESCvar.MBXrun == 0)
 2236              		.loc 1 659 4 view .LVU586
 660:Lib/soes/src/esc.c ****    {
 2237              		.loc 1 660 4 view .LVU587
 660:Lib/soes/src/esc.c ****    {
 2238              		.loc 1 660 14 is_stmt 0 view .LVU588
 2239 0002 104B     		ldr	r3, .L172
 2240 0004 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 660:Lib/soes/src/esc.c ****    {
 2241              		.loc 1 660 7 view .LVU589
 2242 0008 3BB1     		cbz	r3, .L165
 664:Lib/soes/src/esc.c ****    {
 2243              		.loc 1 664 4 is_stmt 1 view .LVU590
 664:Lib/soes/src/esc.c ****    {
 2244              		.loc 1 664 15 is_stmt 0 view .LVU591
 2245 000a 0E4B     		ldr	r3, .L172
 2246 000c 93F88E30 		ldrb	r3, [r3, #142]	@ zero_extendqisi2
 664:Lib/soes/src/esc.c ****    {
 2247              		.loc 1 664 7 view .LVU592
 2248 0010 1BB9     		cbnz	r3, .L165
 664:Lib/soes/src/esc.c ****    {
 2249              		.loc 1 664 43 discriminator 1 view .LVU593
 2250 0012 0D4B     		ldr	r3, .L172+4
 2251 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 664:Lib/soes/src/esc.c ****    {
 2252              		.loc 1 664 26 discriminator 1 view .LVU594
 2253 0016 012B     		cmp	r3, #1
 2254 0018 00D0     		beq	.L171
 2255              	.L165:
 678:Lib/soes/src/esc.c **** 
 2256              		.loc 1 678 1 view .LVU595
 2257 001a 08BD     		pop	{r3, pc}
 2258              	.L171:
 666:Lib/soes/src/esc.c ****       if ((mbh->mbxtype == 0) || (etohs (mbh->length) == 0))
 2259              		.loc 1 666 7 is_stmt 1 view .LVU596
 2260              	.LVL152:
 667:Lib/soes/src/esc.c ****       {
 2261              		.loc 1 667 7 view .LVU597
 667:Lib/soes/src/esc.c ****       {
 2262              		.loc 1 667 25 is_stmt 0 view .LVU598
 2263 001c 0B4B     		ldr	r3, .L172+8
 2264 001e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 667:Lib/soes/src/esc.c ****       {
ARM GAS  /tmp/ccoKziDo.s 			page 68


 2265              		.loc 1 667 10 view .LVU599
 2266 0020 13F00F0F 		tst	r3, #15
 2267 0024 02D0     		beq	.L167
 667:Lib/soes/src/esc.c ****       {
 2268              		.loc 1 667 35 discriminator 1 view .LVU600
 2269 0026 094B     		ldr	r3, .L172+8
 2270 0028 1B88     		ldrh	r3, [r3]	@ unaligned
 667:Lib/soes/src/esc.c ****       {
 2271              		.loc 1 667 31 discriminator 1 view .LVU601
 2272 002a 33B9     		cbnz	r3, .L168
 2273              	.L167:
 669:Lib/soes/src/esc.c ****       }
 2274              		.loc 1 669 10 is_stmt 1 view .LVU602
 2275 002c 0520     		movs	r0, #5
 2276 002e FFF7FEFF 		bl	MBX_error
 2277              	.LVL153:
 2278              	.L169:
 676:Lib/soes/src/esc.c ****    }
 2279              		.loc 1 676 7 view .LVU603
 676:Lib/soes/src/esc.c ****    }
 2280              		.loc 1 676 27 is_stmt 0 view .LVU604
 2281 0032 054B     		ldr	r3, .L172+4
 2282 0034 0022     		movs	r2, #0
 2283 0036 1A70     		strb	r2, [r3]
 2284 0038 EFE7     		b	.L165
 2285              	.L168:
 673:Lib/soes/src/esc.c ****       }
 2286              		.loc 1 673 10 is_stmt 1 view .LVU605
 2287 003a 0220     		movs	r0, #2
 2288 003c FFF7FEFF 		bl	MBX_error
 2289              	.LVL154:
 2290 0040 F7E7     		b	.L169
 2291              	.L173:
 2292 0042 00BF     		.align	2
 2293              	.L172:
 2294 0044 00000000 		.word	ESCvar
 2295 0048 00000000 		.word	MBXcontrol
 2296 004c 00000000 		.word	MBX
 2297              		.cfi_endproc
 2298              	.LFE29:
 2300              		.section	.text.ESC_checkSM23,"ax",%progbits
 2301              		.align	1
 2302              		.global	ESC_checkSM23
 2303              		.syntax unified
 2304              		.thumb
 2305              		.thumb_func
 2307              	ESC_checkSM23:
 2308              	.LVL155:
 2309              	.LFB30:
 687:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 2310              		.loc 1 687 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
 687:Lib/soes/src/esc.c ****    _ESCsm2 *SM;
 2314              		.loc 1 687 1 is_stmt 0 view .LVU607
 2315 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccoKziDo.s 			page 69


 2316              		.cfi_def_cfa_offset 16
 2317              		.cfi_offset 3, -16
 2318              		.cfi_offset 4, -12
 2319              		.cfi_offset 5, -8
 2320              		.cfi_offset 14, -4
 2321 0002 0546     		mov	r5, r0
 688:Lib/soes/src/esc.c ****    ESC_read (ESCREG_SM2, (void *) &ESCvar.SM[2], sizeof (ESCvar.SM[2]));
 2322              		.loc 1 688 4 is_stmt 1 view .LVU608
 689:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[2];
 2323              		.loc 1 689 4 view .LVU609
 2324 0004 384C     		ldr	r4, .L192
 2325 0006 0822     		movs	r2, #8
 2326 0008 2146     		mov	r1, r4
 2327 000a 4FF40160 		mov	r0, #2064
 2328              	.LVL156:
 689:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[2];
 2329              		.loc 1 689 4 is_stmt 0 view .LVU610
 2330 000e FFF7FEFF 		bl	ESC_read
 2331              	.LVL157:
 690:Lib/soes/src/esc.c ****    
 2332              		.loc 1 690 4 is_stmt 1 view .LVU611
 693:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM2_smc))
 2333              		.loc 1 693 4 view .LVU612
 693:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM2_smc))
 2334              		.loc 1 693 9 is_stmt 0 view .LVU613
 2335 0012 2388     		ldrh	r3, [r4]
 693:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM2_smc))
 2336              		.loc 1 693 7 view .LVU614
 2337 0014 B3F5B05F 		cmp	r3, #5632
 2338 0018 39D1     		bne	.L175
 694:Lib/soes/src/esc.c ****    {
 2339              		.loc 1 694 11 discriminator 1 view .LVU615
 2340 001a A4F1CC03 		sub	r3, r4, #204
 2341 001e 93F8D030 		ldrb	r3, [r3, #208]	@ zero_extendqisi2
 693:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM2_smc))
 2342              		.loc 1 693 41 discriminator 1 view .LVU616
 2343 0022 242B     		cmp	r3, #36
 2344 0024 33D1     		bne	.L175
 702:Lib/soes/src/esc.c ****    {
 2345              		.loc 1 702 9 is_stmt 1 view .LVU617
 702:Lib/soes/src/esc.c ****    {
 2346              		.loc 1 702 13 is_stmt 0 view .LVU618
 2347 0026 314A     		ldr	r2, .L192+4
 2348 0028 B2F8CE30 		ldrh	r3, [r2, #206]
 702:Lib/soes/src/esc.c ****    {
 2349              		.loc 1 702 41 view .LVU619
 2350 002c B2F87820 		ldrh	r2, [r2, #120]
 702:Lib/soes/src/esc.c ****    {
 2351              		.loc 1 702 12 view .LVU620
 2352 0030 9342     		cmp	r3, r2
 2353 0032 32D1     		bne	.L187
 709:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) || (ESCvar.ESC_SM2_sml > 0)))
 2354              		.loc 1 709 9 is_stmt 1 view .LVU621
 717:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 2355              		.loc 1 717 9 view .LVU622
 718:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM2_sml > 0))
 2356              		.loc 1 718 17 is_stmt 0 view .LVU623
ARM GAS  /tmp/ccoKziDo.s 			page 70


 2357 0034 2D49     		ldr	r1, .L192+4
 2358 0036 91F8D210 		ldrb	r1, [r1, #210]	@ zero_extendqisi2
 717:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 2359              		.loc 1 717 12 view .LVU624
 2360 003a 11F0010F 		tst	r1, #1
 2361 003e 00D1     		bne	.L179
 718:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM2_sml > 0))
 2362              		.loc 1 718 61 view .LVU625
 2363 0040 8ABB     		cbnz	r2, .L188
 2364              	.L179:
 726:Lib/soes/src/esc.c ****    {
 2365              		.loc 1 726 4 is_stmt 1 view .LVU626
 726:Lib/soes/src/esc.c ****    {
 2366              		.loc 1 726 43 is_stmt 0 view .LVU627
 2367 0042 03EB4303 		add	r3, r3, r3, lsl #1
 726:Lib/soes/src/esc.c ****    {
 2368              		.loc 1 726 7 view .LVU628
 2369 0046 B3F5806F 		cmp	r3, #1024
 2370 004a 32DC     		bgt	.L189
 733:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[3];
 2371              		.loc 1 733 4 is_stmt 1 view .LVU629
 2372 004c 284C     		ldr	r4, .L192+8
 2373              	.LVL158:
 733:Lib/soes/src/esc.c ****    SM = (_ESCsm2 *) & ESCvar.SM[3];
 2374              		.loc 1 733 4 is_stmt 0 view .LVU630
 2375 004e 0822     		movs	r2, #8
 2376 0050 2146     		mov	r1, r4
 2377 0052 40F61800 		movw	r0, #2072
 2378 0056 FFF7FEFF 		bl	ESC_read
 2379              	.LVL159:
 734:Lib/soes/src/esc.c ****    /* Check SM settings */
 2380              		.loc 1 734 4 is_stmt 1 view .LVU631
 736:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM3_smc))
 2381              		.loc 1 736 4 view .LVU632
 736:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM3_smc))
 2382              		.loc 1 736 9 is_stmt 0 view .LVU633
 2383 005a 2388     		ldrh	r3, [r4]
 736:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM3_smc))
 2384              		.loc 1 736 7 view .LVU634
 2385 005c B3F5D05F 		cmp	r3, #6656
 2386 0060 2DD1     		bne	.L181
 737:Lib/soes/src/esc.c ****    {
 2387              		.loc 1 737 11 discriminator 1 view .LVU635
 2388 0062 A4F1D403 		sub	r3, r4, #212
 2389 0066 93F8D830 		ldrb	r3, [r3, #216]	@ zero_extendqisi2
 736:Lib/soes/src/esc.c ****        (SM->Command != ESC_SM3_smc))
 2390              		.loc 1 736 41 discriminator 1 view .LVU636
 2391 006a 202B     		cmp	r3, #32
 2392 006c 27D1     		bne	.L181
 745:Lib/soes/src/esc.c ****    {
 2393              		.loc 1 745 9 is_stmt 1 view .LVU637
 745:Lib/soes/src/esc.c ****    {
 2394              		.loc 1 745 13 is_stmt 0 view .LVU638
 2395 006e 1F4B     		ldr	r3, .L192+4
 2396 0070 B3F8D620 		ldrh	r2, [r3, #214]
 745:Lib/soes/src/esc.c ****    {
 2397              		.loc 1 745 41 view .LVU639
ARM GAS  /tmp/ccoKziDo.s 			page 71


 2398 0074 B3F87A30 		ldrh	r3, [r3, #122]
 745:Lib/soes/src/esc.c ****    {
 2399              		.loc 1 745 12 view .LVU640
 2400 0078 9A42     		cmp	r2, r3
 2401 007a 26D1     		bne	.L190
 752:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) || (ESCvar.ESC_SM3_sml > 0)))
 2402              		.loc 1 752 9 is_stmt 1 view .LVU641
 760:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 2403              		.loc 1 760 9 view .LVU642
 761:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM3_sml > 0))
 2404              		.loc 1 761 17 is_stmt 0 view .LVU643
 2405 007c 1B4A     		ldr	r2, .L192+4
 2406 007e 92F8DA20 		ldrb	r2, [r2, #218]	@ zero_extendqisi2
 760:Lib/soes/src/esc.c ****             ((SM->ActESC & ESCREG_SYNC_ACT_ACTIVATED) == 0) &&
 2407              		.loc 1 760 12 view .LVU644
 2408 0082 12F0010F 		tst	r2, #1
 2409 0086 2CD1     		bne	.L184
 761:Lib/soes/src/esc.c ****             (ESCvar.ESC_SM3_sml > 0))
 2410              		.loc 1 761 61 view .LVU645
 2411 0088 2BBB     		cbnz	r3, .L191
 768:Lib/soes/src/esc.c **** }
 2412              		.loc 1 768 11 view .LVU646
 2413 008a 2846     		mov	r0, r5
 2414 008c 04E0     		b	.L177
 2415              	.L175:
 696:Lib/soes/src/esc.c ****       /* fail state change */
 2416              		.loc 1 696 7 is_stmt 1 view .LVU647
 696:Lib/soes/src/esc.c ****       /* fail state change */
 2417              		.loc 1 696 27 is_stmt 0 view .LVU648
 2418 008e 174B     		ldr	r3, .L192+4
 2419 0090 0422     		movs	r2, #4
 2420 0092 83F8B420 		strb	r2, [r3, #180]
 698:Lib/soes/src/esc.c ****    }
 2421              		.loc 1 698 7 is_stmt 1 view .LVU649
 698:Lib/soes/src/esc.c ****    }
 2422              		.loc 1 698 14 is_stmt 0 view .LVU650
 2423 0096 1220     		movs	r0, #18
 2424              	.L177:
 769:Lib/soes/src/esc.c **** 
 2425              		.loc 1 769 1 view .LVU651
 2426 0098 38BD     		pop	{r3, r4, r5, pc}
 2427              	.LVL160:
 2428              	.L187:
 704:Lib/soes/src/esc.c ****       /* fail state change */
 2429              		.loc 1 704 7 is_stmt 1 view .LVU652
 704:Lib/soes/src/esc.c ****       /* fail state change */
 2430              		.loc 1 704 27 is_stmt 0 view .LVU653
 2431 009a 144B     		ldr	r3, .L192+4
 2432 009c 0422     		movs	r2, #4
 2433 009e 83F8B420 		strb	r2, [r3, #180]
 706:Lib/soes/src/esc.c ****    }
 2434              		.loc 1 706 7 is_stmt 1 view .LVU654
 706:Lib/soes/src/esc.c ****    }
 2435              		.loc 1 706 14 is_stmt 0 view .LVU655
 2436 00a2 1220     		movs	r0, #18
 2437 00a4 F8E7     		b	.L177
 2438              	.L188:
ARM GAS  /tmp/ccoKziDo.s 			page 72


 721:Lib/soes/src/esc.c ****       /* fail state change */
 2439              		.loc 1 721 7 is_stmt 1 view .LVU656
 721:Lib/soes/src/esc.c ****       /* fail state change */
 2440              		.loc 1 721 27 is_stmt 0 view .LVU657
 2441 00a6 114B     		ldr	r3, .L192+4
 2442 00a8 0422     		movs	r2, #4
 2443 00aa 83F8B420 		strb	r2, [r3, #180]
 723:Lib/soes/src/esc.c ****    }
 2444              		.loc 1 723 7 is_stmt 1 view .LVU658
 723:Lib/soes/src/esc.c ****    }
 2445              		.loc 1 723 14 is_stmt 0 view .LVU659
 2446 00ae 1220     		movs	r0, #18
 2447 00b0 F2E7     		b	.L177
 2448              	.L189:
 728:Lib/soes/src/esc.c ****       /* SM2 overlaps SM3, fail state change */
 2449              		.loc 1 728 7 is_stmt 1 view .LVU660
 728:Lib/soes/src/esc.c ****       /* SM2 overlaps SM3, fail state change */
 2450              		.loc 1 728 27 is_stmt 0 view .LVU661
 2451 00b2 0E4B     		ldr	r3, .L192+4
 2452 00b4 0422     		movs	r2, #4
 2453 00b6 83F8B420 		strb	r2, [r3, #180]
 730:Lib/soes/src/esc.c ****    }
 2454              		.loc 1 730 7 is_stmt 1 view .LVU662
 730:Lib/soes/src/esc.c ****    }
 2455              		.loc 1 730 14 is_stmt 0 view .LVU663
 2456 00ba 1220     		movs	r0, #18
 2457 00bc ECE7     		b	.L177
 2458              	.L181:
 739:Lib/soes/src/esc.c ****       /* fail state change */
 2459              		.loc 1 739 7 is_stmt 1 view .LVU664
 739:Lib/soes/src/esc.c ****       /* fail state change */
 2460              		.loc 1 739 27 is_stmt 0 view .LVU665
 2461 00be 0B4B     		ldr	r3, .L192+4
 2462 00c0 0822     		movs	r2, #8
 2463 00c2 83F8B420 		strb	r2, [r3, #180]
 741:Lib/soes/src/esc.c ****    }
 2464              		.loc 1 741 7 is_stmt 1 view .LVU666
 741:Lib/soes/src/esc.c ****    }
 2465              		.loc 1 741 14 is_stmt 0 view .LVU667
 2466 00c6 1220     		movs	r0, #18
 2467 00c8 E6E7     		b	.L177
 2468              	.L190:
 747:Lib/soes/src/esc.c ****       /* fail state change */
 2469              		.loc 1 747 7 is_stmt 1 view .LVU668
 747:Lib/soes/src/esc.c ****       /* fail state change */
 2470              		.loc 1 747 27 is_stmt 0 view .LVU669
 2471 00ca 084B     		ldr	r3, .L192+4
 2472 00cc 0822     		movs	r2, #8
 2473 00ce 83F8B420 		strb	r2, [r3, #180]
 749:Lib/soes/src/esc.c ****    }
 2474              		.loc 1 749 7 is_stmt 1 view .LVU670
 749:Lib/soes/src/esc.c ****    }
 2475              		.loc 1 749 14 is_stmt 0 view .LVU671
 2476 00d2 1220     		movs	r0, #18
 2477 00d4 E0E7     		b	.L177
 2478              	.L191:
 764:Lib/soes/src/esc.c ****       /* fail state change */
ARM GAS  /tmp/ccoKziDo.s 			page 73


 2479              		.loc 1 764 7 is_stmt 1 view .LVU672
 764:Lib/soes/src/esc.c ****       /* fail state change */
 2480              		.loc 1 764 27 is_stmt 0 view .LVU673
 2481 00d6 054B     		ldr	r3, .L192+4
 2482 00d8 0822     		movs	r2, #8
 2483 00da 83F8B420 		strb	r2, [r3, #180]
 766:Lib/soes/src/esc.c ****    }
 2484              		.loc 1 766 7 is_stmt 1 view .LVU674
 766:Lib/soes/src/esc.c ****    }
 2485              		.loc 1 766 14 is_stmt 0 view .LVU675
 2486 00de 1220     		movs	r0, #18
 2487 00e0 DAE7     		b	.L177
 2488              	.L184:
 768:Lib/soes/src/esc.c **** }
 2489              		.loc 1 768 11 view .LVU676
 2490 00e2 2846     		mov	r0, r5
 2491 00e4 D8E7     		b	.L177
 2492              	.L193:
 2493 00e6 00BF     		.align	2
 2494              	.L192:
 2495 00e8 CC000000 		.word	ESCvar+204
 2496 00ec 00000000 		.word	ESCvar
 2497 00f0 D4000000 		.word	ESCvar+212
 2498              		.cfi_endproc
 2499              	.LFE30:
 2501              		.section	.text.ESC_startinput,"ax",%progbits
 2502              		.align	1
 2503              		.global	ESC_startinput
 2504              		.syntax unified
 2505              		.thumb
 2506              		.thumb_func
 2508              	ESC_startinput:
 2509              	.LVL161:
 2510              	.LFB31:
 779:Lib/soes/src/esc.c **** 
 2511              		.loc 1 779 1 is_stmt 1 view -0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 779:Lib/soes/src/esc.c **** 
 2515              		.loc 1 779 1 is_stmt 0 view .LVU678
 2516 0000 10B5     		push	{r4, lr}
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 4, -8
 2519              		.cfi_offset 14, -4
 781:Lib/soes/src/esc.c **** 
 2520              		.loc 1 781 4 is_stmt 1 view .LVU679
 781:Lib/soes/src/esc.c **** 
 2521              		.loc 1 781 12 is_stmt 0 view .LVU680
 2522 0002 FFF7FEFF 		bl	ESC_checkSM23
 2523              	.LVL162:
 781:Lib/soes/src/esc.c **** 
 2524              		.loc 1 781 12 view .LVU681
 2525 0006 0446     		mov	r4, r0
 2526              	.LVL163:
 783:Lib/soes/src/esc.c ****    {
 2527              		.loc 1 783 4 is_stmt 1 view .LVU682
ARM GAS  /tmp/ccoKziDo.s 			page 74


 783:Lib/soes/src/esc.c ****    {
 2528              		.loc 1 783 7 is_stmt 0 view .LVU683
 2529 0008 1228     		cmp	r0, #18
 2530 000a 15D0     		beq	.L195
 786:Lib/soes/src/esc.c ****       {
 2531              		.loc 1 786 7 is_stmt 1 view .LVU684
 786:Lib/soes/src/esc.c ****       {
 2532              		.loc 1 786 17 is_stmt 0 view .LVU685
 2533 000c 294B     		ldr	r3, .L208
 2534 000e B3F87A30 		ldrh	r3, [r3, #122]
 786:Lib/soes/src/esc.c ****       {
 2535              		.loc 1 786 10 view .LVU686
 2536 0012 6BB9     		cbnz	r3, .L205
 2537              	.LVL164:
 2538              	.L196:
 791:Lib/soes/src/esc.c ****    }
 2539              		.loc 1 791 7 is_stmt 1 view .LVU687
 2540 0014 BFF35B8F 		dmb	ish
 2541 0018 274B     		ldr	r3, .L208+4
 2542 001a 0122     		movs	r2, #1
 2543 001c 1A70     		strb	r2, [r3]
 2544 001e BFF35B8F 		dmb	ish
 2545              	.L197:
 808:Lib/soes/src/esc.c ****    {
 2546              		.loc 1 808 4 view .LVU688
 808:Lib/soes/src/esc.c ****    {
 2547              		.loc 1 808 14 is_stmt 0 view .LVU689
 2548 0022 244B     		ldr	r3, .L208
 2549 0024 1B68     		ldr	r3, [r3]
 808:Lib/soes/src/esc.c ****    {
 2550              		.loc 1 808 7 view .LVU690
 2551 0026 0BB1     		cbz	r3, .L199
 813:Lib/soes/src/esc.c ****    {
 2552              		.loc 1 813 4 is_stmt 1 view .LVU691
 813:Lib/soes/src/esc.c ****    {
 2553              		.loc 1 813 7 is_stmt 0 view .LVU692
 2554 0028 122C     		cmp	r4, #18
 2555 002a 19D1     		bne	.L206
 2556              	.L199:
 851:Lib/soes/src/esc.c **** 
 2557              		.loc 1 851 1 view .LVU693
 2558 002c 2046     		mov	r0, r4
 2559 002e 10BD     		pop	{r4, pc}
 2560              	.LVL165:
 2561              	.L205:
 788:Lib/soes/src/esc.c ****       }
 2562              		.loc 1 788 10 is_stmt 1 view .LVU694
 2563 0030 0320     		movs	r0, #3
 2564              	.LVL166:
 788:Lib/soes/src/esc.c ****       }
 2565              		.loc 1 788 10 is_stmt 0 view .LVU695
 2566 0032 FFF7FEFF 		bl	ESC_SMenable
 2567              	.LVL167:
 2568 0036 EDE7     		b	.L196
 2569              	.LVL168:
 2570              	.L195:
 795:Lib/soes/src/esc.c ****       ESC_SMdisable (3);
ARM GAS  /tmp/ccoKziDo.s 			page 75


 2571              		.loc 1 795 7 is_stmt 1 view .LVU696
 2572 0038 0220     		movs	r0, #2
 2573              	.LVL169:
 795:Lib/soes/src/esc.c ****       ESC_SMdisable (3);
 2574              		.loc 1 795 7 is_stmt 0 view .LVU697
 2575 003a FFF7FEFF 		bl	ESC_SMdisable
 2576              	.LVL170:
 796:Lib/soes/src/esc.c ****       if (ESCvar.SMtestresult & SMRESULT_ERRSM3)
 2577              		.loc 1 796 7 is_stmt 1 view .LVU698
 2578 003e 0320     		movs	r0, #3
 2579 0040 FFF7FEFF 		bl	ESC_SMdisable
 2580              	.LVL171:
 797:Lib/soes/src/esc.c ****       {
 2581              		.loc 1 797 7 view .LVU699
 797:Lib/soes/src/esc.c ****       {
 2582              		.loc 1 797 17 is_stmt 0 view .LVU700
 2583 0044 1B4B     		ldr	r3, .L208
 2584 0046 93F8B430 		ldrb	r3, [r3, #180]	@ zero_extendqisi2
 797:Lib/soes/src/esc.c ****       {
 2585              		.loc 1 797 10 view .LVU701
 2586 004a 13F0080F 		tst	r3, #8
 2587 004e 03D0     		beq	.L198
 799:Lib/soes/src/esc.c ****       }
 2588              		.loc 1 799 10 is_stmt 1 view .LVU702
 2589 0050 1E20     		movs	r0, #30
 2590 0052 FFF7FEFF 		bl	ESC_ALerror
 2591              	.LVL172:
 2592 0056 E4E7     		b	.L197
 2593              	.L198:
 803:Lib/soes/src/esc.c ****       }
 2594              		.loc 1 803 10 view .LVU703
 2595 0058 1D20     		movs	r0, #29
 2596 005a FFF7FEFF 		bl	ESC_ALerror
 2597              	.LVL173:
 2598 005e E0E7     		b	.L197
 2599              	.L206:
 2600              	.LBB5:
 815:Lib/soes/src/esc.c ****       dc_check_result = ESC_checkDC();
 2601              		.loc 1 815 7 view .LVU704
 816:Lib/soes/src/esc.c ****       if(dc_check_result > 0)
 2602              		.loc 1 816 7 view .LVU705
 816:Lib/soes/src/esc.c ****       if(dc_check_result > 0)
 2603              		.loc 1 816 25 is_stmt 0 view .LVU706
 2604 0060 FFF7FEFF 		bl	ESC_checkDC
 2605              	.LVL174:
 817:Lib/soes/src/esc.c ****       {
 2606              		.loc 1 817 7 is_stmt 1 view .LVU707
 817:Lib/soes/src/esc.c ****       {
 2607              		.loc 1 817 9 is_stmt 0 view .LVU708
 2608 0064 88B9     		cbnz	r0, .L207
 828:Lib/soes/src/esc.c ****          {
 2609              		.loc 1 828 10 is_stmt 1 view .LVU709
 828:Lib/soes/src/esc.c ****          {
 2610              		.loc 1 828 20 is_stmt 0 view .LVU710
 2611 0066 134B     		ldr	r3, .L208
 2612 0068 5B6D     		ldr	r3, [r3, #84]
 828:Lib/soes/src/esc.c ****          {
ARM GAS  /tmp/ccoKziDo.s 			page 76


 2613              		.loc 1 828 13 view .LVU711
 2614 006a 002B     		cmp	r3, #0
 2615 006c DED0     		beq	.L199
 2616              	.LBB6:
 830:Lib/soes/src/esc.c **** 
 2617              		.loc 1 830 13 is_stmt 1 view .LVU712
 832:Lib/soes/src/esc.c ****             {
 2618              		.loc 1 832 13 view .LVU713
 832:Lib/soes/src/esc.c ****             {
 2619              		.loc 1 832 23 is_stmt 0 view .LVU714
 2620 006e 114A     		ldr	r2, .L208
 2621 0070 B2F87820 		ldrh	r2, [r2, #120]
 832:Lib/soes/src/esc.c ****             {
 2622              		.loc 1 832 16 view .LVU715
 2623 0074 D2B9     		cbnz	r2, .L203
 834:Lib/soes/src/esc.c ****             }
 2624              		.loc 1 834 25 view .LVU716
 2625 0076 4FF40060 		mov	r0, #2048
 2626              	.LVL175:
 2627              	.L201:
 841:Lib/soes/src/esc.c ****             {
 2628              		.loc 1 841 13 is_stmt 1 view .LVU717
 841:Lib/soes/src/esc.c ****             {
 2629              		.loc 1 841 23 is_stmt 0 view .LVU718
 2630 007a 0E4A     		ldr	r2, .L208
 2631 007c 92F87C20 		ldrb	r2, [r2, #124]	@ zero_extendqisi2
 841:Lib/soes/src/esc.c ****             {
 2632              		.loc 1 841 16 view .LVU719
 2633 0080 0AB1     		cbz	r2, .L202
 843:Lib/soes/src/esc.c ****             }
 2634              		.loc 1 843 16 is_stmt 1 view .LVU720
 843:Lib/soes/src/esc.c ****             }
 2635              		.loc 1 843 25 is_stmt 0 view .LVU721
 2636 0082 40F00400 		orr	r0, r0, #4
 2637              	.LVL176:
 2638              	.L202:
 845:Lib/soes/src/esc.c ****          }
 2639              		.loc 1 845 13 is_stmt 1 view .LVU722
 2640 0086 9847     		blx	r3
 2641              	.LVL177:
 845:Lib/soes/src/esc.c ****          }
 2642              		.loc 1 845 13 is_stmt 0 view .LVU723
 2643 0088 D0E7     		b	.L199
 2644              	.LVL178:
 2645              	.L207:
 845:Lib/soes/src/esc.c ****          }
 2646              		.loc 1 845 13 view .LVU724
 2647              	.LBE6:
 819:Lib/soes/src/esc.c ****          state = (ESCpreop | ESCerror);
 2648              		.loc 1 819 10 is_stmt 1 view .LVU725
 2649 008a FFF7FEFF 		bl	ESC_ALerror
 2650              	.LVL179:
 820:Lib/soes/src/esc.c **** 
 2651              		.loc 1 820 10 view .LVU726
 822:Lib/soes/src/esc.c ****          ESC_SMdisable (3);
 2652              		.loc 1 822 10 view .LVU727
 2653 008e 0220     		movs	r0, #2
ARM GAS  /tmp/ccoKziDo.s 			page 77


 2654 0090 FFF7FEFF 		bl	ESC_SMdisable
 2655              	.LVL180:
 823:Lib/soes/src/esc.c ****          CC_ATOMIC_SET(ESCvar.App.state, APPSTATE_IDLE);
 2656              		.loc 1 823 10 view .LVU728
 2657 0094 0320     		movs	r0, #3
 2658 0096 FFF7FEFF 		bl	ESC_SMdisable
 2659              	.LVL181:
 824:Lib/soes/src/esc.c ****       }
 2660              		.loc 1 824 10 view .LVU729
 2661 009a BFF35B8F 		dmb	ish
 2662 009e 064B     		ldr	r3, .L208+4
 2663 00a0 0022     		movs	r2, #0
 2664 00a2 1A70     		strb	r2, [r3]
 2665 00a4 BFF35B8F 		dmb	ish
 820:Lib/soes/src/esc.c **** 
 2666              		.loc 1 820 16 is_stmt 0 view .LVU730
 2667 00a8 1224     		movs	r4, #18
 2668 00aa BFE7     		b	.L199
 2669              	.LVL182:
 2670              	.L203:
 2671              	.LBB7:
 838:Lib/soes/src/esc.c ****             }
 2672              		.loc 1 838 25 view .LVU731
 2673 00ac 4FF48060 		mov	r0, #1024
 2674              	.LVL183:
 838:Lib/soes/src/esc.c ****             }
 2675              		.loc 1 838 25 view .LVU732
 2676 00b0 E3E7     		b	.L201
 2677              	.L209:
 2678 00b2 00BF     		.align	2
 2679              	.L208:
 2680 00b4 00000000 		.word	ESCvar
 2681 00b8 E9000000 		.word	ESCvar+233
 2682              	.LBE7:
 2683              	.LBE5:
 2684              		.cfi_endproc
 2685              	.LFE31:
 2687              		.section	.text.ESC_stopinput,"ax",%progbits
 2688              		.align	1
 2689              		.global	ESC_stopinput
 2690              		.syntax unified
 2691              		.thumb
 2692              		.thumb_func
 2694              	ESC_stopinput:
 2695              	.LFB32:
 858:Lib/soes/src/esc.c ****    CC_ATOMIC_SET(ESCvar.App.state, APPSTATE_IDLE);
 2696              		.loc 1 858 1 is_stmt 1 view -0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 0, uses_anonymous_args = 0
 2700 0000 10B5     		push	{r4, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 4, -8
 2703              		.cfi_offset 14, -4
 859:Lib/soes/src/esc.c ****    ESC_SMdisable (3);
 2704              		.loc 1 859 4 view .LVU734
 2705 0002 0C4C     		ldr	r4, .L213
ARM GAS  /tmp/ccoKziDo.s 			page 78


 2706 0004 BFF35B8F 		dmb	ish
 2707 0008 0023     		movs	r3, #0
 2708 000a 2370     		strb	r3, [r4]
 2709 000c BFF35B8F 		dmb	ish
 860:Lib/soes/src/esc.c ****    ESC_SMdisable (2);
 2710              		.loc 1 860 4 view .LVU735
 2711 0010 0320     		movs	r0, #3
 2712 0012 FFF7FEFF 		bl	ESC_SMdisable
 2713              	.LVL184:
 861:Lib/soes/src/esc.c **** 
 2714              		.loc 1 861 4 view .LVU736
 2715 0016 0220     		movs	r0, #2
 2716 0018 FFF7FEFF 		bl	ESC_SMdisable
 2717              	.LVL185:
 864:Lib/soes/src/esc.c ****          (ESCvar.esc_hw_interrupt_disable != NULL))
 2718              		.loc 1 864 4 view .LVU737
 864:Lib/soes/src/esc.c ****          (ESCvar.esc_hw_interrupt_disable != NULL))
 2719              		.loc 1 864 15 is_stmt 0 view .LVU738
 2720 001c 54F8E93C 		ldr	r3, [r4, #-233]
 864:Lib/soes/src/esc.c ****          (ESCvar.esc_hw_interrupt_disable != NULL))
 2721              		.loc 1 864 7 view .LVU739
 2722 0020 33B1     		cbz	r3, .L210
 865:Lib/soes/src/esc.c ****    {
 2723              		.loc 1 865 17 discriminator 1 view .LVU740
 2724 0022 A4F1E903 		sub	r3, r4, #233
 2725 0026 9B6D     		ldr	r3, [r3, #88]
 864:Lib/soes/src/esc.c ****          (ESCvar.esc_hw_interrupt_disable != NULL))
 2726              		.loc 1 864 36 discriminator 1 view .LVU741
 2727 0028 13B1     		cbz	r3, .L210
 867:Lib/soes/src/esc.c ****             ESCREG_ALEVENT_SM2 |
 2728              		.loc 1 867 7 is_stmt 1 view .LVU742
 2729 002a 40F60440 		movw	r0, #3076
 2730 002e 9847     		blx	r3
 2731              	.LVL186:
 2732              	.L210:
 871:Lib/soes/src/esc.c **** 
 2733              		.loc 1 871 1 is_stmt 0 view .LVU743
 2734 0030 10BD     		pop	{r4, pc}
 2735              	.L214:
 2736 0032 00BF     		.align	2
 2737              	.L213:
 2738 0034 E9000000 		.word	ESCvar+233
 2739              		.cfi_endproc
 2740              	.LFE32:
 2742              		.section	.text.ESC_startoutput,"ax",%progbits
 2743              		.align	1
 2744              		.global	ESC_startoutput
 2745              		.syntax unified
 2746              		.thumb
 2747              		.thumb_func
 2749              	ESC_startoutput:
 2750              	.LVL187:
 2751              	.LFB33:
 882:Lib/soes/src/esc.c **** 	
 2752              		.loc 1 882 1 is_stmt 1 view -0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccoKziDo.s 			page 79


 2755              		@ frame_needed = 0, uses_anonymous_args = 0
 882:Lib/soes/src/esc.c **** 	
 2756              		.loc 1 882 1 is_stmt 0 view .LVU745
 2757 0000 10B5     		push	{r4, lr}
 2758              		.cfi_def_cfa_offset 8
 2759              		.cfi_offset 4, -8
 2760              		.cfi_offset 14, -4
 2761 0002 0446     		mov	r4, r0
 885:Lib/soes/src/esc.c ****    {
 2762              		.loc 1 885 4 is_stmt 1 view .LVU746
 885:Lib/soes/src/esc.c ****    {
 2763              		.loc 1 885 14 is_stmt 0 view .LVU747
 2764 0004 0B4B     		ldr	r3, .L220
 2765 0006 B3F87830 		ldrh	r3, [r3, #120]
 885:Lib/soes/src/esc.c ****    {
 2766              		.loc 1 885 7 view .LVU748
 2767 000a 73B9     		cbnz	r3, .L219
 2768              	.LVL188:
 2769              	.L216:
 890:Lib/soes/src/esc.c ****    return state;
 2770              		.loc 1 890 4 is_stmt 1 view .LVU749
 2771 000c 0A4B     		ldr	r3, .L220+4
 2772 000e BFF35B8F 		dmb	ish
 2773              	.L217:
 2774 0012 D3E84F2F 		ldrexb	r2, [r3]
 2775 0016 42F00202 		orr	r2, r2, #2
 2776 001a C3E8412F 		strexb	r1, r2, [r3]
 2777 001e 0029     		cmp	r1, #0
 2778 0020 F7D1     		bne	.L217
 2779 0022 BFF35B8F 		dmb	ish
 891:Lib/soes/src/esc.c **** 
 2780              		.loc 1 891 4 view .LVU750
 893:Lib/soes/src/esc.c **** 
 2781              		.loc 1 893 1 is_stmt 0 view .LVU751
 2782 0026 2046     		mov	r0, r4
 2783 0028 10BD     		pop	{r4, pc}
 2784              	.LVL189:
 2785              	.L219:
 887:Lib/soes/src/esc.c ****    }
 2786              		.loc 1 887 7 is_stmt 1 view .LVU752
 2787 002a 0220     		movs	r0, #2
 2788              	.LVL190:
 887:Lib/soes/src/esc.c ****    }
 2789              		.loc 1 887 7 is_stmt 0 view .LVU753
 2790 002c FFF7FEFF 		bl	ESC_SMenable
 2791              	.LVL191:
 2792 0030 ECE7     		b	.L216
 2793              	.L221:
 2794 0032 00BF     		.align	2
 2795              	.L220:
 2796 0034 00000000 		.word	ESCvar
 2797 0038 E9000000 		.word	ESCvar+233
 2798              		.cfi_endproc
 2799              	.LFE33:
 2801              		.section	.text.ESC_stopoutput,"ax",%progbits
 2802              		.align	1
 2803              		.global	ESC_stopoutput
ARM GAS  /tmp/ccoKziDo.s 			page 80


 2804              		.syntax unified
 2805              		.thumb
 2806              		.thumb_func
 2808              	ESC_stopoutput:
 2809              	.LFB34:
 901:Lib/soes/src/esc.c ****    CC_ATOMIC_AND(ESCvar.App.state, APPSTATE_INPUT);
 2810              		.loc 1 901 1 is_stmt 1 view -0
 2811              		.cfi_startproc
 2812              		@ args = 0, pretend = 0, frame = 0
 2813              		@ frame_needed = 0, uses_anonymous_args = 0
 2814 0000 08B5     		push	{r3, lr}
 2815              		.cfi_def_cfa_offset 8
 2816              		.cfi_offset 3, -8
 2817              		.cfi_offset 14, -4
 902:Lib/soes/src/esc.c ****    ESC_SMdisable (2);
 2818              		.loc 1 902 4 view .LVU755
 2819 0002 094B     		ldr	r3, .L225
 2820 0004 BFF35B8F 		dmb	ish
 2821              	.L223:
 2822 0008 D3E84F2F 		ldrexb	r2, [r3]
 2823 000c 02F00102 		and	r2, r2, #1
 2824 0010 C3E8412F 		strexb	r1, r2, [r3]
 2825 0014 0029     		cmp	r1, #0
 2826 0016 F7D1     		bne	.L223
 2827 0018 BFF35B8F 		dmb	ish
 903:Lib/soes/src/esc.c ****    APP_safeoutput ();
 2828              		.loc 1 903 4 view .LVU756
 2829 001c 0220     		movs	r0, #2
 2830 001e FFF7FEFF 		bl	ESC_SMdisable
 2831              	.LVL192:
 904:Lib/soes/src/esc.c **** }
 2832              		.loc 1 904 4 view .LVU757
 2833 0022 FFF7FEFF 		bl	APP_safeoutput
 2834              	.LVL193:
 905:Lib/soes/src/esc.c **** 
 2835              		.loc 1 905 1 is_stmt 0 view .LVU758
 2836 0026 08BD     		pop	{r3, pc}
 2837              	.L226:
 2838              		.align	2
 2839              	.L225:
 2840 0028 E9000000 		.word	ESCvar+233
 2841              		.cfi_endproc
 2842              	.LFE34:
 2844              		.section	.text.ESC_ALstatusgotoerror,"ax",%progbits
 2845              		.align	1
 2846              		.global	ESC_ALstatusgotoerror
 2847              		.syntax unified
 2848              		.thumb
 2849              		.thumb_func
 2851              	ESC_ALstatusgotoerror:
 2852              	.LVL194:
 2853              	.LFB2:
  53:Lib/soes/src/esc.c ****    uint8_t an, as;
 2854              		.loc 1 53 1 is_stmt 1 view -0
 2855              		.cfi_startproc
 2856              		@ args = 0, pretend = 0, frame = 8
 2857              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoKziDo.s 			page 81


  54:Lib/soes/src/esc.c **** 
 2858              		.loc 1 54 4 view .LVU760
  56:Lib/soes/src/esc.c ****    {
 2859              		.loc 1 56 4 view .LVU761
  56:Lib/soes/src/esc.c ****    {
 2860              		.loc 1 56 6 is_stmt 0 view .LVU762
 2861 0000 10F0080F 		tst	r0, #8
 2862 0004 35D1     		bne	.L234
  53:Lib/soes/src/esc.c ****    uint8_t an, as;
 2863              		.loc 1 53 1 view .LVU763
 2864 0006 30B5     		push	{r4, r5, lr}
 2865              		.cfi_def_cfa_offset 12
 2866              		.cfi_offset 4, -12
 2867              		.cfi_offset 5, -8
 2868              		.cfi_offset 14, -4
 2869 0008 83B0     		sub	sp, sp, #12
 2870              		.cfi_def_cfa_offset 24
 2871 000a 0446     		mov	r4, r0
 2872 000c 0D46     		mov	r5, r1
  62:Lib/soes/src/esc.c ****    an = as;
 2873              		.loc 1 62 4 is_stmt 1 view .LVU764
  62:Lib/soes/src/esc.c ****    an = as;
 2874              		.loc 1 62 15 is_stmt 0 view .LVU765
 2875 000e 194A     		ldr	r2, .L238
 2876 0010 B2F88030 		ldrh	r3, [r2, #128]
  62:Lib/soes/src/esc.c ****    an = as;
 2877              		.loc 1 62 25 view .LVU766
 2878 0014 03F00F03 		and	r3, r3, #15
  62:Lib/soes/src/esc.c ****    an = as;
 2879              		.loc 1 62 7 view .LVU767
 2880 0018 8DF80630 		strb	r3, [sp, #6]
  63:Lib/soes/src/esc.c ****    /* Set the state transition, new state in high bits and old in bits  */
 2881              		.loc 1 63 4 is_stmt 1 view .LVU768
  63:Lib/soes/src/esc.c ****    /* Set the state transition, new state in high bits and old in bits  */
 2882              		.loc 1 63 7 is_stmt 0 view .LVU769
 2883 001c 8DF80730 		strb	r3, [sp, #7]
  65:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
 2884              		.loc 1 65 4 is_stmt 1 view .LVU770
  65:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
 2885              		.loc 1 65 58 is_stmt 0 view .LVU771
 2886 0020 43EA0013 		orr	r3, r3, r0, lsl #4
  65:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
 2887              		.loc 1 65 7 view .LVU772
 2888 0024 8DF80630 		strb	r3, [sp, #6]
  67:Lib/soes/src/esc.c ****    {
 2889              		.loc 1 67 4 is_stmt 1 view .LVU773
  67:Lib/soes/src/esc.c ****    {
 2890              		.loc 1 67 14 is_stmt 0 view .LVU774
 2891 0028 D36A     		ldr	r3, [r2, #44]
  67:Lib/soes/src/esc.c ****    {
 2892              		.loc 1 67 7 view .LVU775
 2893 002a 23B1     		cbz	r3, .L230
  69:Lib/soes/src/esc.c ****    }
 2894              		.loc 1 69 7 is_stmt 1 view .LVU776
 2895 002c 0DF10701 		add	r1, sp, #7
 2896              	.LVL195:
  69:Lib/soes/src/esc.c ****    }
ARM GAS  /tmp/ccoKziDo.s 			page 82


 2897              		.loc 1 69 7 is_stmt 0 view .LVU777
 2898 0030 0DF10600 		add	r0, sp, #6
 2899              	.LVL196:
  69:Lib/soes/src/esc.c ****    }
 2900              		.loc 1 69 7 view .LVU778
 2901 0034 9847     		blx	r3
 2902              	.LVL197:
 2903              	.L230:
  72:Lib/soes/src/esc.c ****    {
 2904              		.loc 1 72 4 is_stmt 1 view .LVU779
  72:Lib/soes/src/esc.c ****    {
 2905              		.loc 1 72 9 is_stmt 0 view .LVU780
 2906 0036 BFF35B8F 		dmb	ish
 2907 003a 0F4B     		ldr	r3, .L238+4
 2908 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2909 003e BFF35B8F 		dmb	ish
  72:Lib/soes/src/esc.c ****    {
 2910              		.loc 1 72 7 view .LVU781
 2911 0042 13F0020F 		tst	r3, #2
 2912 0046 11D1     		bne	.L237
 2913              	.L231:
  76:Lib/soes/src/esc.c ****    ESC_ALstatus(status);
 2914              		.loc 1 76 4 is_stmt 1 view .LVU782
 2915 0048 2846     		mov	r0, r5
 2916 004a FFF7FEFF 		bl	ESC_ALerror
 2917              	.LVL198:
  77:Lib/soes/src/esc.c ****    an = status;
 2918              		.loc 1 77 4 view .LVU783
 2919 004e 2046     		mov	r0, r4
 2920 0050 FFF7FEFF 		bl	ESC_ALstatus
 2921              	.LVL199:
  78:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
 2922              		.loc 1 78 4 view .LVU784
  78:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
 2923              		.loc 1 78 7 is_stmt 0 view .LVU785
 2924 0054 8DF80740 		strb	r4, [sp, #7]
  80:Lib/soes/src/esc.c ****    {
 2925              		.loc 1 80 4 is_stmt 1 view .LVU786
  80:Lib/soes/src/esc.c ****    {
 2926              		.loc 1 80 14 is_stmt 0 view .LVU787
 2927 0058 064B     		ldr	r3, .L238
 2928 005a 1B6B     		ldr	r3, [r3, #48]
  80:Lib/soes/src/esc.c ****    {
 2929              		.loc 1 80 7 view .LVU788
 2930 005c 23B1     		cbz	r3, .L227
  82:Lib/soes/src/esc.c ****    }
 2931              		.loc 1 82 7 is_stmt 1 view .LVU789
 2932 005e 0DF10701 		add	r1, sp, #7
 2933 0062 0DF10600 		add	r0, sp, #6
 2934 0066 9847     		blx	r3
 2935              	.LVL200:
 2936              	.L227:
  84:Lib/soes/src/esc.c **** 
 2937              		.loc 1 84 1 is_stmt 0 view .LVU790
 2938 0068 03B0     		add	sp, sp, #12
 2939              		.cfi_remember_state
 2940              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccoKziDo.s 			page 83


 2941              		@ sp needed
 2942 006a 30BD     		pop	{r4, r5, pc}
 2943              	.L237:
 2944              		.cfi_restore_state
  74:Lib/soes/src/esc.c ****    }
 2945              		.loc 1 74 7 is_stmt 1 view .LVU791
 2946 006c FFF7FEFF 		bl	ESC_stopoutput
 2947              	.LVL201:
 2948 0070 EAE7     		b	.L231
 2949              	.LVL202:
 2950              	.L234:
 2951              		.cfi_def_cfa_offset 0
 2952              		.cfi_restore 4
 2953              		.cfi_restore 5
 2954              		.cfi_restore 14
  74:Lib/soes/src/esc.c ****    }
 2955              		.loc 1 74 7 is_stmt 0 view .LVU792
 2956 0072 7047     		bx	lr
 2957              	.L239:
 2958              		.align	2
 2959              	.L238:
 2960 0074 00000000 		.word	ESCvar
 2961 0078 E9000000 		.word	ESCvar+233
 2962              		.cfi_endproc
 2963              	.LFE2:
 2965              		.section	.text.ESC_sm_act_event,"ax",%progbits
 2966              		.align	1
 2967              		.global	ESC_sm_act_event
 2968              		.syntax unified
 2969              		.thumb
 2970              		.thumb_func
 2972              	ESC_sm_act_event:
 2973              	.LFB35:
 912:Lib/soes/src/esc.c ****    uint8_t ac, an, as, ax, ax23;
 2974              		.loc 1 912 1 is_stmt 1 view -0
 2975              		.cfi_startproc
 2976              		@ args = 0, pretend = 0, frame = 0
 2977              		@ frame_needed = 0, uses_anonymous_args = 0
 2978 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2979              		.cfi_def_cfa_offset 24
 2980              		.cfi_offset 3, -24
 2981              		.cfi_offset 4, -20
 2982              		.cfi_offset 5, -16
 2983              		.cfi_offset 6, -12
 2984              		.cfi_offset 7, -8
 2985              		.cfi_offset 14, -4
 913:Lib/soes/src/esc.c **** 
 2986              		.loc 1 913 4 view .LVU794
 916:Lib/soes/src/esc.c ****    {
 2987              		.loc 1 916 4 view .LVU795
 916:Lib/soes/src/esc.c ****    {
 2988              		.loc 1 916 15 is_stmt 0 view .LVU796
 2989 0002 424B     		ldr	r3, .L255
 2990 0004 D3F8E430 		ldr	r3, [r3, #228]
 916:Lib/soes/src/esc.c ****    {
 2991              		.loc 1 916 7 view .LVU797
 2992 0008 13F0100F 		tst	r3, #16
ARM GAS  /tmp/ccoKziDo.s 			page 84


 2993 000c 34D0     		beq	.L240
 923:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 2994              		.loc 1 923 4 is_stmt 1 view .LVU798
 923:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 2995              		.loc 1 923 15 is_stmt 0 view .LVU799
 2996 000e 3F4B     		ldr	r3, .L255
 923:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 2997              		.loc 1 923 26 view .LVU800
 2998 0010 93F88220 		ldrb	r2, [r3, #130]	@ zero_extendqisi2
 923:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 2999              		.loc 1 923 7 view .LVU801
 3000 0014 02F01F05 		and	r5, r2, #31
 3001              	.LVL203:
 924:Lib/soes/src/esc.c ****    an = as;
 3002              		.loc 1 924 4 is_stmt 1 view .LVU802
 924:Lib/soes/src/esc.c ****    an = as;
 3003              		.loc 1 924 25 is_stmt 0 view .LVU803
 3004 0018 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 924:Lib/soes/src/esc.c ****    an = as;
 3005              		.loc 1 924 7 view .LVU804
 3006 001c 03F01F04 		and	r4, r3, #31
 3007              	.LVL204:
 925:Lib/soes/src/esc.c ****    if (((ac & ESCerror) || (ac == ESCinit)))
 3008              		.loc 1 925 4 is_stmt 1 view .LVU805
 926:Lib/soes/src/esc.c ****    {
 3009              		.loc 1 926 4 view .LVU806
 926:Lib/soes/src/esc.c ****    {
 3010              		.loc 1 926 7 is_stmt 0 view .LVU807
 3011 0020 12F0100F 		tst	r2, #16
 3012 0024 03D1     		bne	.L242
 926:Lib/soes/src/esc.c ****    {
 3013              		.loc 1 926 25 discriminator 1 view .LVU808
 3014 0026 012D     		cmp	r5, #1
 3015 0028 01D0     		beq	.L242
 925:Lib/soes/src/esc.c ****    if (((ac & ESCerror) || (ac == ESCinit)))
 3016              		.loc 1 925 7 view .LVU809
 3017 002a 2646     		mov	r6, r4
 3018 002c 03E0     		b	.L243
 3019              	.L242:
 929:Lib/soes/src/esc.c ****       an &= ESCREG_AL_ERRACKMASK;
 3020              		.loc 1 929 7 is_stmt 1 view .LVU810
 929:Lib/soes/src/esc.c ****       an &= ESCREG_AL_ERRACKMASK;
 3021              		.loc 1 929 10 is_stmt 0 view .LVU811
 3022 002e 02F00F05 		and	r5, r2, #15
 3023              	.LVL205:
 930:Lib/soes/src/esc.c ****    }
 3024              		.loc 1 930 7 is_stmt 1 view .LVU812
 930:Lib/soes/src/esc.c ****    }
 3025              		.loc 1 930 10 is_stmt 0 view .LVU813
 3026 0032 03F00F06 		and	r6, r3, #15
 3027              	.LVL206:
 3028              	.L243:
 935:Lib/soes/src/esc.c ****        ((as == ESCboot) == 0) && ESCvar.MBXrun)
 3029              		.loc 1 935 4 is_stmt 1 view .LVU814
 935:Lib/soes/src/esc.c ****        ((as == ESCboot) == 0) && ESCvar.MBXrun)
 3030              		.loc 1 935 7 is_stmt 0 view .LVU815
 3031 0036 13F00E0F 		tst	r3, #14
ARM GAS  /tmp/ccoKziDo.s 			page 85


 3032 003a 05D0     		beq	.L244
 935:Lib/soes/src/esc.c ****        ((as == ESCboot) == 0) && ESCvar.MBXrun)
 3033              		.loc 1 935 40 discriminator 1 view .LVU816
 3034 003c 032C     		cmp	r4, #3
 3035 003e 03D0     		beq	.L244
 936:Lib/soes/src/esc.c ****    {
 3036              		.loc 1 936 40 view .LVU817
 3037 0040 324B     		ldr	r3, .L255
 3038 0042 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 936:Lib/soes/src/esc.c ****    {
 3039              		.loc 1 936 31 view .LVU818
 3040 0046 C3B9     		cbnz	r3, .L252
 3041              	.L244:
 986:Lib/soes/src/esc.c ****       ESC_SMack (1);
 3042              		.loc 1 986 7 is_stmt 1 view .LVU819
 3043 0048 0020     		movs	r0, #0
 3044 004a FFF7FEFF 		bl	ESC_SMack
 3045              	.LVL207:
 987:Lib/soes/src/esc.c ****       ESC_SMack (2);
 3046              		.loc 1 987 7 view .LVU820
 3047 004e 0120     		movs	r0, #1
 3048 0050 FFF7FEFF 		bl	ESC_SMack
 3049              	.LVL208:
 988:Lib/soes/src/esc.c ****       ESC_SMack (3);
 3050              		.loc 1 988 7 view .LVU821
 3051 0054 0220     		movs	r0, #2
 3052 0056 FFF7FEFF 		bl	ESC_SMack
 3053              	.LVL209:
 989:Lib/soes/src/esc.c ****       ESC_SMack (4);
 3054              		.loc 1 989 7 view .LVU822
 3055 005a 0320     		movs	r0, #3
 3056 005c FFF7FEFF 		bl	ESC_SMack
 3057              	.LVL210:
 990:Lib/soes/src/esc.c ****       ESC_SMack (5);
 3058              		.loc 1 990 7 view .LVU823
 3059 0060 0420     		movs	r0, #4
 3060 0062 FFF7FEFF 		bl	ESC_SMack
 3061              	.LVL211:
 991:Lib/soes/src/esc.c ****       ESC_SMack (6);
 3062              		.loc 1 991 7 view .LVU824
 3063 0066 0520     		movs	r0, #5
 3064 0068 FFF7FEFF 		bl	ESC_SMack
 3065              	.LVL212:
 992:Lib/soes/src/esc.c ****       ESC_SMack (7);
 3066              		.loc 1 992 7 view .LVU825
 3067 006c 0620     		movs	r0, #6
 3068 006e FFF7FEFF 		bl	ESC_SMack
 3069              	.LVL213:
 993:Lib/soes/src/esc.c ****    }
 3070              		.loc 1 993 7 view .LVU826
 3071 0072 0720     		movs	r0, #7
 3072 0074 FFF7FEFF 		bl	ESC_SMack
 3073              	.LVL214:
 3074              	.L240:
 995:Lib/soes/src/esc.c **** 
 3075              		.loc 1 995 1 is_stmt 0 view .LVU827
 3076 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccoKziDo.s 			page 86


 3077              	.LVL215:
 3078              	.L252:
 942:Lib/soes/src/esc.c ****       ax23 = ESC_checkSM23 (as);
 3079              		.loc 1 942 7 is_stmt 1 view .LVU828
 942:Lib/soes/src/esc.c ****       ax23 = ESC_checkSM23 (as);
 3080              		.loc 1 942 12 is_stmt 0 view .LVU829
 3081 007a 2046     		mov	r0, r4
 3082 007c FFF7FEFF 		bl	ESC_checkmbx
 3083              	.LVL216:
 3084 0080 0746     		mov	r7, r0
 3085              	.LVL217:
 943:Lib/soes/src/esc.c ****       if ((an & ESCerror) && ((ac & ESCerror) == 0))
 3086              		.loc 1 943 7 is_stmt 1 view .LVU830
 943:Lib/soes/src/esc.c ****       if ((an & ESCerror) && ((ac & ESCerror) == 0))
 3087              		.loc 1 943 14 is_stmt 0 view .LVU831
 3088 0082 2046     		mov	r0, r4
 3089 0084 FFF7FEFF 		bl	ESC_checkSM23
 3090              	.LVL218:
 3091 0088 0446     		mov	r4, r0
 3092              	.LVL219:
 944:Lib/soes/src/esc.c ****       {
 3093              		.loc 1 944 7 is_stmt 1 view .LVU832
 944:Lib/soes/src/esc.c ****       {
 3094              		.loc 1 944 10 is_stmt 0 view .LVU833
 3095 008a 16F0100F 		tst	r6, #16
 3096 008e 02D0     		beq	.L245
 944:Lib/soes/src/esc.c ****       {
 3097              		.loc 1 944 27 discriminator 1 view .LVU834
 3098 0090 15F0100F 		tst	r5, #16
 3099 0094 F0D0     		beq	.L240
 3100              	.L245:
 951:Lib/soes/src/esc.c ****       {
 3101              		.loc 1 951 12 is_stmt 1 view .LVU835
 951:Lib/soes/src/esc.c ****       {
 3102              		.loc 1 951 15 is_stmt 0 view .LVU836
 3103 0096 112F     		cmp	r7, #17
 3104 0098 1AD0     		beq	.L253
 969:Lib/soes/src/esc.c ****       {
 3105              		.loc 1 969 12 is_stmt 1 view .LVU837
 969:Lib/soes/src/esc.c ****       {
 3106              		.loc 1 969 16 is_stmt 0 view .LVU838
 3107 009a BFF35B8F 		dmb	ish
 3108 009e 1C4B     		ldr	r3, .L255+4
 3109 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3110 00a2 BFF35B8F 		dmb	ish
 969:Lib/soes/src/esc.c ****       {
 3111              		.loc 1 969 15 view .LVU839
 3112 00a6 002B     		cmp	r3, #0
 3113 00a8 E6D0     		beq	.L240
 969:Lib/soes/src/esc.c ****       {
 3114              		.loc 1 969 48 discriminator 1 view .LVU840
 3115 00aa 122C     		cmp	r4, #18
 3116 00ac E4D1     		bne	.L240
 971:Lib/soes/src/esc.c ****          ESC_stopinput ();
 3117              		.loc 1 971 10 is_stmt 1 view .LVU841
 3118 00ae FFF7FEFF 		bl	ESC_stopoutput
 3119              	.LVL220:
ARM GAS  /tmp/ccoKziDo.s 			page 87


 972:Lib/soes/src/esc.c ****          if (ESCvar.SMtestresult & SMRESULT_ERRSM3)
 3120              		.loc 1 972 10 view .LVU842
 3121 00b2 FFF7FEFF 		bl	ESC_stopinput
 3122              	.LVL221:
 973:Lib/soes/src/esc.c ****          {
 3123              		.loc 1 973 10 view .LVU843
 973:Lib/soes/src/esc.c ****          {
 3124              		.loc 1 973 20 is_stmt 0 view .LVU844
 3125 00b6 154B     		ldr	r3, .L255
 3126 00b8 93F8B430 		ldrb	r3, [r3, #180]	@ zero_extendqisi2
 973:Lib/soes/src/esc.c ****          {
 3127              		.loc 1 973 13 view .LVU845
 3128 00bc 13F0080F 		tst	r3, #8
 3129 00c0 1FD0     		beq	.L248
 975:Lib/soes/src/esc.c ****          }
 3130              		.loc 1 975 13 is_stmt 1 view .LVU846
 3131 00c2 1E20     		movs	r0, #30
 3132 00c4 FFF7FEFF 		bl	ESC_ALerror
 3133              	.LVL222:
 3134              	.L249:
 981:Lib/soes/src/esc.c ****       }
 3135              		.loc 1 981 10 view .LVU847
 3136 00c8 2046     		mov	r0, r4
 3137 00ca FFF7FEFF 		bl	ESC_ALstatus
 3138              	.LVL223:
 3139 00ce D3E7     		b	.L240
 3140              	.L253:
 954:Lib/soes/src/esc.c ****          {
 3141              		.loc 1 954 10 view .LVU848
 954:Lib/soes/src/esc.c ****          {
 3142              		.loc 1 954 14 is_stmt 0 view .LVU849
 3143 00d0 BFF35B8F 		dmb	ish
 3144 00d4 0E4B     		ldr	r3, .L255+4
 3145 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3146 00d8 BFF35B8F 		dmb	ish
 954:Lib/soes/src/esc.c ****          {
 3147              		.loc 1 954 13 view .LVU850
 3148 00dc 63B9     		cbnz	r3, .L254
 3149              	.L247:
 960:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDMBXCONFIG);
 3150              		.loc 1 960 10 is_stmt 1 view .LVU851
 3151 00de FFF7FEFF 		bl	ESC_stopmbx
 3152              	.LVL224:
 961:Lib/soes/src/esc.c ****          ESCvar.MBXrun = 0;
 3153              		.loc 1 961 10 view .LVU852
 3154 00e2 1620     		movs	r0, #22
 3155 00e4 FFF7FEFF 		bl	ESC_ALerror
 3156              	.LVL225:
 962:Lib/soes/src/esc.c ****          ESC_ALstatus (ax);
 3157              		.loc 1 962 10 view .LVU853
 962:Lib/soes/src/esc.c ****          ESC_ALstatus (ax);
 3158              		.loc 1 962 24 is_stmt 0 view .LVU854
 3159 00e8 084B     		ldr	r3, .L255
 3160 00ea 0022     		movs	r2, #0
 3161 00ec 83F86820 		strb	r2, [r3, #104]
 963:Lib/soes/src/esc.c ****          return;
 3162              		.loc 1 963 10 is_stmt 1 view .LVU855
ARM GAS  /tmp/ccoKziDo.s 			page 88


 3163 00f0 3846     		mov	r0, r7
 3164 00f2 FFF7FEFF 		bl	ESC_ALstatus
 3165              	.LVL226:
 964:Lib/soes/src/esc.c ****       }
 3166              		.loc 1 964 10 view .LVU856
 3167 00f6 BFE7     		b	.L240
 3168              	.L254:
 956:Lib/soes/src/esc.c ****             ESC_stopinput ();
 3169              		.loc 1 956 13 view .LVU857
 3170 00f8 FFF7FEFF 		bl	ESC_stopoutput
 3171              	.LVL227:
 957:Lib/soes/src/esc.c ****          }
 3172              		.loc 1 957 13 view .LVU858
 3173 00fc FFF7FEFF 		bl	ESC_stopinput
 3174              	.LVL228:
 3175 0100 EDE7     		b	.L247
 3176              	.L248:
 979:Lib/soes/src/esc.c ****          }
 3177              		.loc 1 979 13 view .LVU859
 3178 0102 1D20     		movs	r0, #29
 3179 0104 FFF7FEFF 		bl	ESC_ALerror
 3180              	.LVL229:
 3181 0108 DEE7     		b	.L249
 3182              	.L256:
 3183 010a 00BF     		.align	2
 3184              	.L255:
 3185 010c 00000000 		.word	ESCvar
 3186 0110 E9000000 		.word	ESCvar+233
 3187              		.cfi_endproc
 3188              	.LFE35:
 3190              		.section	.text.ESC_state,"ax",%progbits
 3191              		.align	1
 3192              		.global	ESC_state
 3193              		.syntax unified
 3194              		.thumb
 3195              		.thumb_func
 3197              	ESC_state:
 3198              	.LFB38:
1047:Lib/soes/src/esc.c **** 
1048:Lib/soes/src/esc.c **** #ifdef ESC_DEBUG
1049:Lib/soes/src/esc.c **** static char * ESC_state_to_string (uint8_t ESC_state)
1050:Lib/soes/src/esc.c **** {
1051:Lib/soes/src/esc.c ****    switch (ESC_state)
1052:Lib/soes/src/esc.c ****    {
1053:Lib/soes/src/esc.c ****       case ESCinit:   return "Init";
1054:Lib/soes/src/esc.c ****       case ESCpreop:  return "Pre-Operational";
1055:Lib/soes/src/esc.c ****       case ESCboot:   return "Bootstrap";
1056:Lib/soes/src/esc.c ****       case ESCsafeop: return "Safe-Operational";
1057:Lib/soes/src/esc.c ****       case ESCop:     return "Operational";
1058:Lib/soes/src/esc.c ****       case ESCerror:  return "Error";
1059:Lib/soes/src/esc.c ****    }
1060:Lib/soes/src/esc.c **** 
1061:Lib/soes/src/esc.c ****    return "Unknown";
1062:Lib/soes/src/esc.c **** }
1063:Lib/soes/src/esc.c **** #endif
1064:Lib/soes/src/esc.c **** 
1065:Lib/soes/src/esc.c **** /** The state handler acting on ALControl Bit(0)
ARM GAS  /tmp/ccoKziDo.s 			page 89


1066:Lib/soes/src/esc.c ****  * events in the Al Event Request register 0x220.
1067:Lib/soes/src/esc.c ****  *
1068:Lib/soes/src/esc.c ****  */
1069:Lib/soes/src/esc.c **** uint8_t as_all = 0x00;
1070:Lib/soes/src/esc.c **** void ESC_state (void)
1071:Lib/soes/src/esc.c **** {
 3199              		.loc 1 1071 1 view -0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 8
 3202              		@ frame_needed = 0, uses_anonymous_args = 0
1072:Lib/soes/src/esc.c ****    uint8_t ac, an, as;
 3203              		.loc 1 1072 4 view .LVU861
1073:Lib/soes/src/esc.c **** 
1074:Lib/soes/src/esc.c ****    /* Do we have a state change request pending */
1075:Lib/soes/src/esc.c ****    if (ESCvar.ALevent & ESCREG_ALEVENT_CONTROL)
 3204              		.loc 1 1075 4 view .LVU862
 3205              		.loc 1 1075 14 is_stmt 0 view .LVU863
 3206 0000 A34B     		ldr	r3, .L303
 3207 0002 D3F8E430 		ldr	r3, [r3, #228]
 3208              		.loc 1 1075 7 view .LVU864
 3209 0006 13F0010F 		tst	r3, #1
 3210 000a 00D1     		bne	.L295
 3211 000c 7047     		bx	lr
 3212              	.L295:
1071:Lib/soes/src/esc.c ****    uint8_t ac, an, as;
 3213              		.loc 1 1071 1 view .LVU865
 3214 000e 30B5     		push	{r4, r5, lr}
 3215              		.cfi_def_cfa_offset 12
 3216              		.cfi_offset 4, -12
 3217              		.cfi_offset 5, -8
 3218              		.cfi_offset 14, -4
 3219 0010 83B0     		sub	sp, sp, #12
 3220              		.cfi_def_cfa_offset 24
1076:Lib/soes/src/esc.c ****    {
1077:Lib/soes/src/esc.c ****       ESC_read (ESCREG_ALCONTROL, (void *) &ESCvar.ALcontrol,
 3221              		.loc 1 1077 7 is_stmt 1 view .LVU866
 3222 0012 A04C     		ldr	r4, .L303+4
 3223 0014 0222     		movs	r2, #2
 3224 0016 2146     		mov	r1, r4
 3225 0018 4FF49070 		mov	r0, #288
 3226 001c FFF7FEFF 		bl	ESC_read
 3227              	.LVL230:
1078:Lib/soes/src/esc.c ****                 sizeof (ESCvar.ALcontrol));
1079:Lib/soes/src/esc.c ****       ESCvar.ALcontrol = etohs (ESCvar.ALcontrol);
 3228              		.loc 1 1079 7 view .LVU867
 3229              		.loc 1 1079 26 is_stmt 0 view .LVU868
 3230 0020 2146     		mov	r1, r4
1080:Lib/soes/src/esc.c ****    }
1081:Lib/soes/src/esc.c ****    else
1082:Lib/soes/src/esc.c ****    {
1083:Lib/soes/src/esc.c ****       /* nothing to do */
1084:Lib/soes/src/esc.c ****       return;
1085:Lib/soes/src/esc.c ****    }
1086:Lib/soes/src/esc.c ****    /* Mask state request bits + Error ACK */
1087:Lib/soes/src/esc.c ****    ac = ESCvar.ALcontrol & ESCREG_AL_STATEMASK;
 3231              		.loc 1 1087 4 is_stmt 1 view .LVU869
 3232              		.loc 1 1087 26 is_stmt 0 view .LVU870
ARM GAS  /tmp/ccoKziDo.s 			page 90


 3233 0022 11F88229 		ldrb	r2, [r1], #-130	@ zero_extendqisi2
 3234              		.loc 1 1087 7 view .LVU871
 3235 0026 02F01F04 		and	r4, r2, #31
 3236              	.LVL231:
1088:Lib/soes/src/esc.c ****    as = ESCvar.ALstatus & ESCREG_AL_STATEMASK;
 3237              		.loc 1 1088 4 is_stmt 1 view .LVU872
 3238              		.loc 1 1088 15 is_stmt 0 view .LVU873
 3239 002a B1F88030 		ldrh	r3, [r1, #128]
 3240              		.loc 1 1088 25 view .LVU874
 3241 002e 03F01F03 		and	r3, r3, #31
 3242              		.loc 1 1088 7 view .LVU875
 3243 0032 8DF80630 		strb	r3, [sp, #6]
1089:Lib/soes/src/esc.c ****    an = as;
 3244              		.loc 1 1089 4 is_stmt 1 view .LVU876
 3245              		.loc 1 1089 7 is_stmt 0 view .LVU877
 3246 0036 8DF80730 		strb	r3, [sp, #7]
1090:Lib/soes/src/esc.c ****    if (((ac & ESCerror) || (ac == ESCinit)))
 3247              		.loc 1 1090 4 is_stmt 1 view .LVU878
 3248              		.loc 1 1090 7 is_stmt 0 view .LVU879
 3249 003a 12F0100F 		tst	r2, #16
 3250 003e 01D1     		bne	.L259
 3251              		.loc 1 1090 25 discriminator 1 view .LVU880
 3252 0040 012C     		cmp	r4, #1
 3253 0042 05D1     		bne	.L260
 3254              	.L259:
1091:Lib/soes/src/esc.c ****    {
1092:Lib/soes/src/esc.c ****       /* if error bit confirmed reset */
1093:Lib/soes/src/esc.c ****       ac &= ESCREG_AL_ERRACKMASK;
 3255              		.loc 1 1093 7 is_stmt 1 view .LVU881
 3256              		.loc 1 1093 10 is_stmt 0 view .LVU882
 3257 0044 02F00F04 		and	r4, r2, #15
 3258              	.LVL232:
1094:Lib/soes/src/esc.c ****       an &= ESCREG_AL_ERRACKMASK;
 3259              		.loc 1 1094 7 is_stmt 1 view .LVU883
 3260              		.loc 1 1094 10 is_stmt 0 view .LVU884
 3261 0048 03F00F02 		and	r2, r3, #15
 3262 004c 8DF80720 		strb	r2, [sp, #7]
 3263              	.L260:
1095:Lib/soes/src/esc.c ****    }
1096:Lib/soes/src/esc.c **** 
1097:Lib/soes/src/esc.c ****    /* Error state not acked, leave original */
1098:Lib/soes/src/esc.c ****    if ((an & ESCerror) && ((ac & ESCerror) == 0))
 3264              		.loc 1 1098 4 is_stmt 1 view .LVU885
 3265              		.loc 1 1098 12 is_stmt 0 view .LVU886
 3266 0050 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 3267              		.loc 1 1098 7 view .LVU887
 3268 0054 12F0100F 		tst	r2, #16
 3269 0058 03D0     		beq	.L261
 3270              		.loc 1 1098 24 discriminator 1 view .LVU888
 3271 005a 14F0100F 		tst	r4, #16
 3272 005e 00F0B880 		beq	.L257
 3273              	.L261:
1099:Lib/soes/src/esc.c ****    {
1100:Lib/soes/src/esc.c ****       return;
1101:Lib/soes/src/esc.c ****    }
1102:Lib/soes/src/esc.c **** 
1103:Lib/soes/src/esc.c ****    /* Mask high bits ALcommand, low bits ALstatus */
ARM GAS  /tmp/ccoKziDo.s 			page 91


1104:Lib/soes/src/esc.c ****    as = (uint8_t)((ac << 4) | (as & 0x0f));
 3274              		.loc 1 1104 4 is_stmt 1 view .LVU889
 3275              		.loc 1 1104 35 is_stmt 0 view .LVU890
 3276 0062 03F00F03 		and	r3, r3, #15
 3277              		.loc 1 1104 29 view .LVU891
 3278 0066 43EA0413 		orr	r3, r3, r4, lsl #4
 3279              		.loc 1 1104 7 view .LVU892
 3280 006a 8DF80630 		strb	r3, [sp, #6]
1105:Lib/soes/src/esc.c **** 
1106:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
1107:Lib/soes/src/esc.c ****    if (ESCvar.pre_state_change_hook != NULL)
 3281              		.loc 1 1107 4 is_stmt 1 view .LVU893
 3282              		.loc 1 1107 14 is_stmt 0 view .LVU894
 3283 006e 884B     		ldr	r3, .L303
 3284 0070 DB6A     		ldr	r3, [r3, #44]
 3285              		.loc 1 1107 7 view .LVU895
 3286 0072 23B1     		cbz	r3, .L262
1108:Lib/soes/src/esc.c ****    {
1109:Lib/soes/src/esc.c ****       ESCvar.pre_state_change_hook (&as, &an);
 3287              		.loc 1 1109 7 is_stmt 1 view .LVU896
 3288 0074 0DF10701 		add	r1, sp, #7
 3289 0078 0DF10600 		add	r0, sp, #6
 3290 007c 9847     		blx	r3
 3291              	.LVL233:
 3292              	.L262:
1110:Lib/soes/src/esc.c ****    }
1111:Lib/soes/src/esc.c **** 
1112:Lib/soes/src/esc.c ****    /* Switch through the state change requested via AlControl from
1113:Lib/soes/src/esc.c ****     * current state read in AL status
1114:Lib/soes/src/esc.c ****     */
1115:Lib/soes/src/esc.c **** 
1116:Lib/soes/src/esc.c ****    //
1117:Lib/soes/src/esc.c ****       as_all = as;
 3293              		.loc 1 1117 7 view .LVU897
 3294              		.loc 1 1117 14 is_stmt 0 view .LVU898
 3295 007e 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 3296 0082 854A     		ldr	r2, .L303+8
 3297 0084 1370     		strb	r3, [r2]
1118:Lib/soes/src/esc.c ****    //
1119:Lib/soes/src/esc.c ****    switch (as)
 3298              		.loc 1 1119 4 is_stmt 1 view .LVU899
 3299 0086 113B     		subs	r3, r3, #17
 3300 0088 772B     		cmp	r3, #119
 3301 008a 00F25D81 		bhi	.L263
 3302 008e DFE813F0 		tbh	[pc, r3, lsl #1]
 3303              	.L265:
 3304 0092 7F00     		.2byte	(.L264-.L265)/2
 3305 0094 C200     		.2byte	(.L281-.L265)/2
 3306 0096 C800     		.2byte	(.L280-.L265)/2
 3307 0098 BA00     		.2byte	(.L279-.L265)/2
 3308 009a 5B01     		.2byte	(.L263-.L265)/2
 3309 009c 5B01     		.2byte	(.L263-.L265)/2
 3310 009e 5B01     		.2byte	(.L263-.L265)/2
 3311 00a0 B000     		.2byte	(.L278-.L265)/2
 3312 00a2 5B01     		.2byte	(.L263-.L265)/2
 3313 00a4 5B01     		.2byte	(.L263-.L265)/2
 3314 00a6 5B01     		.2byte	(.L263-.L265)/2
ARM GAS  /tmp/ccoKziDo.s 			page 92


 3315 00a8 5B01     		.2byte	(.L263-.L265)/2
 3316 00aa 5B01     		.2byte	(.L263-.L265)/2
 3317 00ac 5B01     		.2byte	(.L263-.L265)/2
 3318 00ae 5B01     		.2byte	(.L263-.L265)/2
 3319 00b0 5B01     		.2byte	(.L263-.L265)/2
 3320 00b2 7800     		.2byte	(.L277-.L265)/2
 3321 00b4 7F00     		.2byte	(.L264-.L265)/2
 3322 00b6 CE00     		.2byte	(.L267-.L265)/2
 3323 00b8 2A01     		.2byte	(.L276-.L265)/2
 3324 00ba 5B01     		.2byte	(.L263-.L265)/2
 3325 00bc 5B01     		.2byte	(.L263-.L265)/2
 3326 00be 5B01     		.2byte	(.L263-.L265)/2
 3327 00c0 2201     		.2byte	(.L275-.L265)/2
 3328 00c2 5B01     		.2byte	(.L263-.L265)/2
 3329 00c4 5B01     		.2byte	(.L263-.L265)/2
 3330 00c6 5B01     		.2byte	(.L263-.L265)/2
 3331 00c8 5B01     		.2byte	(.L263-.L265)/2
 3332 00ca 5B01     		.2byte	(.L263-.L265)/2
 3333 00cc 5B01     		.2byte	(.L263-.L265)/2
 3334 00ce 5B01     		.2byte	(.L263-.L265)/2
 3335 00d0 5B01     		.2byte	(.L263-.L265)/2
 3336 00d2 A200     		.2byte	(.L274-.L265)/2
 3337 00d4 CE00     		.2byte	(.L267-.L265)/2
 3338 00d6 A200     		.2byte	(.L274-.L265)/2
 3339 00d8 3001     		.2byte	(.L273-.L265)/2
 3340 00da 5B01     		.2byte	(.L263-.L265)/2
 3341 00dc 5B01     		.2byte	(.L263-.L265)/2
 3342 00de 5B01     		.2byte	(.L263-.L265)/2
 3343 00e0 3D01     		.2byte	(.L272-.L265)/2
 3344 00e2 5B01     		.2byte	(.L263-.L265)/2
 3345 00e4 5B01     		.2byte	(.L263-.L265)/2
 3346 00e6 5B01     		.2byte	(.L263-.L265)/2
 3347 00e8 5B01     		.2byte	(.L263-.L265)/2
 3348 00ea 5B01     		.2byte	(.L263-.L265)/2
 3349 00ec 5B01     		.2byte	(.L263-.L265)/2
 3350 00ee 5B01     		.2byte	(.L263-.L265)/2
 3351 00f0 5B01     		.2byte	(.L263-.L265)/2
 3352 00f2 AA00     		.2byte	(.L269-.L265)/2
 3353 00f4 D500     		.2byte	(.L271-.L265)/2
 3354 00f6 CE00     		.2byte	(.L267-.L265)/2
 3355 00f8 D500     		.2byte	(.L271-.L265)/2
 3356 00fa 5B01     		.2byte	(.L263-.L265)/2
 3357 00fc 5B01     		.2byte	(.L263-.L265)/2
 3358 00fe 5B01     		.2byte	(.L263-.L265)/2
 3359 0100 5501     		.2byte	(.L270-.L265)/2
 3360 0102 5B01     		.2byte	(.L263-.L265)/2
 3361 0104 5B01     		.2byte	(.L263-.L265)/2
 3362 0106 5B01     		.2byte	(.L263-.L265)/2
 3363 0108 5B01     		.2byte	(.L263-.L265)/2
 3364 010a 5B01     		.2byte	(.L263-.L265)/2
 3365 010c 5B01     		.2byte	(.L263-.L265)/2
 3366 010e 5B01     		.2byte	(.L263-.L265)/2
 3367 0110 5B01     		.2byte	(.L263-.L265)/2
 3368 0112 5B01     		.2byte	(.L263-.L265)/2
 3369 0114 5B01     		.2byte	(.L263-.L265)/2
 3370 0116 5B01     		.2byte	(.L263-.L265)/2
 3371 0118 5B01     		.2byte	(.L263-.L265)/2
ARM GAS  /tmp/ccoKziDo.s 			page 93


 3372 011a 5B01     		.2byte	(.L263-.L265)/2
 3373 011c 5B01     		.2byte	(.L263-.L265)/2
 3374 011e 5B01     		.2byte	(.L263-.L265)/2
 3375 0120 5B01     		.2byte	(.L263-.L265)/2
 3376 0122 5B01     		.2byte	(.L263-.L265)/2
 3377 0124 5B01     		.2byte	(.L263-.L265)/2
 3378 0126 5B01     		.2byte	(.L263-.L265)/2
 3379 0128 5B01     		.2byte	(.L263-.L265)/2
 3380 012a 5B01     		.2byte	(.L263-.L265)/2
 3381 012c 5B01     		.2byte	(.L263-.L265)/2
 3382 012e 5B01     		.2byte	(.L263-.L265)/2
 3383 0130 5B01     		.2byte	(.L263-.L265)/2
 3384 0132 5B01     		.2byte	(.L263-.L265)/2
 3385 0134 5B01     		.2byte	(.L263-.L265)/2
 3386 0136 5B01     		.2byte	(.L263-.L265)/2
 3387 0138 5B01     		.2byte	(.L263-.L265)/2
 3388 013a 5B01     		.2byte	(.L263-.L265)/2
 3389 013c 5B01     		.2byte	(.L263-.L265)/2
 3390 013e 5B01     		.2byte	(.L263-.L265)/2
 3391 0140 5B01     		.2byte	(.L263-.L265)/2
 3392 0142 5B01     		.2byte	(.L263-.L265)/2
 3393 0144 5B01     		.2byte	(.L263-.L265)/2
 3394 0146 5B01     		.2byte	(.L263-.L265)/2
 3395 0148 5B01     		.2byte	(.L263-.L265)/2
 3396 014a 5B01     		.2byte	(.L263-.L265)/2
 3397 014c 5B01     		.2byte	(.L263-.L265)/2
 3398 014e 5B01     		.2byte	(.L263-.L265)/2
 3399 0150 5B01     		.2byte	(.L263-.L265)/2
 3400 0152 5B01     		.2byte	(.L263-.L265)/2
 3401 0154 5B01     		.2byte	(.L263-.L265)/2
 3402 0156 5B01     		.2byte	(.L263-.L265)/2
 3403 0158 5B01     		.2byte	(.L263-.L265)/2
 3404 015a 5B01     		.2byte	(.L263-.L265)/2
 3405 015c 5B01     		.2byte	(.L263-.L265)/2
 3406 015e 5B01     		.2byte	(.L263-.L265)/2
 3407 0160 5B01     		.2byte	(.L263-.L265)/2
 3408 0162 5B01     		.2byte	(.L263-.L265)/2
 3409 0164 5B01     		.2byte	(.L263-.L265)/2
 3410 0166 5B01     		.2byte	(.L263-.L265)/2
 3411 0168 5B01     		.2byte	(.L263-.L265)/2
 3412 016a 5B01     		.2byte	(.L263-.L265)/2
 3413 016c 5B01     		.2byte	(.L263-.L265)/2
 3414 016e 5B01     		.2byte	(.L263-.L265)/2
 3415 0170 5B01     		.2byte	(.L263-.L265)/2
 3416 0172 AA00     		.2byte	(.L269-.L265)/2
 3417 0174 1B01     		.2byte	(.L268-.L265)/2
 3418 0176 CE00     		.2byte	(.L267-.L265)/2
 3419 0178 3701     		.2byte	(.L266-.L265)/2
 3420 017a 5B01     		.2byte	(.L263-.L265)/2
 3421 017c 5B01     		.2byte	(.L263-.L265)/2
 3422 017e 5B01     		.2byte	(.L263-.L265)/2
 3423 0180 7F00     		.2byte	(.L264-.L265)/2
 3424              		.p2align 1
 3425              	.L277:
1120:Lib/soes/src/esc.c ****    {
1121:Lib/soes/src/esc.c ****       case INIT_TO_INIT:
1122:Lib/soes/src/esc.c ****       case PREOP_TO_PREOP:
ARM GAS  /tmp/ccoKziDo.s 			page 94


1123:Lib/soes/src/esc.c ****       case OP_TO_OP:
1124:Lib/soes/src/esc.c ****       {
1125:Lib/soes/src/esc.c ****          break;
1126:Lib/soes/src/esc.c ****       }
1127:Lib/soes/src/esc.c ****       case INIT_TO_PREOP:
1128:Lib/soes/src/esc.c ****       {
1129:Lib/soes/src/esc.c ****          /* get station address */
1130:Lib/soes/src/esc.c ****          ESC_address ();
 3426              		.loc 1 1130 10 view .LVU900
 3427 0182 FFF7FEFF 		bl	ESC_address
 3428              	.LVL234:
1131:Lib/soes/src/esc.c ****          an = ESC_startmbx (ac);
 3429              		.loc 1 1131 10 view .LVU901
 3430              		.loc 1 1131 15 is_stmt 0 view .LVU902
 3431 0186 2046     		mov	r0, r4
 3432 0188 FFF7FEFF 		bl	ESC_startmbx
 3433              	.LVL235:
 3434              		.loc 1 1131 13 view .LVU903
 3435 018c 8DF80700 		strb	r0, [sp, #7]
1132:Lib/soes/src/esc.c ****          break;
 3436              		.loc 1 1132 10 is_stmt 1 view .LVU904
 3437              	.L264:
1133:Lib/soes/src/esc.c ****       }
1134:Lib/soes/src/esc.c ****       case INIT_TO_BOOT:
1135:Lib/soes/src/esc.c ****       case BOOT_TO_BOOT:
1136:Lib/soes/src/esc.c ****       {
1137:Lib/soes/src/esc.c ****          /* get station address */
1138:Lib/soes/src/esc.c ****          ESC_address ();
1139:Lib/soes/src/esc.c ****          an = ESC_startmbxboot (ac);
1140:Lib/soes/src/esc.c ****          break;
1141:Lib/soes/src/esc.c ****       }
1142:Lib/soes/src/esc.c ****       case INIT_TO_SAFEOP:
1143:Lib/soes/src/esc.c ****       case INIT_TO_OP:
1144:Lib/soes/src/esc.c ****       {
1145:Lib/soes/src/esc.c ****          an = ESCinit | ESCerror;
1146:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
1147:Lib/soes/src/esc.c ****          break;
1148:Lib/soes/src/esc.c ****       }
1149:Lib/soes/src/esc.c ****       case OP_TO_INIT:
1150:Lib/soes/src/esc.c ****       {
1151:Lib/soes/src/esc.c ****          ESC_stopoutput ();
1152:Lib/soes/src/esc.c ****          ESC_stopinput ();
1153:Lib/soes/src/esc.c ****          ESC_stopmbx ();
1154:Lib/soes/src/esc.c ****          an = ESCinit;
1155:Lib/soes/src/esc.c ****          break;
1156:Lib/soes/src/esc.c ****       }
1157:Lib/soes/src/esc.c ****       case SAFEOP_TO_INIT:
1158:Lib/soes/src/esc.c ****       {
1159:Lib/soes/src/esc.c ****          ESC_stopinput ();
1160:Lib/soes/src/esc.c ****          ESC_stopmbx ();
1161:Lib/soes/src/esc.c ****          an = ESCinit;
1162:Lib/soes/src/esc.c ****          break;
1163:Lib/soes/src/esc.c ****       }
1164:Lib/soes/src/esc.c ****       case PREOP_TO_INIT:
1165:Lib/soes/src/esc.c ****       {
1166:Lib/soes/src/esc.c ****          ESC_stopmbx ();
1167:Lib/soes/src/esc.c ****          an = ESCinit;
ARM GAS  /tmp/ccoKziDo.s 			page 95


1168:Lib/soes/src/esc.c ****          break;
1169:Lib/soes/src/esc.c ****       }
1170:Lib/soes/src/esc.c ****       case BOOT_TO_INIT:
1171:Lib/soes/src/esc.c ****       {
1172:Lib/soes/src/esc.c ****          ESC_stopmbx ();
1173:Lib/soes/src/esc.c ****          an = ESCinit;
1174:Lib/soes/src/esc.c ****          break;
1175:Lib/soes/src/esc.c ****       }
1176:Lib/soes/src/esc.c ****       case PREOP_TO_BOOT:
1177:Lib/soes/src/esc.c ****       case BOOT_TO_PREOP:
1178:Lib/soes/src/esc.c ****       case BOOT_TO_SAFEOP:
1179:Lib/soes/src/esc.c ****       case BOOT_TO_OP:
1180:Lib/soes/src/esc.c ****       {
1181:Lib/soes/src/esc.c ****          an = ESCpreop | ESCerror;
1182:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
1183:Lib/soes/src/esc.c ****          break;
1184:Lib/soes/src/esc.c ****       }
1185:Lib/soes/src/esc.c ****       case PREOP_TO_SAFEOP:
1186:Lib/soes/src/esc.c ****       case SAFEOP_TO_SAFEOP:
1187:Lib/soes/src/esc.c ****       {
1188:Lib/soes/src/esc.c ****          ESCvar.ESC_SM2_sml = sizeOfPDO (RX_PDO_OBJIDX, &ESCvar.sm2mappings,
1189:Lib/soes/src/esc.c ****                                          SMmap2, MAX_MAPPINGS_SM2);
1190:Lib/soes/src/esc.c ****          if (ESCvar.sm2mappings < 0)
1191:Lib/soes/src/esc.c ****          {
1192:Lib/soes/src/esc.c ****             an = ESCpreop | ESCerror;
1193:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDOUTPUTSM);
1194:Lib/soes/src/esc.c ****             break;
1195:Lib/soes/src/esc.c ****          }
1196:Lib/soes/src/esc.c **** 
1197:Lib/soes/src/esc.c ****          ESCvar.ESC_SM3_sml = sizeOfPDO (TX_PDO_OBJIDX, &ESCvar.sm3mappings,
1198:Lib/soes/src/esc.c ****                                          SMmap3, MAX_MAPPINGS_SM3);
1199:Lib/soes/src/esc.c ****          if (ESCvar.sm3mappings < 0)
1200:Lib/soes/src/esc.c ****          {
1201:Lib/soes/src/esc.c ****             an = ESCpreop | ESCerror;
1202:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDINPUTSM);
1203:Lib/soes/src/esc.c ****             break;
1204:Lib/soes/src/esc.c ****          }
1205:Lib/soes/src/esc.c **** 
1206:Lib/soes/src/esc.c ****          an = ESC_startinput (ac);
1207:Lib/soes/src/esc.c ****          if (an == ac)
1208:Lib/soes/src/esc.c ****          {
1209:Lib/soes/src/esc.c ****             ESC_SMenable (2);
1210:Lib/soes/src/esc.c ****          }
1211:Lib/soes/src/esc.c ****          break;
1212:Lib/soes/src/esc.c ****       }
1213:Lib/soes/src/esc.c ****       case PREOP_TO_OP:
1214:Lib/soes/src/esc.c ****       {
1215:Lib/soes/src/esc.c ****          an = ESCpreop | ESCerror;
1216:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
1217:Lib/soes/src/esc.c ****          break;
1218:Lib/soes/src/esc.c ****       }
1219:Lib/soes/src/esc.c ****       case OP_TO_PREOP:
1220:Lib/soes/src/esc.c ****       {
1221:Lib/soes/src/esc.c ****          ESC_stopoutput ();
1222:Lib/soes/src/esc.c ****          ESC_stopinput ();
1223:Lib/soes/src/esc.c ****          an = ESCpreop;
1224:Lib/soes/src/esc.c ****          break;
ARM GAS  /tmp/ccoKziDo.s 			page 96


1225:Lib/soes/src/esc.c ****       }
1226:Lib/soes/src/esc.c ****       case SAFEOP_TO_PREOP:
1227:Lib/soes/src/esc.c ****       {
1228:Lib/soes/src/esc.c ****          ESC_stopinput ();
1229:Lib/soes/src/esc.c ****          an = ESCpreop;
1230:Lib/soes/src/esc.c ****          break;
1231:Lib/soes/src/esc.c ****       }
1232:Lib/soes/src/esc.c ****       case SAFEOP_TO_BOOT:
1233:Lib/soes/src/esc.c ****       {
1234:Lib/soes/src/esc.c ****          an = ESCsafeop | ESCerror;
1235:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
1236:Lib/soes/src/esc.c ****          break;
1237:Lib/soes/src/esc.c ****       }
1238:Lib/soes/src/esc.c ****       case SAFEOP_TO_OP:
1239:Lib/soes/src/esc.c ****       {
1240:Lib/soes/src/esc.c ****          an = ESC_startoutput (ac);
1241:Lib/soes/src/esc.c ****          break;
1242:Lib/soes/src/esc.c ****       }
1243:Lib/soes/src/esc.c ****       case OP_TO_BOOT:
1244:Lib/soes/src/esc.c ****       {
1245:Lib/soes/src/esc.c ****          an = ESCsafeop | ESCerror;
1246:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
1247:Lib/soes/src/esc.c ****          ESC_stopoutput ();
1248:Lib/soes/src/esc.c ****          /* If no outputs present, we need to flag error using SM3 */
1249:Lib/soes/src/esc.c ****          if (ESCvar.ESC_SM2_sml == 0 && ESCvar.ESC_SM3_sml > 0)
1250:Lib/soes/src/esc.c ****          {
1251:Lib/soes/src/esc.c ****             ESC_SMdisable (3);
1252:Lib/soes/src/esc.c ****          }
1253:Lib/soes/src/esc.c ****          break;
1254:Lib/soes/src/esc.c ****       }
1255:Lib/soes/src/esc.c ****       case OP_TO_SAFEOP:
1256:Lib/soes/src/esc.c ****       {
1257:Lib/soes/src/esc.c ****          an = ESCsafeop;
1258:Lib/soes/src/esc.c ****          ESC_stopoutput ();
1259:Lib/soes/src/esc.c ****          break;
1260:Lib/soes/src/esc.c ****       }
1261:Lib/soes/src/esc.c ****       default:
1262:Lib/soes/src/esc.c ****       {
1263:Lib/soes/src/esc.c ****          if (an == ESCop)
1264:Lib/soes/src/esc.c ****          {
1265:Lib/soes/src/esc.c ****             ESC_stopoutput ();
1266:Lib/soes/src/esc.c ****             /* If no outputs present, we need to flag error using SM3 */
1267:Lib/soes/src/esc.c ****             if (ESCvar.ESC_SM2_sml == 0 && ESCvar.ESC_SM3_sml > 0)
1268:Lib/soes/src/esc.c ****             {
1269:Lib/soes/src/esc.c ****                ESC_SMdisable (3);
1270:Lib/soes/src/esc.c ****             }
1271:Lib/soes/src/esc.c ****             an = ESCsafeop;
1272:Lib/soes/src/esc.c ****          }
1273:Lib/soes/src/esc.c ****          if (as == ESCsafeop)
1274:Lib/soes/src/esc.c ****          {
1275:Lib/soes/src/esc.c ****             ESC_stopinput ();
1276:Lib/soes/src/esc.c ****          }
1277:Lib/soes/src/esc.c ****          an |= ESCerror;
1278:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_UNKNOWNSTATE);
1279:Lib/soes/src/esc.c ****          break;
1280:Lib/soes/src/esc.c ****       }
1281:Lib/soes/src/esc.c ****    }
ARM GAS  /tmp/ccoKziDo.s 			page 97


1282:Lib/soes/src/esc.c **** 
1283:Lib/soes/src/esc.c ****    /* Call post state change hook case it have been configured  */
1284:Lib/soes/src/esc.c ****    if (ESCvar.post_state_change_hook != NULL)
 3438              		.loc 1 1284 4 view .LVU905
 3439              		.loc 1 1284 14 is_stmt 0 view .LVU906
 3440 0190 3F4B     		ldr	r3, .L303
 3441 0192 1B6B     		ldr	r3, [r3, #48]
 3442              		.loc 1 1284 7 view .LVU907
 3443 0194 23B1     		cbz	r3, .L287
1285:Lib/soes/src/esc.c ****    {
1286:Lib/soes/src/esc.c ****       ESCvar.post_state_change_hook (&as, &an);
 3444              		.loc 1 1286 7 is_stmt 1 view .LVU908
 3445 0196 0DF10701 		add	r1, sp, #7
 3446 019a 0DF10600 		add	r0, sp, #6
 3447 019e 9847     		blx	r3
 3448              	.LVL236:
 3449              	.L287:
1287:Lib/soes/src/esc.c ****    }
1288:Lib/soes/src/esc.c **** 
1289:Lib/soes/src/esc.c ****    if (!(an & ESCerror) && (ESCvar.ALerror))
 3450              		.loc 1 1289 4 view .LVU909
 3451              		.loc 1 1289 13 is_stmt 0 view .LVU910
 3452 01a0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3453              		.loc 1 1289 7 view .LVU911
 3454 01a4 13F0100F 		tst	r3, #16
 3455 01a8 05D1     		bne	.L288
 3456              		.loc 1 1289 35 discriminator 1 view .LVU912
 3457 01aa 394B     		ldr	r3, .L303
 3458 01ac B3F88430 		ldrh	r3, [r3, #132]
 3459              		.loc 1 1289 25 discriminator 1 view .LVU913
 3460 01b0 002B     		cmp	r3, #0
 3461 01b2 40F0F080 		bne	.L296
 3462              	.L288:
1290:Lib/soes/src/esc.c ****    {
1291:Lib/soes/src/esc.c ****       /* clear error */
1292:Lib/soes/src/esc.c ****       ESC_ALerror (ALERR_NONE);
1293:Lib/soes/src/esc.c ****    }
1294:Lib/soes/src/esc.c **** 
1295:Lib/soes/src/esc.c ****    if (ESC_check_id_request (ESCvar.ALcontrol, &an))
 3463              		.loc 1 1295 4 is_stmt 1 view .LVU914
 3464              		.loc 1 1295 8 is_stmt 0 view .LVU915
 3465 01b6 0DF10701 		add	r1, sp, #7
 3466 01ba 354B     		ldr	r3, .L303
 3467 01bc B3F88200 		ldrh	r0, [r3, #130]
 3468 01c0 FFF7FEFF 		bl	ESC_check_id_request
 3469              	.LVL237:
 3470              		.loc 1 1295 7 view .LVU916
 3471 01c4 0028     		cmp	r0, #0
 3472 01c6 40F0EA80 		bne	.L297
 3473              	.L289:
1296:Lib/soes/src/esc.c ****    {
1297:Lib/soes/src/esc.c ****       an |= ESC_load_device_id ();
1298:Lib/soes/src/esc.c ****    }
1299:Lib/soes/src/esc.c **** 
1300:Lib/soes/src/esc.c ****    ESC_ALstatus (an);
 3474              		.loc 1 1300 4 is_stmt 1 view .LVU917
 3475 01ca 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccoKziDo.s 			page 98


 3476 01ce FFF7FEFF 		bl	ESC_ALstatus
 3477              	.LVL238:
 3478              	.L257:
1301:Lib/soes/src/esc.c **** 
1302:Lib/soes/src/esc.c **** #ifdef ESC_DEBUG
1303:Lib/soes/src/esc.c ****    DPRINT ("state %s\n", ESC_state_to_string (an & 0xF));
1304:Lib/soes/src/esc.c **** #endif
1305:Lib/soes/src/esc.c **** }
 3479              		.loc 1 1305 1 is_stmt 0 view .LVU918
 3480 01d2 03B0     		add	sp, sp, #12
 3481              		.cfi_remember_state
 3482              		.cfi_def_cfa_offset 12
 3483              		@ sp needed
 3484 01d4 30BD     		pop	{r4, r5, pc}
 3485              	.LVL239:
 3486              	.L274:
 3487              		.cfi_restore_state
1138:Lib/soes/src/esc.c ****          an = ESC_startmbxboot (ac);
 3488              		.loc 1 1138 10 is_stmt 1 view .LVU919
 3489 01d6 FFF7FEFF 		bl	ESC_address
 3490              	.LVL240:
1139:Lib/soes/src/esc.c ****          break;
 3491              		.loc 1 1139 10 view .LVU920
1139:Lib/soes/src/esc.c ****          break;
 3492              		.loc 1 1139 15 is_stmt 0 view .LVU921
 3493 01da 2046     		mov	r0, r4
 3494 01dc FFF7FEFF 		bl	ESC_startmbxboot
 3495              	.LVL241:
1139:Lib/soes/src/esc.c ****          break;
 3496              		.loc 1 1139 13 view .LVU922
 3497 01e0 8DF80700 		strb	r0, [sp, #7]
1140:Lib/soes/src/esc.c ****       }
 3498              		.loc 1 1140 10 is_stmt 1 view .LVU923
 3499 01e4 D4E7     		b	.L264
 3500              	.L269:
1145:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3501              		.loc 1 1145 10 view .LVU924
1145:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3502              		.loc 1 1145 13 is_stmt 0 view .LVU925
 3503 01e6 1120     		movs	r0, #17
 3504 01e8 8DF80700 		strb	r0, [sp, #7]
1146:Lib/soes/src/esc.c ****          break;
 3505              		.loc 1 1146 10 is_stmt 1 view .LVU926
 3506 01ec FFF7FEFF 		bl	ESC_ALerror
 3507              	.LVL242:
1147:Lib/soes/src/esc.c ****       }
 3508              		.loc 1 1147 10 view .LVU927
 3509 01f0 CEE7     		b	.L264
 3510              	.L278:
1151:Lib/soes/src/esc.c ****          ESC_stopinput ();
 3511              		.loc 1 1151 10 view .LVU928
 3512 01f2 FFF7FEFF 		bl	ESC_stopoutput
 3513              	.LVL243:
1152:Lib/soes/src/esc.c ****          ESC_stopmbx ();
 3514              		.loc 1 1152 10 view .LVU929
 3515 01f6 FFF7FEFF 		bl	ESC_stopinput
 3516              	.LVL244:
ARM GAS  /tmp/ccoKziDo.s 			page 99


1153:Lib/soes/src/esc.c ****          an = ESCinit;
 3517              		.loc 1 1153 10 view .LVU930
 3518 01fa FFF7FEFF 		bl	ESC_stopmbx
 3519              	.LVL245:
1154:Lib/soes/src/esc.c ****          break;
 3520              		.loc 1 1154 10 view .LVU931
1154:Lib/soes/src/esc.c ****          break;
 3521              		.loc 1 1154 13 is_stmt 0 view .LVU932
 3522 01fe 0123     		movs	r3, #1
 3523 0200 8DF80730 		strb	r3, [sp, #7]
1155:Lib/soes/src/esc.c ****       }
 3524              		.loc 1 1155 10 is_stmt 1 view .LVU933
 3525 0204 C4E7     		b	.L264
 3526              	.L279:
1159:Lib/soes/src/esc.c ****          ESC_stopmbx ();
 3527              		.loc 1 1159 10 view .LVU934
 3528 0206 FFF7FEFF 		bl	ESC_stopinput
 3529              	.LVL246:
1160:Lib/soes/src/esc.c ****          an = ESCinit;
 3530              		.loc 1 1160 10 view .LVU935
 3531 020a FFF7FEFF 		bl	ESC_stopmbx
 3532              	.LVL247:
1161:Lib/soes/src/esc.c ****          break;
 3533              		.loc 1 1161 10 view .LVU936
1161:Lib/soes/src/esc.c ****          break;
 3534              		.loc 1 1161 13 is_stmt 0 view .LVU937
 3535 020e 0123     		movs	r3, #1
 3536 0210 8DF80730 		strb	r3, [sp, #7]
1162:Lib/soes/src/esc.c ****       }
 3537              		.loc 1 1162 10 is_stmt 1 view .LVU938
 3538 0214 BCE7     		b	.L264
 3539              	.L281:
1166:Lib/soes/src/esc.c ****          an = ESCinit;
 3540              		.loc 1 1166 10 view .LVU939
 3541 0216 FFF7FEFF 		bl	ESC_stopmbx
 3542              	.LVL248:
1167:Lib/soes/src/esc.c ****          break;
 3543              		.loc 1 1167 10 view .LVU940
1167:Lib/soes/src/esc.c ****          break;
 3544              		.loc 1 1167 13 is_stmt 0 view .LVU941
 3545 021a 0123     		movs	r3, #1
 3546 021c 8DF80730 		strb	r3, [sp, #7]
1168:Lib/soes/src/esc.c ****       }
 3547              		.loc 1 1168 10 is_stmt 1 view .LVU942
 3548 0220 B6E7     		b	.L264
 3549              	.L280:
1172:Lib/soes/src/esc.c ****          an = ESCinit;
 3550              		.loc 1 1172 10 view .LVU943
 3551 0222 FFF7FEFF 		bl	ESC_stopmbx
 3552              	.LVL249:
1173:Lib/soes/src/esc.c ****          break;
 3553              		.loc 1 1173 10 view .LVU944
1173:Lib/soes/src/esc.c ****          break;
 3554              		.loc 1 1173 13 is_stmt 0 view .LVU945
 3555 0226 0123     		movs	r3, #1
 3556 0228 8DF80730 		strb	r3, [sp, #7]
1174:Lib/soes/src/esc.c ****       }
ARM GAS  /tmp/ccoKziDo.s 			page 100


 3557              		.loc 1 1174 10 is_stmt 1 view .LVU946
 3558 022c B0E7     		b	.L264
 3559              	.L267:
1181:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3560              		.loc 1 1181 10 view .LVU947
1181:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3561              		.loc 1 1181 13 is_stmt 0 view .LVU948
 3562 022e 1223     		movs	r3, #18
 3563 0230 8DF80730 		strb	r3, [sp, #7]
1182:Lib/soes/src/esc.c ****          break;
 3564              		.loc 1 1182 10 is_stmt 1 view .LVU949
 3565 0234 1120     		movs	r0, #17
 3566 0236 FFF7FEFF 		bl	ESC_ALerror
 3567              	.LVL250:
1183:Lib/soes/src/esc.c ****       }
 3568              		.loc 1 1183 10 view .LVU950
 3569 023a A9E7     		b	.L264
 3570              	.L271:
1188:Lib/soes/src/esc.c ****                                          SMmap2, MAX_MAPPINGS_SM2);
 3571              		.loc 1 1188 10 view .LVU951
1188:Lib/soes/src/esc.c ****                                          SMmap2, MAX_MAPPINGS_SM2);
 3572              		.loc 1 1188 31 is_stmt 0 view .LVU952
 3573 023c 174D     		ldr	r5, .L303+12
 3574 023e 0223     		movs	r3, #2
 3575 0240 174A     		ldr	r2, .L303+16
 3576 0242 2946     		mov	r1, r5
 3577 0244 41F61240 		movw	r0, #7186
 3578 0248 FFF7FEFF 		bl	sizeOfPDO
 3579              	.LVL251:
1188:Lib/soes/src/esc.c ****                                          SMmap2, MAX_MAPPINGS_SM2);
 3580              		.loc 1 1188 29 view .LVU953
 3581 024c 25F8340C 		strh	r0, [r5, #-52]	@ movhi
 3582 0250 AC3D     		subs	r5, r5, #172
1190:Lib/soes/src/esc.c ****          {
 3583              		.loc 1 1190 10 is_stmt 1 view .LVU954
1190:Lib/soes/src/esc.c ****          {
 3584              		.loc 1 1190 20 is_stmt 0 view .LVU955
 3585 0252 D5F8AC30 		ldr	r3, [r5, #172]
1190:Lib/soes/src/esc.c ****          {
 3586              		.loc 1 1190 13 view .LVU956
 3587 0256 002B     		cmp	r3, #0
 3588 0258 28DB     		blt	.L298
1197:Lib/soes/src/esc.c ****                                          SMmap3, MAX_MAPPINGS_SM3);
 3589              		.loc 1 1197 10 is_stmt 1 view .LVU957
1197:Lib/soes/src/esc.c ****                                          SMmap3, MAX_MAPPINGS_SM3);
 3590              		.loc 1 1197 31 is_stmt 0 view .LVU958
 3591 025a 124D     		ldr	r5, .L303+20
 3592 025c 0223     		movs	r3, #2
 3593 025e 124A     		ldr	r2, .L303+24
 3594 0260 2946     		mov	r1, r5
 3595 0262 41F61340 		movw	r0, #7187
 3596 0266 FFF7FEFF 		bl	sizeOfPDO
 3597              	.LVL252:
1197:Lib/soes/src/esc.c ****                                          SMmap3, MAX_MAPPINGS_SM3);
 3598              		.loc 1 1197 29 view .LVU959
 3599 026a 25F8360C 		strh	r0, [r5, #-54]	@ movhi
 3600 026e B03D     		subs	r5, r5, #176
ARM GAS  /tmp/ccoKziDo.s 			page 101


1199:Lib/soes/src/esc.c ****          {
 3601              		.loc 1 1199 10 is_stmt 1 view .LVU960
1199:Lib/soes/src/esc.c ****          {
 3602              		.loc 1 1199 20 is_stmt 0 view .LVU961
 3603 0270 D5F8B030 		ldr	r3, [r5, #176]
1199:Lib/soes/src/esc.c ****          {
 3604              		.loc 1 1199 13 view .LVU962
 3605 0274 002B     		cmp	r3, #0
 3606 0276 20DB     		blt	.L299
1206:Lib/soes/src/esc.c ****          if (an == ac)
 3607              		.loc 1 1206 10 is_stmt 1 view .LVU963
1206:Lib/soes/src/esc.c ****          if (an == ac)
 3608              		.loc 1 1206 15 is_stmt 0 view .LVU964
 3609 0278 2046     		mov	r0, r4
 3610 027a FFF7FEFF 		bl	ESC_startinput
 3611              	.LVL253:
1206:Lib/soes/src/esc.c ****          if (an == ac)
 3612              		.loc 1 1206 13 view .LVU965
 3613 027e 8DF80700 		strb	r0, [sp, #7]
1207:Lib/soes/src/esc.c ****          {
 3614              		.loc 1 1207 10 is_stmt 1 view .LVU966
1207:Lib/soes/src/esc.c ****          {
 3615              		.loc 1 1207 13 is_stmt 0 view .LVU967
 3616 0282 A042     		cmp	r0, r4
 3617 0284 84D1     		bne	.L264
1209:Lib/soes/src/esc.c ****          }
 3618              		.loc 1 1209 13 is_stmt 1 view .LVU968
 3619 0286 0220     		movs	r0, #2
 3620 0288 FFF7FEFF 		bl	ESC_SMenable
 3621              	.LVL254:
 3622 028c 80E7     		b	.L264
 3623              	.L304:
 3624 028e 00BF     		.align	2
 3625              	.L303:
 3626 0290 00000000 		.word	ESCvar
 3627 0294 82000000 		.word	ESCvar+130
 3628 0298 00000000 		.word	.LANCHOR0
 3629 029c AC000000 		.word	ESCvar+172
 3630 02a0 00000000 		.word	SMmap2
 3631 02a4 B0000000 		.word	ESCvar+176
 3632 02a8 00000000 		.word	SMmap3
 3633              	.L298:
1192:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDOUTPUTSM);
 3634              		.loc 1 1192 13 view .LVU969
1192:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDOUTPUTSM);
 3635              		.loc 1 1192 16 is_stmt 0 view .LVU970
 3636 02ac 1223     		movs	r3, #18
 3637 02ae 8DF80730 		strb	r3, [sp, #7]
1193:Lib/soes/src/esc.c ****             break;
 3638              		.loc 1 1193 13 is_stmt 1 view .LVU971
 3639 02b2 1D20     		movs	r0, #29
 3640 02b4 FFF7FEFF 		bl	ESC_ALerror
 3641              	.LVL255:
1194:Lib/soes/src/esc.c ****          }
 3642              		.loc 1 1194 13 view .LVU972
 3643 02b8 6AE7     		b	.L264
 3644              	.L299:
ARM GAS  /tmp/ccoKziDo.s 			page 102


1201:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDINPUTSM);
 3645              		.loc 1 1201 13 view .LVU973
1201:Lib/soes/src/esc.c ****             ESC_ALerror (ALERR_INVALIDINPUTSM);
 3646              		.loc 1 1201 16 is_stmt 0 view .LVU974
 3647 02ba 1223     		movs	r3, #18
 3648 02bc 8DF80730 		strb	r3, [sp, #7]
1202:Lib/soes/src/esc.c ****             break;
 3649              		.loc 1 1202 13 is_stmt 1 view .LVU975
 3650 02c0 1E20     		movs	r0, #30
 3651 02c2 FFF7FEFF 		bl	ESC_ALerror
 3652              	.LVL256:
1203:Lib/soes/src/esc.c ****          }
 3653              		.loc 1 1203 13 view .LVU976
 3654 02c6 63E7     		b	.L264
 3655              	.L268:
1215:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3656              		.loc 1 1215 10 view .LVU977
1215:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3657              		.loc 1 1215 13 is_stmt 0 view .LVU978
 3658 02c8 1223     		movs	r3, #18
 3659 02ca 8DF80730 		strb	r3, [sp, #7]
1216:Lib/soes/src/esc.c ****          break;
 3660              		.loc 1 1216 10 is_stmt 1 view .LVU979
 3661 02ce 1120     		movs	r0, #17
 3662 02d0 FFF7FEFF 		bl	ESC_ALerror
 3663              	.LVL257:
1217:Lib/soes/src/esc.c ****       }
 3664              		.loc 1 1217 10 view .LVU980
 3665 02d4 5CE7     		b	.L264
 3666              	.L275:
1221:Lib/soes/src/esc.c ****          ESC_stopinput ();
 3667              		.loc 1 1221 10 view .LVU981
 3668 02d6 FFF7FEFF 		bl	ESC_stopoutput
 3669              	.LVL258:
1222:Lib/soes/src/esc.c ****          an = ESCpreop;
 3670              		.loc 1 1222 10 view .LVU982
 3671 02da FFF7FEFF 		bl	ESC_stopinput
 3672              	.LVL259:
1223:Lib/soes/src/esc.c ****          break;
 3673              		.loc 1 1223 10 view .LVU983
1223:Lib/soes/src/esc.c ****          break;
 3674              		.loc 1 1223 13 is_stmt 0 view .LVU984
 3675 02de 0223     		movs	r3, #2
 3676 02e0 8DF80730 		strb	r3, [sp, #7]
1224:Lib/soes/src/esc.c ****       }
 3677              		.loc 1 1224 10 is_stmt 1 view .LVU985
 3678 02e4 54E7     		b	.L264
 3679              	.L276:
1228:Lib/soes/src/esc.c ****          an = ESCpreop;
 3680              		.loc 1 1228 10 view .LVU986
 3681 02e6 FFF7FEFF 		bl	ESC_stopinput
 3682              	.LVL260:
1229:Lib/soes/src/esc.c ****          break;
 3683              		.loc 1 1229 10 view .LVU987
1229:Lib/soes/src/esc.c ****          break;
 3684              		.loc 1 1229 13 is_stmt 0 view .LVU988
 3685 02ea 0223     		movs	r3, #2
ARM GAS  /tmp/ccoKziDo.s 			page 103


 3686 02ec 8DF80730 		strb	r3, [sp, #7]
1230:Lib/soes/src/esc.c ****       }
 3687              		.loc 1 1230 10 is_stmt 1 view .LVU989
 3688 02f0 4EE7     		b	.L264
 3689              	.L273:
1234:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3690              		.loc 1 1234 10 view .LVU990
1234:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3691              		.loc 1 1234 13 is_stmt 0 view .LVU991
 3692 02f2 1423     		movs	r3, #20
 3693 02f4 8DF80730 		strb	r3, [sp, #7]
1235:Lib/soes/src/esc.c ****          break;
 3694              		.loc 1 1235 10 is_stmt 1 view .LVU992
 3695 02f8 1120     		movs	r0, #17
 3696 02fa FFF7FEFF 		bl	ESC_ALerror
 3697              	.LVL261:
1236:Lib/soes/src/esc.c ****       }
 3698              		.loc 1 1236 10 view .LVU993
 3699 02fe 47E7     		b	.L264
 3700              	.L266:
1240:Lib/soes/src/esc.c ****          break;
 3701              		.loc 1 1240 10 view .LVU994
1240:Lib/soes/src/esc.c ****          break;
 3702              		.loc 1 1240 15 is_stmt 0 view .LVU995
 3703 0300 2046     		mov	r0, r4
 3704 0302 FFF7FEFF 		bl	ESC_startoutput
 3705              	.LVL262:
1240:Lib/soes/src/esc.c ****          break;
 3706              		.loc 1 1240 13 view .LVU996
 3707 0306 8DF80700 		strb	r0, [sp, #7]
1241:Lib/soes/src/esc.c ****       }
 3708              		.loc 1 1241 10 is_stmt 1 view .LVU997
 3709 030a 41E7     		b	.L264
 3710              	.L272:
1245:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3711              		.loc 1 1245 10 view .LVU998
1245:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_INVALIDSTATECHANGE);
 3712              		.loc 1 1245 13 is_stmt 0 view .LVU999
 3713 030c 1423     		movs	r3, #20
 3714 030e 8DF80730 		strb	r3, [sp, #7]
1246:Lib/soes/src/esc.c ****          ESC_stopoutput ();
 3715              		.loc 1 1246 10 is_stmt 1 view .LVU1000
 3716 0312 1120     		movs	r0, #17
 3717 0314 FFF7FEFF 		bl	ESC_ALerror
 3718              	.LVL263:
1247:Lib/soes/src/esc.c ****          /* If no outputs present, we need to flag error using SM3 */
 3719              		.loc 1 1247 10 view .LVU1001
 3720 0318 FFF7FEFF 		bl	ESC_stopoutput
 3721              	.LVL264:
1249:Lib/soes/src/esc.c ****          {
 3722              		.loc 1 1249 10 view .LVU1002
1249:Lib/soes/src/esc.c ****          {
 3723              		.loc 1 1249 20 is_stmt 0 view .LVU1003
 3724 031c 244B     		ldr	r3, .L305
 3725 031e B3F87830 		ldrh	r3, [r3, #120]
1249:Lib/soes/src/esc.c ****          {
 3726              		.loc 1 1249 13 view .LVU1004
ARM GAS  /tmp/ccoKziDo.s 			page 104


 3727 0322 002B     		cmp	r3, #0
 3728 0324 7FF434AF 		bne	.L264
1249:Lib/soes/src/esc.c ****          {
 3729              		.loc 1 1249 47 discriminator 1 view .LVU1005
 3730 0328 214B     		ldr	r3, .L305
 3731 032a B3F87A30 		ldrh	r3, [r3, #122]
1249:Lib/soes/src/esc.c ****          {
 3732              		.loc 1 1249 38 discriminator 1 view .LVU1006
 3733 032e 002B     		cmp	r3, #0
 3734 0330 3FF42EAF 		beq	.L264
1251:Lib/soes/src/esc.c ****          }
 3735              		.loc 1 1251 13 is_stmt 1 view .LVU1007
 3736 0334 0320     		movs	r0, #3
 3737 0336 FFF7FEFF 		bl	ESC_SMdisable
 3738              	.LVL265:
 3739 033a 29E7     		b	.L264
 3740              	.L270:
1257:Lib/soes/src/esc.c ****          ESC_stopoutput ();
 3741              		.loc 1 1257 10 view .LVU1008
1257:Lib/soes/src/esc.c ****          ESC_stopoutput ();
 3742              		.loc 1 1257 13 is_stmt 0 view .LVU1009
 3743 033c 0423     		movs	r3, #4
 3744 033e 8DF80730 		strb	r3, [sp, #7]
1258:Lib/soes/src/esc.c ****          break;
 3745              		.loc 1 1258 10 is_stmt 1 view .LVU1010
 3746 0342 FFF7FEFF 		bl	ESC_stopoutput
 3747              	.LVL266:
1259:Lib/soes/src/esc.c ****       }
 3748              		.loc 1 1259 10 view .LVU1011
 3749 0346 23E7     		b	.L264
 3750              	.L263:
1263:Lib/soes/src/esc.c ****          {
 3751              		.loc 1 1263 10 view .LVU1012
1263:Lib/soes/src/esc.c ****          {
 3752              		.loc 1 1263 17 is_stmt 0 view .LVU1013
 3753 0348 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
1263:Lib/soes/src/esc.c ****          {
 3754              		.loc 1 1263 13 view .LVU1014
 3755 034c 082B     		cmp	r3, #8
 3756 034e 0DD0     		beq	.L300
 3757              	.L284:
1273:Lib/soes/src/esc.c ****          {
 3758              		.loc 1 1273 10 is_stmt 1 view .LVU1015
1273:Lib/soes/src/esc.c ****          {
 3759              		.loc 1 1273 17 is_stmt 0 view .LVU1016
 3760 0350 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
1273:Lib/soes/src/esc.c ****          {
 3761              		.loc 1 1273 13 view .LVU1017
 3762 0354 042B     		cmp	r3, #4
 3763 0356 1BD0     		beq	.L301
 3764              	.L286:
1277:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_UNKNOWNSTATE);
 3765              		.loc 1 1277 10 is_stmt 1 view .LVU1018
1277:Lib/soes/src/esc.c ****          ESC_ALerror (ALERR_UNKNOWNSTATE);
 3766              		.loc 1 1277 13 is_stmt 0 view .LVU1019
 3767 0358 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3768 035c 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/ccoKziDo.s 			page 105


 3769 0360 8DF80730 		strb	r3, [sp, #7]
1278:Lib/soes/src/esc.c ****          break;
 3770              		.loc 1 1278 10 is_stmt 1 view .LVU1020
 3771 0364 1220     		movs	r0, #18
 3772 0366 FFF7FEFF 		bl	ESC_ALerror
 3773              	.LVL267:
1279:Lib/soes/src/esc.c ****       }
 3774              		.loc 1 1279 10 view .LVU1021
 3775 036a 11E7     		b	.L264
 3776              	.L300:
1265:Lib/soes/src/esc.c ****             /* If no outputs present, we need to flag error using SM3 */
 3777              		.loc 1 1265 13 view .LVU1022
 3778 036c FFF7FEFF 		bl	ESC_stopoutput
 3779              	.LVL268:
1267:Lib/soes/src/esc.c ****             {
 3780              		.loc 1 1267 13 view .LVU1023
1267:Lib/soes/src/esc.c ****             {
 3781              		.loc 1 1267 23 is_stmt 0 view .LVU1024
 3782 0370 0F4B     		ldr	r3, .L305
 3783 0372 B3F87830 		ldrh	r3, [r3, #120]
1267:Lib/soes/src/esc.c ****             {
 3784              		.loc 1 1267 16 view .LVU1025
 3785 0376 1BB9     		cbnz	r3, .L285
1267:Lib/soes/src/esc.c ****             {
 3786              		.loc 1 1267 50 discriminator 1 view .LVU1026
 3787 0378 0D4B     		ldr	r3, .L305
 3788 037a B3F87A30 		ldrh	r3, [r3, #122]
1267:Lib/soes/src/esc.c ****             {
 3789              		.loc 1 1267 41 discriminator 1 view .LVU1027
 3790 037e 1BB9     		cbnz	r3, .L302
 3791              	.L285:
1271:Lib/soes/src/esc.c ****          }
 3792              		.loc 1 1271 13 is_stmt 1 view .LVU1028
1271:Lib/soes/src/esc.c ****          }
 3793              		.loc 1 1271 16 is_stmt 0 view .LVU1029
 3794 0380 0423     		movs	r3, #4
 3795 0382 8DF80730 		strb	r3, [sp, #7]
 3796 0386 E3E7     		b	.L284
 3797              	.L302:
1269:Lib/soes/src/esc.c ****             }
 3798              		.loc 1 1269 16 is_stmt 1 view .LVU1030
 3799 0388 0320     		movs	r0, #3
 3800 038a FFF7FEFF 		bl	ESC_SMdisable
 3801              	.LVL269:
 3802 038e F7E7     		b	.L285
 3803              	.L301:
1275:Lib/soes/src/esc.c ****          }
 3804              		.loc 1 1275 13 view .LVU1031
 3805 0390 FFF7FEFF 		bl	ESC_stopinput
 3806              	.LVL270:
 3807 0394 E0E7     		b	.L286
 3808              	.L296:
1292:Lib/soes/src/esc.c ****    }
 3809              		.loc 1 1292 7 view .LVU1032
 3810 0396 0020     		movs	r0, #0
 3811 0398 FFF7FEFF 		bl	ESC_ALerror
 3812              	.LVL271:
ARM GAS  /tmp/ccoKziDo.s 			page 106


 3813 039c 0BE7     		b	.L288
 3814              	.L297:
1297:Lib/soes/src/esc.c ****    }
 3815              		.loc 1 1297 7 view .LVU1033
1297:Lib/soes/src/esc.c ****    }
 3816              		.loc 1 1297 13 is_stmt 0 view .LVU1034
 3817 039e FFF7FEFF 		bl	ESC_load_device_id
 3818              	.LVL272:
1297:Lib/soes/src/esc.c ****    }
 3819              		.loc 1 1297 10 view .LVU1035
 3820 03a2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 3821 03a6 1843     		orrs	r0, r0, r3
 3822 03a8 8DF80700 		strb	r0, [sp, #7]
 3823 03ac 0DE7     		b	.L289
 3824              	.L306:
 3825 03ae 00BF     		.align	2
 3826              	.L305:
 3827 03b0 00000000 		.word	ESCvar
 3828              		.cfi_endproc
 3829              	.LFE38:
 3831              		.section	.text.ESC_config,"ax",%progbits
 3832              		.align	1
 3833              		.global	ESC_config
 3834              		.syntax unified
 3835              		.thumb
 3836              		.thumb_func
 3838              	ESC_config:
 3839              	.LVL273:
 3840              	.LFB39:
1306:Lib/soes/src/esc.c **** /** Function copying the application configuration variable
1307:Lib/soes/src/esc.c ****  * data to the stack local variable.
1308:Lib/soes/src/esc.c ****  *
1309:Lib/soes/src/esc.c ****  * @param[in] cfg   = Pointer to the Application configuration variable
1310:Lib/soes/src/esc.c ****  * holding application specific details. Data is copied.
1311:Lib/soes/src/esc.c ****  */
1312:Lib/soes/src/esc.c **** void ESC_config (esc_cfg_t * cfg)
1313:Lib/soes/src/esc.c **** {
 3841              		.loc 1 1313 1 is_stmt 1 view -0
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 0
 3844              		@ frame_needed = 0, uses_anonymous_args = 0
 3845              		@ link register save eliminated.
 3846              		.loc 1 1313 1 is_stmt 0 view .LVU1037
 3847 0000 0246     		mov	r2, r0
1314:Lib/soes/src/esc.c ****    static sm_cfg_t mb0 = {MBX0_sma, MBX0_sml, MBX0_sme, MBX0_smc, 0};
 3848              		.loc 1 1314 4 is_stmt 1 view .LVU1038
1315:Lib/soes/src/esc.c ****    static sm_cfg_t mb1 = {MBX1_sma, MBX1_sml, MBX1_sme, MBX1_smc, 0};
 3849              		.loc 1 1315 4 view .LVU1039
1316:Lib/soes/src/esc.c ****    static sm_cfg_t mbboot0 = {MBX0_sma_b, MBX0_sml_b, MBX0_sme_b, MBX0_smc_b, 0};
 3850              		.loc 1 1316 4 view .LVU1040
1317:Lib/soes/src/esc.c ****    static sm_cfg_t mbboot1 = {MBX1_sma_b, MBX1_sml_b, MBX1_sme_b, MBX1_smc_b, 0};
 3851              		.loc 1 1317 4 view .LVU1041
1318:Lib/soes/src/esc.c **** 
1319:Lib/soes/src/esc.c ****    /* Configure stack */
1320:Lib/soes/src/esc.c ****    ESCvar.use_interrupt = cfg->use_interrupt;
 3852              		.loc 1 1320 4 view .LVU1042
 3853              		.loc 1 1320 30 is_stmt 0 view .LVU1043
ARM GAS  /tmp/ccoKziDo.s 			page 107


 3854 0002 4168     		ldr	r1, [r0, #4]
 3855              		.loc 1 1320 25 view .LVU1044
 3856 0004 204B     		ldr	r3, .L308
 3857 0006 1960     		str	r1, [r3]
1321:Lib/soes/src/esc.c ****    ESCvar.watchdogcnt = cfg->watchdog_cnt;
 3858              		.loc 1 1321 4 is_stmt 1 view .LVU1045
 3859              		.loc 1 1321 28 is_stmt 0 view .LVU1046
 3860 0008 8168     		ldr	r1, [r0, #8]
 3861              		.loc 1 1321 23 view .LVU1047
 3862 000a C3F8DC10 		str	r1, [r3, #220]
1322:Lib/soes/src/esc.c **** 
1323:Lib/soes/src/esc.c ****    ESCvar.mb[0] = mb0;
 3863              		.loc 1 1323 4 is_stmt 1 view .LVU1048
 3864              		.loc 1 1323 17 is_stmt 0 view .LVU1049
 3865 000e 1F49     		ldr	r1, .L308+4
 3866 0010 03F1040C 		add	ip, r3, #4
 3867 0014 03C9     		ldm	r1, {r0, r1}
 3868              	.LVL274:
 3869              		.loc 1 1323 17 view .LVU1050
 3870 0016 8CE80300 		stm	ip, {r0, r1}
1324:Lib/soes/src/esc.c ****    ESCvar.mb[1] = mb1;
 3871              		.loc 1 1324 4 is_stmt 1 view .LVU1051
 3872              		.loc 1 1324 17 is_stmt 0 view .LVU1052
 3873 001a 1D49     		ldr	r1, .L308+8
 3874 001c 03F10C0C 		add	ip, r3, #12
 3875 0020 03C9     		ldm	r1, {r0, r1}
 3876 0022 8CE80300 		stm	ip, {r0, r1}
1325:Lib/soes/src/esc.c ****    ESCvar.mbboot[0] = mbboot0;
 3877              		.loc 1 1325 4 is_stmt 1 view .LVU1053
 3878              		.loc 1 1325 21 is_stmt 0 view .LVU1054
 3879 0026 1B49     		ldr	r1, .L308+12
 3880 0028 03F1140C 		add	ip, r3, #20
 3881 002c 03C9     		ldm	r1, {r0, r1}
 3882 002e 8CE80300 		stm	ip, {r0, r1}
1326:Lib/soes/src/esc.c ****    ESCvar.mbboot[1] = mbboot1;
 3883              		.loc 1 1326 4 is_stmt 1 view .LVU1055
 3884              		.loc 1 1326 21 is_stmt 0 view .LVU1056
 3885 0032 1949     		ldr	r1, .L308+16
 3886 0034 03F11C0C 		add	ip, r3, #28
 3887 0038 03C9     		ldm	r1, {r0, r1}
 3888 003a 8CE80300 		stm	ip, {r0, r1}
1327:Lib/soes/src/esc.c **** 
1328:Lib/soes/src/esc.c ****    ESCvar.skip_default_initialization = cfg->skip_default_initialization;
 3889              		.loc 1 1328 4 is_stmt 1 view .LVU1057
 3890              		.loc 1 1328 44 is_stmt 0 view .LVU1058
 3891 003e 117B     		ldrb	r1, [r2, #12]	@ zero_extendqisi2
 3892              		.loc 1 1328 39 view .LVU1059
 3893 0040 83F82410 		strb	r1, [r3, #36]
1329:Lib/soes/src/esc.c ****    ESCvar.set_defaults_hook = cfg->set_defaults_hook;
 3894              		.loc 1 1329 4 is_stmt 1 view .LVU1060
 3895              		.loc 1 1329 34 is_stmt 0 view .LVU1061
 3896 0044 1169     		ldr	r1, [r2, #16]
 3897              		.loc 1 1329 29 view .LVU1062
 3898 0046 9962     		str	r1, [r3, #40]
1330:Lib/soes/src/esc.c ****    ESCvar.pre_state_change_hook = cfg->pre_state_change_hook;
 3899              		.loc 1 1330 4 is_stmt 1 view .LVU1063
 3900              		.loc 1 1330 38 is_stmt 0 view .LVU1064
ARM GAS  /tmp/ccoKziDo.s 			page 108


 3901 0048 5169     		ldr	r1, [r2, #20]
 3902              		.loc 1 1330 33 view .LVU1065
 3903 004a D962     		str	r1, [r3, #44]
1331:Lib/soes/src/esc.c ****    ESCvar.post_state_change_hook = cfg->post_state_change_hook;
 3904              		.loc 1 1331 4 is_stmt 1 view .LVU1066
 3905              		.loc 1 1331 39 is_stmt 0 view .LVU1067
 3906 004c 9169     		ldr	r1, [r2, #24]
 3907              		.loc 1 1331 34 view .LVU1068
 3908 004e 1963     		str	r1, [r3, #48]
1332:Lib/soes/src/esc.c ****    ESCvar.application_hook = cfg->application_hook;
 3909              		.loc 1 1332 4 is_stmt 1 view .LVU1069
 3910              		.loc 1 1332 33 is_stmt 0 view .LVU1070
 3911 0050 D169     		ldr	r1, [r2, #28]
 3912              		.loc 1 1332 28 view .LVU1071
 3913 0052 5963     		str	r1, [r3, #52]
1333:Lib/soes/src/esc.c ****    ESCvar.safeoutput_override = cfg->safeoutput_override;
 3914              		.loc 1 1333 4 is_stmt 1 view .LVU1072
 3915              		.loc 1 1333 36 is_stmt 0 view .LVU1073
 3916 0054 116A     		ldr	r1, [r2, #32]
 3917              		.loc 1 1333 31 view .LVU1074
 3918 0056 9963     		str	r1, [r3, #56]
1334:Lib/soes/src/esc.c ****    ESCvar.pre_object_download_hook = cfg->pre_object_download_hook;
 3919              		.loc 1 1334 4 is_stmt 1 view .LVU1075
 3920              		.loc 1 1334 41 is_stmt 0 view .LVU1076
 3921 0058 516A     		ldr	r1, [r2, #36]
 3922              		.loc 1 1334 36 view .LVU1077
 3923 005a D963     		str	r1, [r3, #60]
1335:Lib/soes/src/esc.c ****    ESCvar.post_object_download_hook = cfg->post_object_download_hook;
 3924              		.loc 1 1335 4 is_stmt 1 view .LVU1078
 3925              		.loc 1 1335 42 is_stmt 0 view .LVU1079
 3926 005c 916A     		ldr	r1, [r2, #40]
 3927              		.loc 1 1335 37 view .LVU1080
 3928 005e 1964     		str	r1, [r3, #64]
1336:Lib/soes/src/esc.c ****    ESCvar.pre_object_upload_hook = cfg->pre_object_upload_hook;
 3929              		.loc 1 1336 4 is_stmt 1 view .LVU1081
 3930              		.loc 1 1336 39 is_stmt 0 view .LVU1082
 3931 0060 D16A     		ldr	r1, [r2, #44]
 3932              		.loc 1 1336 34 view .LVU1083
 3933 0062 5964     		str	r1, [r3, #68]
1337:Lib/soes/src/esc.c ****    ESCvar.post_object_upload_hook = cfg->post_object_upload_hook;
 3934              		.loc 1 1337 4 is_stmt 1 view .LVU1084
 3935              		.loc 1 1337 40 is_stmt 0 view .LVU1085
 3936 0064 116B     		ldr	r1, [r2, #48]
 3937              		.loc 1 1337 35 view .LVU1086
 3938 0066 9964     		str	r1, [r3, #72]
1338:Lib/soes/src/esc.c ****    ESCvar.rxpdo_override = cfg->rxpdo_override;
 3939              		.loc 1 1338 4 is_stmt 1 view .LVU1087
 3940              		.loc 1 1338 31 is_stmt 0 view .LVU1088
 3941 0068 516B     		ldr	r1, [r2, #52]
 3942              		.loc 1 1338 26 view .LVU1089
 3943 006a D964     		str	r1, [r3, #76]
1339:Lib/soes/src/esc.c ****    ESCvar.txpdo_override = cfg->txpdo_override;
 3944              		.loc 1 1339 4 is_stmt 1 view .LVU1090
 3945              		.loc 1 1339 31 is_stmt 0 view .LVU1091
 3946 006c 916B     		ldr	r1, [r2, #56]
 3947              		.loc 1 1339 26 view .LVU1092
 3948 006e 1965     		str	r1, [r3, #80]
ARM GAS  /tmp/ccoKziDo.s 			page 109


1340:Lib/soes/src/esc.c ****    ESCvar.esc_hw_interrupt_enable = cfg->esc_hw_interrupt_enable;
 3949              		.loc 1 1340 4 is_stmt 1 view .LVU1093
 3950              		.loc 1 1340 40 is_stmt 0 view .LVU1094
 3951 0070 D16B     		ldr	r1, [r2, #60]
 3952              		.loc 1 1340 35 view .LVU1095
 3953 0072 5965     		str	r1, [r3, #84]
1341:Lib/soes/src/esc.c ****    ESCvar.esc_hw_interrupt_disable = cfg->esc_hw_interrupt_disable;
 3954              		.loc 1 1341 4 is_stmt 1 view .LVU1096
 3955              		.loc 1 1341 41 is_stmt 0 view .LVU1097
 3956 0074 116C     		ldr	r1, [r2, #64]
 3957              		.loc 1 1341 36 view .LVU1098
 3958 0076 9965     		str	r1, [r3, #88]
1342:Lib/soes/src/esc.c ****    ESCvar.esc_hw_eep_handler = cfg->esc_hw_eep_handler;
 3959              		.loc 1 1342 4 is_stmt 1 view .LVU1099
 3960              		.loc 1 1342 35 is_stmt 0 view .LVU1100
 3961 0078 516C     		ldr	r1, [r2, #68]
 3962              		.loc 1 1342 30 view .LVU1101
 3963 007a D965     		str	r1, [r3, #92]
1343:Lib/soes/src/esc.c ****    ESCvar.esc_check_dc_handler = cfg->esc_check_dc_handler;
 3964              		.loc 1 1343 4 is_stmt 1 view .LVU1102
 3965              		.loc 1 1343 37 is_stmt 0 view .LVU1103
 3966 007c 916C     		ldr	r1, [r2, #72]
 3967              		.loc 1 1343 32 view .LVU1104
 3968 007e 1966     		str	r1, [r3, #96]
1344:Lib/soes/src/esc.c ****    ESCvar.get_device_id = cfg->get_device_id;
 3969              		.loc 1 1344 4 is_stmt 1 view .LVU1105
 3970              		.loc 1 1344 30 is_stmt 0 view .LVU1106
 3971 0080 D26C     		ldr	r2, [r2, #76]
 3972              	.LVL275:
 3973              		.loc 1 1344 25 view .LVU1107
 3974 0082 5A66     		str	r2, [r3, #100]
1345:Lib/soes/src/esc.c **** }
 3975              		.loc 1 1345 1 view .LVU1108
 3976 0084 7047     		bx	lr
 3977              	.L309:
 3978 0086 00BF     		.align	2
 3979              	.L308:
 3980 0088 00000000 		.word	ESCvar
 3981 008c 00000000 		.word	.LANCHOR1
 3982 0090 00000000 		.word	.LANCHOR2
 3983 0094 00000000 		.word	.LANCHOR3
 3984 0098 00000000 		.word	.LANCHOR4
 3985              		.cfi_endproc
 3986              	.LFE39:
 3988              		.global	as_all
 3989              		.section	.bss.as_all,"aw",%nobits
 3990              		.set	.LANCHOR0,. + 0
 3993              	as_all:
 3994 0000 00       		.space	1
 3995              		.section	.rodata.mb0.3,"a"
 3996              		.align	2
 3997              		.set	.LANCHOR1,. + 0
 4000              	mb0.3:
 4001 0000 0010     		.short	4096
 4002 0002 0002     		.short	512
 4003 0004 FF11     		.short	4607
 4004 0006 26       		.byte	38
ARM GAS  /tmp/ccoKziDo.s 			page 110


 4005 0007 00       		.byte	0
 4006              		.section	.rodata.mb1.2,"a"
 4007              		.align	2
 4008              		.set	.LANCHOR2,. + 0
 4011              	mb1.2:
 4012 0000 0012     		.short	4608
 4013 0002 0002     		.short	512
 4014 0004 FF13     		.short	5119
 4015 0006 22       		.byte	34
 4016 0007 00       		.byte	0
 4017              		.section	.rodata.mbboot0.1,"a"
 4018              		.align	2
 4019              		.set	.LANCHOR3,. + 0
 4022              	mbboot0.1:
 4023 0000 0010     		.short	4096
 4024 0002 0002     		.short	512
 4025 0004 FF11     		.short	4607
 4026 0006 26       		.byte	38
 4027 0007 00       		.byte	0
 4028              		.section	.rodata.mbboot1.0,"a"
 4029              		.align	2
 4030              		.set	.LANCHOR4,. + 0
 4033              	mbboot1.0:
 4034 0000 0012     		.short	4608
 4035 0002 0002     		.short	512
 4036 0004 FF13     		.short	5119
 4037 0006 22       		.byte	34
 4038 0007 00       		.byte	0
 4039              		.text
 4040              	.Letext0:
 4041              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 4042              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 4043              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 4044              		.file 5 "Lib/soes/include/esc_coe.h"
 4045              		.file 6 "Lib/soes/include/esc.h"
ARM GAS  /tmp/ccoKziDo.s 			page 111


DEFINED SYMBOLS
                            *ABS*:0000000000000000 esc.c
     /tmp/ccoKziDo.s:20     .text.ESC_check_id_request:0000000000000000 $t
     /tmp/ccoKziDo.s:25     .text.ESC_check_id_request:0000000000000000 ESC_check_id_request
     /tmp/ccoKziDo.s:118    .text.ESC_ALerror:0000000000000000 $t
     /tmp/ccoKziDo.s:124    .text.ESC_ALerror:0000000000000000 ESC_ALerror
     /tmp/ccoKziDo.s:161    .text.ESC_ALerror:0000000000000024 $d
     /tmp/ccoKziDo.s:166    .text.ESC_load_device_id:0000000000000000 $t
     /tmp/ccoKziDo.s:171    .text.ESC_load_device_id:0000000000000000 ESC_load_device_id
     /tmp/ccoKziDo.s:235    .text.ESC_load_device_id:000000000000003c $d
     /tmp/ccoKziDo.s:240    .text.ESC_ALstatus:0000000000000000 $t
     /tmp/ccoKziDo.s:246    .text.ESC_ALstatus:0000000000000000 ESC_ALstatus
     /tmp/ccoKziDo.s:283    .text.ESC_ALstatus:0000000000000024 $d
     /tmp/ccoKziDo.s:288    .text.ESC_ALeventmaskwrite:0000000000000000 $t
     /tmp/ccoKziDo.s:294    .text.ESC_ALeventmaskwrite:0000000000000000 ESC_ALeventmaskwrite
     /tmp/ccoKziDo.s:328    .text.ESC_ALeventmaskread:0000000000000000 $t
     /tmp/ccoKziDo.s:334    .text.ESC_ALeventmaskread:0000000000000000 ESC_ALeventmaskread
     /tmp/ccoKziDo.s:363    .text.ESC_ALeventwrite:0000000000000000 $t
     /tmp/ccoKziDo.s:369    .text.ESC_ALeventwrite:0000000000000000 ESC_ALeventwrite
     /tmp/ccoKziDo.s:403    .text.ESC_ALeventread:0000000000000000 $t
     /tmp/ccoKziDo.s:409    .text.ESC_ALeventread:0000000000000000 ESC_ALeventread
     /tmp/ccoKziDo.s:438    .text.ESC_SMack:0000000000000000 $t
     /tmp/ccoKziDo.s:444    .text.ESC_SMack:0000000000000000 ESC_SMack
     /tmp/ccoKziDo.s:477    .text.ESC_SMstatus:0000000000000000 $t
     /tmp/ccoKziDo.s:483    .text.ESC_SMstatus:0000000000000000 ESC_SMstatus
     /tmp/ccoKziDo.s:519    .text.ESC_SMstatus:000000000000001c $d
     /tmp/ccoKziDo.s:524    .text.ESC_SMwritepdi:0000000000000000 $t
     /tmp/ccoKziDo.s:530    .text.ESC_SMwritepdi:0000000000000000 ESC_SMwritepdi
     /tmp/ccoKziDo.s:566    .text.ESC_SMwritepdi:000000000000001c $d
     /tmp/ccoKziDo.s:571    .text.ESC_SMenable:0000000000000000 $t
     /tmp/ccoKziDo.s:577    .text.ESC_SMenable:0000000000000000 ESC_SMenable
     /tmp/ccoKziDo.s:609    .text.ESC_SMenable:000000000000001c $d
     /tmp/ccoKziDo.s:614    .text.ESC_SMdisable:0000000000000000 $t
     /tmp/ccoKziDo.s:620    .text.ESC_SMdisable:0000000000000000 ESC_SMdisable
     /tmp/ccoKziDo.s:652    .text.ESC_SMdisable:000000000000001c $d
     /tmp/ccoKziDo.s:657    .text.ESC_address:0000000000000000 $t
     /tmp/ccoKziDo.s:663    .text.ESC_address:0000000000000000 ESC_address
     /tmp/ccoKziDo.s:685    .text.ESC_address:0000000000000010 $d
     /tmp/ccoKziDo.s:690    .text.ESC_WDstatus:0000000000000000 $t
     /tmp/ccoKziDo.s:696    .text.ESC_WDstatus:0000000000000000 ESC_WDstatus
     /tmp/ccoKziDo.s:726    .text.ESC_SYNCactivation:0000000000000000 $t
     /tmp/ccoKziDo.s:732    .text.ESC_SYNCactivation:0000000000000000 ESC_SYNCactivation
     /tmp/ccoKziDo.s:761    .text.ESC_SYNC0cycletime:0000000000000000 $t
     /tmp/ccoKziDo.s:767    .text.ESC_SYNC0cycletime:0000000000000000 ESC_SYNC0cycletime
     /tmp/ccoKziDo.s:797    .text.ESC_SYNC1cycletime:0000000000000000 $t
     /tmp/ccoKziDo.s:803    .text.ESC_SYNC1cycletime:0000000000000000 ESC_SYNC1cycletime
     /tmp/ccoKziDo.s:833    .text.ESC_checkDC:0000000000000000 $t
     /tmp/ccoKziDo.s:839    .text.ESC_checkDC:0000000000000000 ESC_checkDC
     /tmp/ccoKziDo.s:900    .text.ESC_checkDC:0000000000000028 $d
     /tmp/ccoKziDo.s:905    .text.ESC_checkmbx:0000000000000000 $t
     /tmp/ccoKziDo.s:911    .text.ESC_checkmbx:0000000000000000 ESC_checkmbx
     /tmp/ccoKziDo.s:1056   .text.ESC_checkmbx:00000000000000b4 $d
     /tmp/ccoKziDo.s:1062   .text.ESC_startmbx:0000000000000000 $t
     /tmp/ccoKziDo.s:1068   .text.ESC_startmbx:0000000000000000 ESC_startmbx
     /tmp/ccoKziDo.s:1156   .text.ESC_startmbx:0000000000000064 $d
     /tmp/ccoKziDo.s:1161   .text.ESC_startmbxboot:0000000000000000 $t
     /tmp/ccoKziDo.s:1167   .text.ESC_startmbxboot:0000000000000000 ESC_startmbxboot
ARM GAS  /tmp/ccoKziDo.s 			page 112


     /tmp/ccoKziDo.s:1255   .text.ESC_startmbxboot:0000000000000068 $d
     /tmp/ccoKziDo.s:1260   .text.ESC_stopmbx:0000000000000000 $t
     /tmp/ccoKziDo.s:1266   .text.ESC_stopmbx:0000000000000000 ESC_stopmbx
     /tmp/ccoKziDo.s:1361   .text.ESC_stopmbx:0000000000000064 $d
     /tmp/ccoKziDo.s:1367   .text.ESC_readmbx:0000000000000000 $t
     /tmp/ccoKziDo.s:1373   .text.ESC_readmbx:0000000000000000 ESC_readmbx
     /tmp/ccoKziDo.s:1464   .text.ESC_readmbx:0000000000000064 $d
     /tmp/ccoKziDo.s:1472   .text.ESC_writembx:0000000000000000 $t
     /tmp/ccoKziDo.s:1478   .text.ESC_writembx:0000000000000000 ESC_writembx
     /tmp/ccoKziDo.s:1564   .text.ESC_writembx:0000000000000054 $d
     /tmp/ccoKziDo.s:1570   .text.ESC_ackmbxread:0000000000000000 $t
     /tmp/ccoKziDo.s:1576   .text.ESC_ackmbxread:0000000000000000 ESC_ackmbxread
     /tmp/ccoKziDo.s:1614   .text.ESC_ackmbxread:0000000000000024 $d
     /tmp/ccoKziDo.s:1619   .text.ESC_claimbuffer:0000000000000000 $t
     /tmp/ccoKziDo.s:1625   .text.ESC_claimbuffer:0000000000000000 ESC_claimbuffer
     /tmp/ccoKziDo.s:1734   .text.ESC_claimbuffer:0000000000000074 $d
     /tmp/ccoKziDo.s:1741   .text.ESC_outreqbuffer:0000000000000000 $t
     /tmp/ccoKziDo.s:1747   .text.ESC_outreqbuffer:0000000000000000 ESC_outreqbuffer
     /tmp/ccoKziDo.s:1786   .text.ESC_outreqbuffer:0000000000000014 $d
     /tmp/ccoKziDo.s:1791   .text.MBX_error:0000000000000000 $t
     /tmp/ccoKziDo.s:1797   .text.MBX_error:0000000000000000 MBX_error
     /tmp/ccoKziDo.s:1865   .text.MBX_error:0000000000000044 $d
     /tmp/ccoKziDo.s:1872   .text.ESC_mbxprocess:0000000000000000 $t
     /tmp/ccoKziDo.s:1878   .text.ESC_mbxprocess:0000000000000000 ESC_mbxprocess
     /tmp/ccoKziDo.s:2213   .text.ESC_mbxprocess:00000000000001c0 $d
     /tmp/ccoKziDo.s:2220   .text.ESC_xoeprocess:0000000000000000 $t
     /tmp/ccoKziDo.s:2226   .text.ESC_xoeprocess:0000000000000000 ESC_xoeprocess
     /tmp/ccoKziDo.s:2294   .text.ESC_xoeprocess:0000000000000044 $d
     /tmp/ccoKziDo.s:2301   .text.ESC_checkSM23:0000000000000000 $t
     /tmp/ccoKziDo.s:2307   .text.ESC_checkSM23:0000000000000000 ESC_checkSM23
     /tmp/ccoKziDo.s:2495   .text.ESC_checkSM23:00000000000000e8 $d
     /tmp/ccoKziDo.s:2502   .text.ESC_startinput:0000000000000000 $t
     /tmp/ccoKziDo.s:2508   .text.ESC_startinput:0000000000000000 ESC_startinput
     /tmp/ccoKziDo.s:2680   .text.ESC_startinput:00000000000000b4 $d
     /tmp/ccoKziDo.s:2688   .text.ESC_stopinput:0000000000000000 $t
     /tmp/ccoKziDo.s:2694   .text.ESC_stopinput:0000000000000000 ESC_stopinput
     /tmp/ccoKziDo.s:2738   .text.ESC_stopinput:0000000000000034 $d
     /tmp/ccoKziDo.s:2743   .text.ESC_startoutput:0000000000000000 $t
     /tmp/ccoKziDo.s:2749   .text.ESC_startoutput:0000000000000000 ESC_startoutput
     /tmp/ccoKziDo.s:2796   .text.ESC_startoutput:0000000000000034 $d
     /tmp/ccoKziDo.s:2802   .text.ESC_stopoutput:0000000000000000 $t
     /tmp/ccoKziDo.s:2808   .text.ESC_stopoutput:0000000000000000 ESC_stopoutput
     /tmp/ccoKziDo.s:2840   .text.ESC_stopoutput:0000000000000028 $d
     /tmp/ccoKziDo.s:2845   .text.ESC_ALstatusgotoerror:0000000000000000 $t
     /tmp/ccoKziDo.s:2851   .text.ESC_ALstatusgotoerror:0000000000000000 ESC_ALstatusgotoerror
     /tmp/ccoKziDo.s:2960   .text.ESC_ALstatusgotoerror:0000000000000074 $d
     /tmp/ccoKziDo.s:2966   .text.ESC_sm_act_event:0000000000000000 $t
     /tmp/ccoKziDo.s:2972   .text.ESC_sm_act_event:0000000000000000 ESC_sm_act_event
     /tmp/ccoKziDo.s:3185   .text.ESC_sm_act_event:000000000000010c $d
     /tmp/ccoKziDo.s:3191   .text.ESC_state:0000000000000000 $t
     /tmp/ccoKziDo.s:3197   .text.ESC_state:0000000000000000 ESC_state
     /tmp/ccoKziDo.s:3304   .text.ESC_state:0000000000000092 $d
     /tmp/ccoKziDo.s:3424   .text.ESC_state:0000000000000182 $t
     /tmp/ccoKziDo.s:3626   .text.ESC_state:0000000000000290 $d
     /tmp/ccoKziDo.s:3636   .text.ESC_state:00000000000002ac $t
     /tmp/ccoKziDo.s:3827   .text.ESC_state:00000000000003b0 $d
     /tmp/ccoKziDo.s:3832   .text.ESC_config:0000000000000000 $t
ARM GAS  /tmp/ccoKziDo.s 			page 113


     /tmp/ccoKziDo.s:3838   .text.ESC_config:0000000000000000 ESC_config
     /tmp/ccoKziDo.s:3980   .text.ESC_config:0000000000000088 $d
     /tmp/ccoKziDo.s:3993   .bss.as_all:0000000000000000 as_all
     /tmp/ccoKziDo.s:3994   .bss.as_all:0000000000000000 $d
     /tmp/ccoKziDo.s:3996   .rodata.mb0.3:0000000000000000 $d
     /tmp/ccoKziDo.s:4000   .rodata.mb0.3:0000000000000000 mb0.3
     /tmp/ccoKziDo.s:4007   .rodata.mb1.2:0000000000000000 $d
     /tmp/ccoKziDo.s:4011   .rodata.mb1.2:0000000000000000 mb1.2
     /tmp/ccoKziDo.s:4018   .rodata.mbboot0.1:0000000000000000 $d
     /tmp/ccoKziDo.s:4022   .rodata.mbboot0.1:0000000000000000 mbboot0.1
     /tmp/ccoKziDo.s:4029   .rodata.mbboot1.0:0000000000000000 $d
     /tmp/ccoKziDo.s:4033   .rodata.mbboot1.0:0000000000000000 mbboot1.0

UNDEFINED SYMBOLS
ESC_read
ESC_write
ESCvar
MBXcontrol
MBX
APP_safeoutput
sizeOfPDO
SMmap2
SMmap3
