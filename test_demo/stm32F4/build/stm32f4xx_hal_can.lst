ARM GAS  /tmp/cc21oG54.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  20              		.align	1
  21              		.weak	HAL_CAN_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_CAN_MspInit:
  27              	.LVL0:
  28              	.LFB132:
  29              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @file    stm32f4xx_hal_can.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @attention
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  /tmp/cc21oG54.s 			page 2


  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           functions:
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           messages.
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           can be used:
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==============================
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
ARM GAS  /tmp/cc21oG54.s 			page 3


  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ================================
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           here.
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==================
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           be completed.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   =============================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
ARM GAS  /tmp/cc21oG54.s 			page 4


 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   weak function.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /tmp/cc21oG54.s 			page 5


 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #include "stm32f4xx_hal.h"
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @addtogroup STM32F4xx_HAL_Driver
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
ARM GAS  /tmp/cc21oG54.s 			page 6


 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
ARM GAS  /tmp/cc21oG54.s 			page 7


 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Request initialisation */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Exit from sleep mode */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
ARM GAS  /tmp/cc21oG54.s 			page 8


 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
ARM GAS  /tmp/cc21oG54.s 			page 9


 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the bit timing register */
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the error code */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the CAN state */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         reset values.
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Stop the CAN module */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc21oG54.s 			page 10


 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN peripheral */
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Change CAN state */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
  30              		.loc 1 507 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
  35              		.loc 1 509 3 view .LVU1
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
  36              		.loc 1 514 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE132:
  41              		.section	.text.HAL_CAN_Init,"ax",%progbits
  42              		.align	1
  43              		.global	HAL_CAN_Init
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HAL_CAN_Init:
  49              	.LVL1:
  50              	.LFB130:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  51              		.loc 1 275 1 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  55              		.loc 1 276 3 view .LVU4
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  56              		.loc 1 279 3 view .LVU5
ARM GAS  /tmp/cc21oG54.s 			page 11


 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  57              		.loc 1 279 6 is_stmt 0 view .LVU6
  58 0000 0028     		cmp	r0, #0
  59 0002 00F0A180 		beq	.L21
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
  60              		.loc 1 275 1 view .LVU7
  61 0006 38B5     		push	{r3, r4, r5, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 3, -16
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0008 0446     		mov	r4, r0
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
  68              		.loc 1 285 3 is_stmt 1 view .LVU8
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
  69              		.loc 1 286 3 view .LVU9
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
  70              		.loc 1 287 3 view .LVU10
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
  71              		.loc 1 288 3 view .LVU11
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
  72              		.loc 1 289 3 view .LVU12
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
  73              		.loc 1 290 3 view .LVU13
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
  74              		.loc 1 291 3 view .LVU14
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
  75              		.loc 1 292 3 view .LVU15
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
  76              		.loc 1 293 3 view .LVU16
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
  77              		.loc 1 294 3 view .LVU17
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
  78              		.loc 1 295 3 view .LVU18
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  79              		.loc 1 296 3 view .LVU19
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  80              		.loc 1 326 3 view .LVU20
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  81              		.loc 1 326 11 is_stmt 0 view .LVU21
  82 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  83              		.loc 1 326 6 view .LVU22
  84 000e D3B1     		cbz	r3, .L26
  85              	.LVL2:
  86              	.L4:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  87              		.loc 1 334 3 is_stmt 1 view .LVU23
  88 0010 2268     		ldr	r2, [r4]
  89 0012 1368     		ldr	r3, [r2]
  90 0014 43F00103 		orr	r3, r3, #1
  91 0018 1360     		str	r3, [r2]
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92              		.loc 1 337 3 view .LVU24
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  93              		.loc 1 337 15 is_stmt 0 view .LVU25
ARM GAS  /tmp/cc21oG54.s 			page 12


  94 001a FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL3:
  96 001e 0546     		mov	r5, r0
  97              	.LVL4:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
  98              		.loc 1 340 3 is_stmt 1 view .LVU26
  99              	.L5:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 100              		.loc 1 340 9 view .LVU27
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 101              		.loc 1 340 15 is_stmt 0 view .LVU28
 102 0020 2368     		ldr	r3, [r4]
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 103              		.loc 1 340 25 view .LVU29
 104 0022 5A68     		ldr	r2, [r3, #4]
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 105              		.loc 1 340 9 view .LVU30
 106 0024 12F0010F 		tst	r2, #1
 107 0028 10D1     		bne	.L27
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 108              		.loc 1 342 5 is_stmt 1 view .LVU31
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 109              		.loc 1 342 10 is_stmt 0 view .LVU32
 110 002a FFF7FEFF 		bl	HAL_GetTick
 111              	.LVL5:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 112              		.loc 1 342 24 view .LVU33
 113 002e 401B     		subs	r0, r0, r5
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 114              		.loc 1 342 8 view .LVU34
 115 0030 0A28     		cmp	r0, #10
 116 0032 F5D9     		bls	.L5
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 117              		.loc 1 345 7 is_stmt 1 view .LVU35
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 118              		.loc 1 345 23 is_stmt 0 view .LVU36
 119 0034 636A     		ldr	r3, [r4, #36]
 120 0036 43F40033 		orr	r3, r3, #131072
 121 003a 6362     		str	r3, [r4, #36]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 122              		.loc 1 348 7 is_stmt 1 view .LVU37
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 123              		.loc 1 348 19 is_stmt 0 view .LVU38
 124 003c 0523     		movs	r3, #5
 125 003e 84F82030 		strb	r3, [r4, #32]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 126              		.loc 1 350 7 is_stmt 1 view .LVU39
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 127              		.loc 1 350 14 is_stmt 0 view .LVU40
 128 0042 0120     		movs	r0, #1
 129              	.L3:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 130              		.loc 1 450 1 view .LVU41
 131 0044 38BD     		pop	{r3, r4, r5, pc}
 132              	.LVL6:
 133              	.L26:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  /tmp/cc21oG54.s 			page 13


 134              		.loc 1 329 5 is_stmt 1 view .LVU42
 135 0046 FFF7FEFF 		bl	HAL_CAN_MspInit
 136              	.LVL7:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 137              		.loc 1 329 5 is_stmt 0 view .LVU43
 138 004a E1E7     		b	.L4
 139              	.LVL8:
 140              	.L27:
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 141              		.loc 1 355 3 is_stmt 1 view .LVU44
 142 004c 1A68     		ldr	r2, [r3]
 143 004e 22F00202 		bic	r2, r2, #2
 144 0052 1A60     		str	r2, [r3]
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 145              		.loc 1 358 3 view .LVU45
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 146              		.loc 1 358 15 is_stmt 0 view .LVU46
 147 0054 FFF7FEFF 		bl	HAL_GetTick
 148              	.LVL9:
 149 0058 0546     		mov	r5, r0
 150              	.LVL10:
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 151              		.loc 1 361 3 is_stmt 1 view .LVU47
 152              	.L7:
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 153              		.loc 1 361 9 view .LVU48
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 154              		.loc 1 361 15 is_stmt 0 view .LVU49
 155 005a 2368     		ldr	r3, [r4]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 156              		.loc 1 361 25 view .LVU50
 157 005c 5A68     		ldr	r2, [r3, #4]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 158              		.loc 1 361 9 view .LVU51
 159 005e 12F0020F 		tst	r2, #2
 160 0062 0DD0     		beq	.L28
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 161              		.loc 1 363 5 is_stmt 1 view .LVU52
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 162              		.loc 1 363 10 is_stmt 0 view .LVU53
 163 0064 FFF7FEFF 		bl	HAL_GetTick
 164              	.LVL11:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 165              		.loc 1 363 24 view .LVU54
 166 0068 401B     		subs	r0, r0, r5
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 167              		.loc 1 363 8 view .LVU55
 168 006a 0A28     		cmp	r0, #10
 169 006c F5D9     		bls	.L7
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 170              		.loc 1 366 7 is_stmt 1 view .LVU56
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 171              		.loc 1 366 23 is_stmt 0 view .LVU57
 172 006e 636A     		ldr	r3, [r4, #36]
 173 0070 43F40033 		orr	r3, r3, #131072
 174 0074 6362     		str	r3, [r4, #36]
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 14


 175              		.loc 1 369 7 is_stmt 1 view .LVU58
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 176              		.loc 1 369 19 is_stmt 0 view .LVU59
 177 0076 0523     		movs	r3, #5
 178 0078 84F82030 		strb	r3, [r4, #32]
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 179              		.loc 1 371 7 is_stmt 1 view .LVU60
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 180              		.loc 1 371 14 is_stmt 0 view .LVU61
 181 007c 0120     		movs	r0, #1
 182 007e E1E7     		b	.L3
 183              	.L28:
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 184              		.loc 1 376 3 is_stmt 1 view .LVU62
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 185              		.loc 1 376 17 is_stmt 0 view .LVU63
 186 0080 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 187              		.loc 1 376 6 view .LVU64
 188 0082 012A     		cmp	r2, #1
 189 0084 3DD0     		beq	.L29
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 190              		.loc 1 382 5 is_stmt 1 view .LVU65
 191 0086 1A68     		ldr	r2, [r3]
 192 0088 22F08002 		bic	r2, r2, #128
 193 008c 1A60     		str	r2, [r3]
 194              	.L10:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 195              		.loc 1 386 3 view .LVU66
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 196              		.loc 1 386 17 is_stmt 0 view .LVU67
 197 008e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 198              		.loc 1 386 6 view .LVU68
 199 0090 012B     		cmp	r3, #1
 200 0092 3BD0     		beq	.L30
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 201              		.loc 1 392 5 is_stmt 1 view .LVU69
 202 0094 2268     		ldr	r2, [r4]
 203 0096 1368     		ldr	r3, [r2]
 204 0098 23F04003 		bic	r3, r3, #64
 205 009c 1360     		str	r3, [r2]
 206              	.L12:
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 207              		.loc 1 396 3 view .LVU70
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 208              		.loc 1 396 17 is_stmt 0 view .LVU71
 209 009e A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 210              		.loc 1 396 6 view .LVU72
 211 00a0 012B     		cmp	r3, #1
 212 00a2 39D0     		beq	.L31
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 213              		.loc 1 402 5 is_stmt 1 view .LVU73
 214 00a4 2268     		ldr	r2, [r4]
 215 00a6 1368     		ldr	r3, [r2]
 216 00a8 23F02003 		bic	r3, r3, #32
ARM GAS  /tmp/cc21oG54.s 			page 15


 217 00ac 1360     		str	r3, [r2]
 218              	.L14:
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 219              		.loc 1 406 3 view .LVU74
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 220              		.loc 1 406 17 is_stmt 0 view .LVU75
 221 00ae E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 222              		.loc 1 406 6 view .LVU76
 223 00b0 012B     		cmp	r3, #1
 224 00b2 37D0     		beq	.L32
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 225              		.loc 1 412 5 is_stmt 1 view .LVU77
 226 00b4 2268     		ldr	r2, [r4]
 227 00b6 1368     		ldr	r3, [r2]
 228 00b8 43F01003 		orr	r3, r3, #16
 229 00bc 1360     		str	r3, [r2]
 230              	.L16:
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 231              		.loc 1 416 3 view .LVU78
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 232              		.loc 1 416 17 is_stmt 0 view .LVU79
 233 00be 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 234              		.loc 1 416 6 view .LVU80
 235 00c0 012B     		cmp	r3, #1
 236 00c2 35D0     		beq	.L33
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 237              		.loc 1 422 5 is_stmt 1 view .LVU81
 238 00c4 2268     		ldr	r2, [r4]
 239 00c6 1368     		ldr	r3, [r2]
 240 00c8 23F00803 		bic	r3, r3, #8
 241 00cc 1360     		str	r3, [r2]
 242              	.L18:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 243              		.loc 1 426 3 view .LVU82
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 244              		.loc 1 426 17 is_stmt 0 view .LVU83
 245 00ce 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 246              		.loc 1 426 6 view .LVU84
 247 00d0 012B     		cmp	r3, #1
 248 00d2 33D0     		beq	.L34
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 249              		.loc 1 432 5 is_stmt 1 view .LVU85
 250 00d4 2268     		ldr	r2, [r4]
 251 00d6 1368     		ldr	r3, [r2]
 252 00d8 23F00403 		bic	r3, r3, #4
 253 00dc 1360     		str	r3, [r2]
 254              	.L20:
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 255              		.loc 1 436 3 view .LVU86
 256 00de A368     		ldr	r3, [r4, #8]
 257 00e0 E268     		ldr	r2, [r4, #12]
 258 00e2 1343     		orrs	r3, r3, r2
 259 00e4 2269     		ldr	r2, [r4, #16]
 260 00e6 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cc21oG54.s 			page 16


 261 00e8 6269     		ldr	r2, [r4, #20]
 262 00ea 1343     		orrs	r3, r3, r2
 263 00ec 6268     		ldr	r2, [r4, #4]
 264 00ee 013A     		subs	r2, r2, #1
 265 00f0 2168     		ldr	r1, [r4]
 266 00f2 1343     		orrs	r3, r3, r2
 267 00f4 CB61     		str	r3, [r1, #28]
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 268              		.loc 1 443 3 view .LVU87
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 269              		.loc 1 443 19 is_stmt 0 view .LVU88
 270 00f6 0020     		movs	r0, #0
 271 00f8 6062     		str	r0, [r4, #36]
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 272              		.loc 1 446 3 is_stmt 1 view .LVU89
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 273              		.loc 1 446 15 is_stmt 0 view .LVU90
 274 00fa 0123     		movs	r3, #1
 275 00fc 84F82030 		strb	r3, [r4, #32]
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 276              		.loc 1 449 3 is_stmt 1 view .LVU91
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 277              		.loc 1 449 10 is_stmt 0 view .LVU92
 278 0100 A0E7     		b	.L3
 279              	.L29:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 280              		.loc 1 378 5 is_stmt 1 view .LVU93
 281 0102 1A68     		ldr	r2, [r3]
 282 0104 42F08002 		orr	r2, r2, #128
 283 0108 1A60     		str	r2, [r3]
 284 010a C0E7     		b	.L10
 285              	.L30:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 286              		.loc 1 388 5 view .LVU94
 287 010c 2268     		ldr	r2, [r4]
 288 010e 1368     		ldr	r3, [r2]
 289 0110 43F04003 		orr	r3, r3, #64
 290 0114 1360     		str	r3, [r2]
 291 0116 C2E7     		b	.L12
 292              	.L31:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 293              		.loc 1 398 5 view .LVU95
 294 0118 2268     		ldr	r2, [r4]
 295 011a 1368     		ldr	r3, [r2]
 296 011c 43F02003 		orr	r3, r3, #32
 297 0120 1360     		str	r3, [r2]
 298 0122 C4E7     		b	.L14
 299              	.L32:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 300              		.loc 1 408 5 view .LVU96
 301 0124 2268     		ldr	r2, [r4]
 302 0126 1368     		ldr	r3, [r2]
 303 0128 23F01003 		bic	r3, r3, #16
 304 012c 1360     		str	r3, [r2]
 305 012e C6E7     		b	.L16
 306              	.L33:
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  /tmp/cc21oG54.s 			page 17


 307              		.loc 1 418 5 view .LVU97
 308 0130 2268     		ldr	r2, [r4]
 309 0132 1368     		ldr	r3, [r2]
 310 0134 43F00803 		orr	r3, r3, #8
 311 0138 1360     		str	r3, [r2]
 312 013a C8E7     		b	.L18
 313              	.L34:
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 314              		.loc 1 428 5 view .LVU98
 315 013c 2268     		ldr	r2, [r4]
 316 013e 1368     		ldr	r3, [r2]
 317 0140 43F00403 		orr	r3, r3, #4
 318 0144 1360     		str	r3, [r2]
 319 0146 CAE7     		b	.L20
 320              	.LVL12:
 321              	.L21:
 322              		.cfi_def_cfa_offset 0
 323              		.cfi_restore 3
 324              		.cfi_restore 4
 325              		.cfi_restore 5
 326              		.cfi_restore 14
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 327              		.loc 1 281 12 is_stmt 0 view .LVU99
 328 0148 0120     		movs	r0, #1
 329              	.LVL13:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 330              		.loc 1 450 1 view .LVU100
 331 014a 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE130:
 335              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 336              		.align	1
 337              		.weak	HAL_CAN_MspDeInit
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	HAL_CAN_MspDeInit:
 343              	.LVL14:
 344              	.LFB133:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 345              		.loc 1 523 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 350              		.loc 1 525 3 view .LVU102
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 18


 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 351              		.loc 1 530 1 is_stmt 0 view .LVU103
 352 0000 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE133:
 356              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_CAN_ConfigFilter
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	HAL_CAN_ConfigFilter:
 364              	.LVL15:
 365              	.LFB134:
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pCallback == NULL)
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
ARM GAS  /tmp/cc21oG54.s 			page 19


 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
ARM GAS  /tmp/cc21oG54.s 			page 20


 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
ARM GAS  /tmp/cc21oG54.s 			page 21


 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
ARM GAS  /tmp/cc21oG54.s 			page 22


 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
ARM GAS  /tmp/cc21oG54.s 			page 23


 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Configuration functions.
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Configuration functions #####
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         contains the filter configuration information.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, CAN_FilterTypeDef *sFilterConfig)
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 366              		.loc 1 839 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 370              		.loc 1 840 3 view .LVU105
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 371              		.loc 1 841 3 view .LVU106
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 372              		.loc 1 842 3 view .LVU107
 373              		.loc 1 842 24 is_stmt 0 view .LVU108
 374 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 375              	.LVL16:
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 376              		.loc 1 844 3 is_stmt 1 view .LVU109
ARM GAS  /tmp/cc21oG54.s 			page 24


 377              		.loc 1 844 38 is_stmt 0 view .LVU110
 378 0004 013B     		subs	r3, r3, #1
 379              	.LVL17:
 380              		.loc 1 844 38 view .LVU111
 381 0006 DBB2     		uxtb	r3, r3
 382              		.loc 1 844 6 view .LVU112
 383 0008 012B     		cmp	r3, #1
 384 000a 05D9     		bls	.L50
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->Instance == CAN3)
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select master instance to access the filter banks */
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip = CAN1;
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     can_ip = CAN1;
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Initialisation mode for the filter */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 25


 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (can_ip == CAN1)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Convert filter number into bit position */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Deactivation */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Scale */
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 16-bit scale for the filter */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit scale for the filter */
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Mode */
ARM GAS  /tmp/cc21oG54.s 			page 26


 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter FIFO assignment */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter activation */
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 385              		.loc 1 989 5 is_stmt 1 view .LVU113
 386              		.loc 1 989 21 is_stmt 0 view .LVU114
 387 000c 436A     		ldr	r3, [r0, #36]
 388 000e 43F48023 		orr	r3, r3, #262144
 389 0012 4362     		str	r3, [r0, #36]
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 390              		.loc 1 991 5 is_stmt 1 view .LVU115
 391              		.loc 1 991 12 is_stmt 0 view .LVU116
 392 0014 0120     		movs	r0, #1
 393              	.LVL18:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 394              		.loc 1 993 1 view .LVU117
 395 0016 7047     		bx	lr
 396              	.LVL19:
 397              	.L50:
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
ARM GAS  /tmp/cc21oG54.s 			page 27


 398              		.loc 1 839 1 view .LVU118
 399 0018 30B5     		push	{r4, r5, lr}
 400              		.cfi_def_cfa_offset 12
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 404              		.loc 1 848 5 is_stmt 1 view .LVU119
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 405              		.loc 1 849 5 view .LVU120
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 406              		.loc 1 850 5 view .LVU121
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 407              		.loc 1 851 5 view .LVU122
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 408              		.loc 1 852 5 view .LVU123
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 409              		.loc 1 853 5 view .LVU124
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 410              		.loc 1 854 5 view .LVU125
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 411              		.loc 1 855 5 view .LVU126
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 412              		.loc 1 879 5 view .LVU127
 413              	.LVL20:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 414              		.loc 1 882 5 view .LVU128
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 415              		.loc 1 883 5 view .LVU129
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 416              		.loc 1 892 5 view .LVU130
 417 001a 464B     		ldr	r3, .L53
 418 001c D3F80022 		ldr	r2, [r3, #512]
 419 0020 42F00102 		orr	r2, r2, #1
 420 0024 C3F80022 		str	r2, [r3, #512]
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 421              		.loc 1 905 5 view .LVU131
 422 0028 D3F80022 		ldr	r2, [r3, #512]
 423 002c 22F47C52 		bic	r2, r2, #16128
 424 0030 C3F80022 		str	r2, [r3, #512]
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 425              		.loc 1 906 5 view .LVU132
 426 0034 D3F80022 		ldr	r2, [r3, #512]
 427 0038 486A     		ldr	r0, [r1, #36]
 428              	.LVL21:
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 429              		.loc 1 906 5 is_stmt 0 view .LVU133
 430 003a 42EA0022 		orr	r2, r2, r0, lsl #8
 431 003e C3F80022 		str	r2, [r3, #512]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 432              		.loc 1 910 5 is_stmt 1 view .LVU134
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 433              		.loc 1 910 52 is_stmt 0 view .LVU135
 434 0042 4A69     		ldr	r2, [r1, #20]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 435              		.loc 1 910 65 view .LVU136
 436 0044 02F01F02 		and	r2, r2, #31
ARM GAS  /tmp/cc21oG54.s 			page 28


 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 437              		.loc 1 910 21 view .LVU137
 438 0048 0120     		movs	r0, #1
 439 004a 00FA02F2 		lsl	r2, r0, r2
 440              	.LVL22:
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 441              		.loc 1 913 5 is_stmt 1 view .LVU138
 442 004e D3F81C02 		ldr	r0, [r3, #540]
 443 0052 6FEA020C 		mvn	ip, r2
 444 0056 20EA0200 		bic	r0, r0, r2
 445 005a C3F81C02 		str	r0, [r3, #540]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 446              		.loc 1 916 5 view .LVU139
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 447              		.loc 1 916 22 is_stmt 0 view .LVU140
 448 005e CB69     		ldr	r3, [r1, #28]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 449              		.loc 1 916 8 view .LVU141
 450 0060 C3B9     		cbnz	r3, .L38
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 451              		.loc 1 919 7 is_stmt 1 view .LVU142
 452 0062 344B     		ldr	r3, .L53
 453 0064 D3F80C02 		ldr	r0, [r3, #524]
 454 0068 0CEA0000 		and	r0, ip, r0
 455 006c C3F80C02 		str	r0, [r3, #524]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 456              		.loc 1 923 7 view .LVU143
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 457              		.loc 1 925 22 is_stmt 0 view .LVU144
 458 0070 8C88     		ldrh	r4, [r1, #4]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 459              		.loc 1 923 44 view .LVU145
 460 0072 4869     		ldr	r0, [r1, #20]
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 461              		.loc 1 924 75 view .LVU146
 462 0074 CD68     		ldr	r5, [r1, #12]
 463 0076 44EA0544 		orr	r4, r4, r5, lsl #16
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 464              		.loc 1 923 62 view .LVU147
 465 007a 4830     		adds	r0, r0, #72
 466 007c 43F83040 		str	r4, [r3, r0, lsl #3]
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 467              		.loc 1 929 7 is_stmt 1 view .LVU148
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 468              		.loc 1 930 48 is_stmt 0 view .LVU149
 469 0080 8C68     		ldr	r4, [r1, #8]
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 470              		.loc 1 931 22 view .LVU150
 471 0082 0888     		ldrh	r0, [r1]
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 472              		.loc 1 930 76 view .LVU151
 473 0084 40EA0440 		orr	r0, r0, r4, lsl #16
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 474              		.loc 1 929 62 view .LVU152
 475 0088 4C69     		ldr	r4, [r1, #20]
 476 008a 04F1480E 		add	lr, r4, #72
 477 008e 03EBCE03 		add	r3, r3, lr, lsl #3
ARM GAS  /tmp/cc21oG54.s 			page 29


 478 0092 5860     		str	r0, [r3, #4]
 479              	.L38:
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 480              		.loc 1 934 5 is_stmt 1 view .LVU153
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 481              		.loc 1 934 22 is_stmt 0 view .LVU154
 482 0094 CB69     		ldr	r3, [r1, #28]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 483              		.loc 1 934 8 view .LVU155
 484 0096 012B     		cmp	r3, #1
 485 0098 1ED0     		beq	.L51
 486              	.L39:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 487              		.loc 1 951 5 is_stmt 1 view .LVU156
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 488              		.loc 1 951 22 is_stmt 0 view .LVU157
 489 009a 8B69     		ldr	r3, [r1, #24]
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 490              		.loc 1 951 8 view .LVU158
 491 009c 002B     		cmp	r3, #0
 492 009e 33D1     		bne	.L40
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 493              		.loc 1 954 7 is_stmt 1 view .LVU159
 494 00a0 2448     		ldr	r0, .L53
 495 00a2 D0F80432 		ldr	r3, [r0, #516]
 496 00a6 0CEA0303 		and	r3, ip, r3
 497 00aa C0F80432 		str	r3, [r0, #516]
 498              	.L41:
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 499              		.loc 1 963 5 view .LVU160
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 500              		.loc 1 963 22 is_stmt 0 view .LVU161
 501 00ae 0B69     		ldr	r3, [r1, #16]
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 502              		.loc 1 963 8 view .LVU162
 503 00b0 8BBB     		cbnz	r3, .L42
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 504              		.loc 1 966 7 is_stmt 1 view .LVU163
 505 00b2 2048     		ldr	r0, .L53
 506 00b4 D0F81432 		ldr	r3, [r0, #532]
 507 00b8 0CEA0303 		and	r3, ip, r3
 508 00bc C0F81432 		str	r3, [r0, #532]
 509              	.L43:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 510              		.loc 1 975 5 view .LVU164
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 511              		.loc 1 975 22 is_stmt 0 view .LVU165
 512 00c0 0B6A     		ldr	r3, [r1, #32]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 513              		.loc 1 975 8 view .LVU166
 514 00c2 012B     		cmp	r3, #1
 515 00c4 2ED0     		beq	.L52
 516              	.LVL23:
 517              	.L44:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 518              		.loc 1 981 5 is_stmt 1 view .LVU167
 519 00c6 1B4A     		ldr	r2, .L53
ARM GAS  /tmp/cc21oG54.s 			page 30


 520 00c8 D2F80032 		ldr	r3, [r2, #512]
 521 00cc 23F00103 		bic	r3, r3, #1
 522 00d0 C2F80032 		str	r3, [r2, #512]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 523              		.loc 1 984 5 view .LVU168
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 524              		.loc 1 984 12 is_stmt 0 view .LVU169
 525 00d4 0020     		movs	r0, #0
 526              		.loc 1 993 1 view .LVU170
 527 00d6 30BD     		pop	{r4, r5, pc}
 528              	.LVL24:
 529              	.L51:
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 530              		.loc 1 937 7 is_stmt 1 view .LVU171
 531 00d8 164B     		ldr	r3, .L53
 532 00da D3F80C02 		ldr	r0, [r3, #524]
 533 00de 1043     		orrs	r0, r0, r2
 534 00e0 C3F80C02 		str	r0, [r3, #524]
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 535              		.loc 1 940 7 view .LVU172
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 536              		.loc 1 942 22 is_stmt 0 view .LVU173
 537 00e4 8C88     		ldrh	r4, [r1, #4]
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 538              		.loc 1 940 44 view .LVU174
 539 00e6 4869     		ldr	r0, [r1, #20]
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 540              		.loc 1 941 72 view .LVU175
 541 00e8 0D68     		ldr	r5, [r1]
 542 00ea 44EA0544 		orr	r4, r4, r5, lsl #16
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 543              		.loc 1 940 62 view .LVU176
 544 00ee 4830     		adds	r0, r0, #72
 545 00f0 43F83040 		str	r4, [r3, r0, lsl #3]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 546              		.loc 1 945 7 is_stmt 1 view .LVU177
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 547              		.loc 1 947 22 is_stmt 0 view .LVU178
 548 00f4 8889     		ldrh	r0, [r1, #12]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 549              		.loc 1 945 44 view .LVU179
 550 00f6 4C69     		ldr	r4, [r1, #20]
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 551              		.loc 1 946 76 view .LVU180
 552 00f8 8D68     		ldr	r5, [r1, #8]
 553 00fa 40EA0540 		orr	r0, r0, r5, lsl #16
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 554              		.loc 1 945 62 view .LVU181
 555 00fe 4834     		adds	r4, r4, #72
 556 0100 03EBC403 		add	r3, r3, r4, lsl #3
 557 0104 5860     		str	r0, [r3, #4]
 558 0106 C8E7     		b	.L39
 559              	.L40:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 560              		.loc 1 959 7 is_stmt 1 view .LVU182
 561 0108 0A48     		ldr	r0, .L53
 562 010a D0F80432 		ldr	r3, [r0, #516]
ARM GAS  /tmp/cc21oG54.s 			page 31


 563 010e 1343     		orrs	r3, r3, r2
 564 0110 C0F80432 		str	r3, [r0, #516]
 565 0114 CBE7     		b	.L41
 566              	.L42:
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 567              		.loc 1 971 7 view .LVU183
 568 0116 0748     		ldr	r0, .L53
 569 0118 D0F81432 		ldr	r3, [r0, #532]
 570 011c 1343     		orrs	r3, r3, r2
 571 011e C0F81432 		str	r3, [r0, #532]
 572 0122 CDE7     		b	.L43
 573              	.L52:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 574              		.loc 1 977 7 view .LVU184
 575 0124 0349     		ldr	r1, .L53
 576              	.LVL25:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 577              		.loc 1 977 7 is_stmt 0 view .LVU185
 578 0126 D1F81C32 		ldr	r3, [r1, #540]
 579 012a 1A43     		orrs	r2, r2, r3
 580              	.LVL26:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 581              		.loc 1 977 7 view .LVU186
 582 012c C1F81C22 		str	r2, [r1, #540]
 583 0130 C9E7     		b	.L44
 584              	.L54:
 585 0132 00BF     		.align	2
 586              	.L53:
 587 0134 00640040 		.word	1073767424
 588              		.cfi_endproc
 589              	.LFE134:
 591              		.section	.text.HAL_CAN_Start,"ax",%progbits
 592              		.align	1
 593              		.global	HAL_CAN_Start
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 598              	HAL_CAN_Start:
 599              	.LVL27:
 600              	.LFB135:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Control functions
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                       ##### Control functions #####
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
ARM GAS  /tmp/cc21oG54.s 			page 32


1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              and activate the corresponding
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              transmission request
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              pending on the selected Tx mailbox
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Start the CAN module.
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 601              		.loc 1 1033 1 is_stmt 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		.loc 1 1033 1 is_stmt 0 view .LVU188
 606 0000 70B5     		push	{r4, r5, r6, lr}
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 4, -16
 609              		.cfi_offset 5, -12
 610              		.cfi_offset 6, -8
 611              		.cfi_offset 14, -4
 612 0002 0446     		mov	r4, r0
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 613              		.loc 1 1034 3 is_stmt 1 view .LVU189
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 614              		.loc 1 1036 3 view .LVU190
 615              		.loc 1 1036 11 is_stmt 0 view .LVU191
 616 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 617 0008 EDB2     		uxtb	r5, r5
 618              		.loc 1 1036 6 view .LVU192
 619 000a 012D     		cmp	r5, #1
 620 000c 06D0     		beq	.L61
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request leave initialisation */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
ARM GAS  /tmp/cc21oG54.s 			page 33


1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 621              		.loc 1 1072 5 is_stmt 1 view .LVU193
 622              		.loc 1 1072 21 is_stmt 0 view .LVU194
 623 000e 436A     		ldr	r3, [r0, #36]
 624 0010 43F40023 		orr	r3, r3, #524288
 625 0014 4362     		str	r3, [r0, #36]
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 626              		.loc 1 1074 5 is_stmt 1 view .LVU195
 627              		.loc 1 1074 12 is_stmt 0 view .LVU196
 628 0016 0125     		movs	r5, #1
 629              	.LVL28:
 630              	.L58:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 631              		.loc 1 1076 1 view .LVU197
 632 0018 2846     		mov	r0, r5
 633 001a 70BD     		pop	{r4, r5, r6, pc}
 634              	.LVL29:
 635              	.L61:
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 636              		.loc 1 1039 5 is_stmt 1 view .LVU198
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 637              		.loc 1 1039 17 is_stmt 0 view .LVU199
 638 001c 0223     		movs	r3, #2
 639 001e 80F82030 		strb	r3, [r0, #32]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 640              		.loc 1 1042 5 is_stmt 1 view .LVU200
 641 0022 0268     		ldr	r2, [r0]
 642 0024 1368     		ldr	r3, [r2]
 643 0026 23F00103 		bic	r3, r3, #1
 644 002a 1360     		str	r3, [r2]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 34


 645              		.loc 1 1045 5 view .LVU201
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 646              		.loc 1 1045 17 is_stmt 0 view .LVU202
 647 002c FFF7FEFF 		bl	HAL_GetTick
 648              	.LVL30:
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 649              		.loc 1 1045 17 view .LVU203
 650 0030 0646     		mov	r6, r0
 651              	.LVL31:
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 652              		.loc 1 1048 5 is_stmt 1 view .LVU204
 653              	.L57:
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 654              		.loc 1 1048 11 view .LVU205
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 655              		.loc 1 1048 17 is_stmt 0 view .LVU206
 656 0032 2368     		ldr	r3, [r4]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 657              		.loc 1 1048 27 view .LVU207
 658 0034 5B68     		ldr	r3, [r3, #4]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 659              		.loc 1 1048 11 view .LVU208
 660 0036 13F0010F 		tst	r3, #1
 661 003a 0CD0     		beq	.L62
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 662              		.loc 1 1051 7 is_stmt 1 view .LVU209
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 663              		.loc 1 1051 12 is_stmt 0 view .LVU210
 664 003c FFF7FEFF 		bl	HAL_GetTick
 665              	.LVL32:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 666              		.loc 1 1051 26 view .LVU211
 667 0040 831B     		subs	r3, r0, r6
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 668              		.loc 1 1051 10 view .LVU212
 669 0042 0A2B     		cmp	r3, #10
 670 0044 F5D9     		bls	.L57
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 671              		.loc 1 1054 9 is_stmt 1 view .LVU213
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 672              		.loc 1 1054 25 is_stmt 0 view .LVU214
 673 0046 636A     		ldr	r3, [r4, #36]
 674 0048 43F40033 		orr	r3, r3, #131072
 675 004c 6362     		str	r3, [r4, #36]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 676              		.loc 1 1057 9 is_stmt 1 view .LVU215
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 677              		.loc 1 1057 21 is_stmt 0 view .LVU216
 678 004e 0523     		movs	r3, #5
 679 0050 84F82030 		strb	r3, [r4, #32]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 680              		.loc 1 1059 9 is_stmt 1 view .LVU217
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 681              		.loc 1 1059 16 is_stmt 0 view .LVU218
 682 0054 E0E7     		b	.L58
 683              	.L62:
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 35


 684              		.loc 1 1064 5 is_stmt 1 view .LVU219
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 685              		.loc 1 1064 21 is_stmt 0 view .LVU220
 686 0056 0025     		movs	r5, #0
 687 0058 6562     		str	r5, [r4, #36]
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 688              		.loc 1 1067 5 is_stmt 1 view .LVU221
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 689              		.loc 1 1067 12 is_stmt 0 view .LVU222
 690 005a DDE7     		b	.L58
 691              		.cfi_endproc
 692              	.LFE135:
 694              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 695              		.align	1
 696              		.global	HAL_CAN_Stop
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	HAL_CAN_Stop:
 702              	.LVL33:
 703              	.LFB136:
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 704              		.loc 1 1085 1 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		.loc 1 1085 1 is_stmt 0 view .LVU224
 709 0000 38B5     		push	{r3, r4, r5, lr}
 710              		.cfi_def_cfa_offset 16
 711              		.cfi_offset 3, -16
 712              		.cfi_offset 4, -12
 713              		.cfi_offset 5, -8
 714              		.cfi_offset 14, -4
 715 0002 0446     		mov	r4, r0
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 716              		.loc 1 1086 3 is_stmt 1 view .LVU225
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 717              		.loc 1 1088 3 view .LVU226
 718              		.loc 1 1088 11 is_stmt 0 view .LVU227
 719 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 720 0008 DBB2     		uxtb	r3, r3
 721              		.loc 1 1088 6 view .LVU228
 722 000a 022B     		cmp	r3, #2
 723 000c 05D0     		beq	.L69
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request initialisation */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 36


1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Exit from sleep mode */
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 724              		.loc 1 1124 5 is_stmt 1 view .LVU229
 725              		.loc 1 1124 21 is_stmt 0 view .LVU230
 726 000e 436A     		ldr	r3, [r0, #36]
 727 0010 43F48013 		orr	r3, r3, #1048576
 728 0014 4362     		str	r3, [r0, #36]
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 729              		.loc 1 1126 5 is_stmt 1 view .LVU231
 730              		.loc 1 1126 12 is_stmt 0 view .LVU232
 731 0016 0120     		movs	r0, #1
 732              	.LVL34:
 733              	.L66:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 734              		.loc 1 1128 1 view .LVU233
 735 0018 38BD     		pop	{r3, r4, r5, pc}
 736              	.LVL35:
 737              	.L69:
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 738              		.loc 1 1091 5 is_stmt 1 view .LVU234
 739 001a 0268     		ldr	r2, [r0]
 740 001c 1368     		ldr	r3, [r2]
 741 001e 43F00103 		orr	r3, r3, #1
 742 0022 1360     		str	r3, [r2]
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 37


 743              		.loc 1 1094 5 view .LVU235
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 744              		.loc 1 1094 17 is_stmt 0 view .LVU236
 745 0024 FFF7FEFF 		bl	HAL_GetTick
 746              	.LVL36:
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 747              		.loc 1 1094 17 view .LVU237
 748 0028 0546     		mov	r5, r0
 749              	.LVL37:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 750              		.loc 1 1097 5 is_stmt 1 view .LVU238
 751              	.L65:
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 752              		.loc 1 1097 11 view .LVU239
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 753              		.loc 1 1097 17 is_stmt 0 view .LVU240
 754 002a 2368     		ldr	r3, [r4]
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 755              		.loc 1 1097 27 view .LVU241
 756 002c 5A68     		ldr	r2, [r3, #4]
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 757              		.loc 1 1097 11 view .LVU242
 758 002e 12F0010F 		tst	r2, #1
 759 0032 0DD1     		bne	.L70
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 760              		.loc 1 1100 7 is_stmt 1 view .LVU243
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 761              		.loc 1 1100 12 is_stmt 0 view .LVU244
 762 0034 FFF7FEFF 		bl	HAL_GetTick
 763              	.LVL38:
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 764              		.loc 1 1100 26 view .LVU245
 765 0038 431B     		subs	r3, r0, r5
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 766              		.loc 1 1100 10 view .LVU246
 767 003a 0A2B     		cmp	r3, #10
 768 003c F5D9     		bls	.L65
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 769              		.loc 1 1103 9 is_stmt 1 view .LVU247
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 770              		.loc 1 1103 25 is_stmt 0 view .LVU248
 771 003e 636A     		ldr	r3, [r4, #36]
 772 0040 43F40033 		orr	r3, r3, #131072
 773 0044 6362     		str	r3, [r4, #36]
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 774              		.loc 1 1106 9 is_stmt 1 view .LVU249
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 775              		.loc 1 1106 21 is_stmt 0 view .LVU250
 776 0046 0523     		movs	r3, #5
 777 0048 84F82030 		strb	r3, [r4, #32]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 778              		.loc 1 1108 9 is_stmt 1 view .LVU251
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 779              		.loc 1 1108 16 is_stmt 0 view .LVU252
 780 004c 0120     		movs	r0, #1
 781 004e E3E7     		b	.L66
 782              	.L70:
ARM GAS  /tmp/cc21oG54.s 			page 38


1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 783              		.loc 1 1113 5 is_stmt 1 view .LVU253
 784 0050 1A68     		ldr	r2, [r3]
 785 0052 22F00202 		bic	r2, r2, #2
 786 0056 1A60     		str	r2, [r3]
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 787              		.loc 1 1116 5 view .LVU254
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 788              		.loc 1 1116 17 is_stmt 0 view .LVU255
 789 0058 0123     		movs	r3, #1
 790 005a 84F82030 		strb	r3, [r4, #32]
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 791              		.loc 1 1119 5 is_stmt 1 view .LVU256
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 792              		.loc 1 1119 12 is_stmt 0 view .LVU257
 793 005e 0020     		movs	r0, #0
 794 0060 DAE7     		b	.L66
 795              		.cfi_endproc
 796              	.LFE136:
 798              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 799              		.align	1
 800              		.global	HAL_CAN_DeInit
 801              		.syntax unified
 802              		.thumb
 803              		.thumb_func
 805              	HAL_CAN_DeInit:
 806              	.LVL39:
 807              	.LFB131:
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 808              		.loc 1 460 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 812              		.loc 1 462 3 view .LVU259
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 813              		.loc 1 462 6 is_stmt 0 view .LVU260
 814 0000 80B1     		cbz	r0, .L73
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 815              		.loc 1 460 1 view .LVU261
 816 0002 10B5     		push	{r4, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 4, -8
 819              		.cfi_offset 14, -4
 820 0004 0446     		mov	r4, r0
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 821              		.loc 1 468 3 is_stmt 1 view .LVU262
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 822              		.loc 1 471 3 view .LVU263
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 823              		.loc 1 471 9 is_stmt 0 view .LVU264
 824 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 825              	.LVL40:
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 826              		.loc 1 484 3 is_stmt 1 view .LVU265
 827 000a 2046     		mov	r0, r4
 828 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
ARM GAS  /tmp/cc21oG54.s 			page 39


 829              	.LVL41:
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 830              		.loc 1 488 3 view .LVU266
 831 0010 2268     		ldr	r2, [r4]
 832 0012 1368     		ldr	r3, [r2]
 833 0014 43F40043 		orr	r3, r3, #32768
 834 0018 1360     		str	r3, [r2]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 835              		.loc 1 491 3 view .LVU267
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 836              		.loc 1 491 19 is_stmt 0 view .LVU268
 837 001a 0020     		movs	r0, #0
 838 001c 6062     		str	r0, [r4, #36]
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 839              		.loc 1 494 3 is_stmt 1 view .LVU269
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 840              		.loc 1 494 15 is_stmt 0 view .LVU270
 841 001e 84F82000 		strb	r0, [r4, #32]
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 842              		.loc 1 497 3 is_stmt 1 view .LVU271
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 843              		.loc 1 498 1 is_stmt 0 view .LVU272
 844 0022 10BD     		pop	{r4, pc}
 845              	.LVL42:
 846              	.L73:
 847              		.cfi_def_cfa_offset 0
 848              		.cfi_restore 4
 849              		.cfi_restore 14
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 850              		.loc 1 464 12 view .LVU273
 851 0024 0120     		movs	r0, #1
 852              	.LVL43:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 853              		.loc 1 498 1 view .LVU274
 854 0026 7047     		bx	lr
 855              		.cfi_endproc
 856              	.LFE131:
 858              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 859              		.align	1
 860              		.global	HAL_CAN_RequestSleep
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 865              	HAL_CAN_RequestSleep:
 866              	.LVL44:
 867              	.LFB137:
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
ARM GAS  /tmp/cc21oG54.s 			page 40


1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 868              		.loc 1 1140 1 is_stmt 1 view -0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              		@ link register save eliminated.
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 873              		.loc 1 1141 3 view .LVU276
 874              		.loc 1 1141 24 is_stmt 0 view .LVU277
 875 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 876              	.LVL45:
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 877              		.loc 1 1143 3 is_stmt 1 view .LVU278
 878              		.loc 1 1143 38 is_stmt 0 view .LVU279
 879 0004 013B     		subs	r3, r3, #1
 880              	.LVL46:
 881              		.loc 1 1143 38 view .LVU280
 882 0006 DBB2     		uxtb	r3, r3
 883              		.loc 1 1143 6 view .LVU281
 884 0008 012B     		cmp	r3, #1
 885 000a 05D9     		bls	.L81
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request Sleep mode */
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 886              		.loc 1 1155 5 is_stmt 1 view .LVU282
 887              		.loc 1 1155 21 is_stmt 0 view .LVU283
 888 000c 436A     		ldr	r3, [r0, #36]
 889 000e 43F48023 		orr	r3, r3, #262144
 890 0012 4362     		str	r3, [r0, #36]
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 891              		.loc 1 1158 5 is_stmt 1 view .LVU284
 892              		.loc 1 1158 12 is_stmt 0 view .LVU285
 893 0014 0120     		movs	r0, #1
 894              	.LVL47:
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 895              		.loc 1 1160 1 view .LVU286
 896 0016 7047     		bx	lr
 897              	.LVL48:
 898              	.L81:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 899              		.loc 1 1147 5 is_stmt 1 view .LVU287
 900 0018 0268     		ldr	r2, [r0]
 901 001a 1368     		ldr	r3, [r2]
 902 001c 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/cc21oG54.s 			page 41


 903 0020 1360     		str	r3, [r2]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 904              		.loc 1 1150 5 view .LVU288
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 905              		.loc 1 1150 12 is_stmt 0 view .LVU289
 906 0022 0020     		movs	r0, #0
 907              	.LVL49:
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 908              		.loc 1 1150 12 view .LVU290
 909 0024 7047     		bx	lr
 910              		.cfi_endproc
 911              	.LFE137:
 913              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 914              		.align	1
 915              		.global	HAL_CAN_WakeUp
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	HAL_CAN_WakeUp:
 921              	.LVL50:
 922              	.LFB138:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         is exited.
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 923              		.loc 1 1171 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928              		.loc 1 1171 1 is_stmt 0 view .LVU292
 929 0000 82B0     		sub	sp, sp, #8
 930              		.cfi_def_cfa_offset 8
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   __IO uint32_t count = 0;
 931              		.loc 1 1172 3 is_stmt 1 view .LVU293
 932              		.loc 1 1172 17 is_stmt 0 view .LVU294
 933 0002 0023     		movs	r3, #0
 934 0004 0193     		str	r3, [sp, #4]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timeout = 1000000U;
 935              		.loc 1 1173 3 is_stmt 1 view .LVU295
 936              	.LVL51:
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 937              		.loc 1 1174 3 view .LVU296
 938              		.loc 1 1174 24 is_stmt 0 view .LVU297
 939 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 940              	.LVL52:
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 941              		.loc 1 1176 3 is_stmt 1 view .LVU298
 942              		.loc 1 1176 38 is_stmt 0 view .LVU299
ARM GAS  /tmp/cc21oG54.s 			page 42


 943 000a 013B     		subs	r3, r3, #1
 944              	.LVL53:
 945              		.loc 1 1176 38 view .LVU300
 946 000c DBB2     		uxtb	r3, r3
 947              		.loc 1 1176 6 view .LVU301
 948 000e 012B     		cmp	r3, #1
 949 0010 18D8     		bhi	.L83
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wake up request */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 950              		.loc 1 1180 5 is_stmt 1 view .LVU302
 951 0012 0268     		ldr	r2, [r0]
 952 0014 1368     		ldr	r3, [r2]
 953 0016 23F00203 		bic	r3, r3, #2
 954 001a 1360     		str	r3, [r2]
 955              	.L86:
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait sleep mode is exited */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     do
 956              		.loc 1 1183 5 view .LVU303
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Increment counter */
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       count++;
 957              		.loc 1 1186 7 view .LVU304
 958              		.loc 1 1186 12 is_stmt 0 view .LVU305
 959 001c 019B     		ldr	r3, [sp, #4]
 960 001e 0133     		adds	r3, r3, #1
 961 0020 0193     		str	r3, [sp, #4]
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check if timeout is reached */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (count > timeout)
 962              		.loc 1 1189 7 is_stmt 1 view .LVU306
 963              		.loc 1 1189 17 is_stmt 0 view .LVU307
 964 0022 019A     		ldr	r2, [sp, #4]
 965              		.loc 1 1189 10 view .LVU308
 966 0024 0B4B     		ldr	r3, .L89
 967 0026 9A42     		cmp	r2, r3
 968 0028 06D8     		bhi	.L88
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 969              		.loc 1 1197 11 is_stmt 1 view .LVU309
 970              		.loc 1 1197 17 is_stmt 0 view .LVU310
 971 002a 0368     		ldr	r3, [r0]
 972              		.loc 1 1197 27 view .LVU311
 973 002c 5B68     		ldr	r3, [r3, #4]
 974              		.loc 1 1197 5 view .LVU312
 975 002e 13F0020F 		tst	r3, #2
 976 0032 F3D1     		bne	.L86
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
ARM GAS  /tmp/cc21oG54.s 			page 43


1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 977              		.loc 1 1200 12 view .LVU313
 978 0034 0020     		movs	r0, #0
 979              	.LVL54:
 980              		.loc 1 1200 12 view .LVU314
 981 0036 0AE0     		b	.L85
 982              	.LVL55:
 983              	.L88:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 984              		.loc 1 1192 9 is_stmt 1 view .LVU315
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 985              		.loc 1 1192 25 is_stmt 0 view .LVU316
 986 0038 436A     		ldr	r3, [r0, #36]
 987 003a 43F40033 		orr	r3, r3, #131072
 988 003e 4362     		str	r3, [r0, #36]
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 989              		.loc 1 1194 9 is_stmt 1 view .LVU317
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 990              		.loc 1 1194 16 is_stmt 0 view .LVU318
 991 0040 0120     		movs	r0, #1
 992              	.LVL56:
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 993              		.loc 1 1194 16 view .LVU319
 994 0042 04E0     		b	.L85
 995              	.LVL57:
 996              	.L83:
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 997              		.loc 1 1205 5 is_stmt 1 view .LVU320
 998              		.loc 1 1205 21 is_stmt 0 view .LVU321
 999 0044 436A     		ldr	r3, [r0, #36]
 1000 0046 43F48023 		orr	r3, r3, #262144
 1001 004a 4362     		str	r3, [r0, #36]
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1002              		.loc 1 1207 5 is_stmt 1 view .LVU322
 1003              		.loc 1 1207 12 is_stmt 0 view .LVU323
 1004 004c 0120     		movs	r0, #1
 1005              	.LVL58:
 1006              	.L85:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1007              		.loc 1 1209 1 view .LVU324
 1008 004e 02B0     		add	sp, sp, #8
 1009              		.cfi_def_cfa_offset 0
 1010              		@ sp needed
 1011 0050 7047     		bx	lr
 1012              	.L90:
 1013 0052 00BF     		.align	2
 1014              	.L89:
 1015 0054 40420F00 		.word	1000000
 1016              		.cfi_endproc
 1017              	.LFE138:
 1019              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
ARM GAS  /tmp/cc21oG54.s 			page 44


 1020              		.align	1
 1021              		.global	HAL_CAN_IsSleepActive
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1026              	HAL_CAN_IsSleepActive:
 1027              	.LVL59:
 1028              	.LFB139:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(CAN_HandleTypeDef *hcan)
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1029              		.loc 1 1220 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1034              		.loc 1 1221 3 view .LVU326
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1035              		.loc 1 1222 3 view .LVU327
 1036              		.loc 1 1222 24 is_stmt 0 view .LVU328
 1037 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1038              	.LVL60:
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1039              		.loc 1 1224 3 is_stmt 1 view .LVU329
 1040              		.loc 1 1224 38 is_stmt 0 view .LVU330
 1041 0004 013B     		subs	r3, r3, #1
 1042              	.LVL61:
 1043              		.loc 1 1224 38 view .LVU331
 1044 0006 DBB2     		uxtb	r3, r3
 1045              		.loc 1 1224 6 view .LVU332
 1046 0008 012B     		cmp	r3, #1
 1047 000a 01D9     		bls	.L95
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1048              		.loc 1 1221 12 view .LVU333
 1049 000c 0020     		movs	r0, #0
 1050              	.LVL62:
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1051              		.loc 1 1221 12 view .LVU334
 1052 000e 7047     		bx	lr
 1053              	.LVL63:
 1054              	.L95:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Sleep mode */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1055              		.loc 1 1228 5 is_stmt 1 view .LVU335
 1056              		.loc 1 1228 14 is_stmt 0 view .LVU336
ARM GAS  /tmp/cc21oG54.s 			page 45


 1057 0010 0368     		ldr	r3, [r0]
 1058              		.loc 1 1228 24 view .LVU337
 1059 0012 5868     		ldr	r0, [r3, #4]
 1060              	.LVL64:
 1061              		.loc 1 1228 8 view .LVU338
 1062 0014 10F00200 		ands	r0, r0, #2
 1063 0018 00D1     		bne	.L94
 1064 001a 7047     		bx	lr
 1065              	.L94:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1066              		.loc 1 1230 14 view .LVU339
 1067 001c 0120     		movs	r0, #1
 1068              	.LVL65:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1069              		.loc 1 1235 3 is_stmt 1 view .LVU340
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1070              		.loc 1 1236 1 is_stmt 0 view .LVU341
 1071 001e 7047     		bx	lr
 1072              		.cfi_endproc
 1073              	.LFE139:
 1075              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1076              		.align	1
 1077              		.global	HAL_CAN_AddTxMessage
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1082              	HAL_CAN_AddTxMessage:
 1083              	.LVL66:
 1084              	.LFB140:
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         corresponding transmission request.
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, CAN_TxHeaderTypeDef *pHeader, uint8
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1085              		.loc 1 1251 1 is_stmt 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089              		.loc 1 1251 1 is_stmt 0 view .LVU343
 1090 0000 30B5     		push	{r4, r5, lr}
 1091              		.cfi_def_cfa_offset 12
 1092              		.cfi_offset 4, -12
ARM GAS  /tmp/cc21oG54.s 			page 46


 1093              		.cfi_offset 5, -8
 1094              		.cfi_offset 14, -4
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1095              		.loc 1 1252 3 is_stmt 1 view .LVU344
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1096              		.loc 1 1253 3 view .LVU345
 1097              		.loc 1 1253 24 is_stmt 0 view .LVU346
 1098 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1099              	.LVL67:
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1100              		.loc 1 1254 3 is_stmt 1 view .LVU347
 1101              		.loc 1 1254 12 is_stmt 0 view .LVU348
 1102 0006 0468     		ldr	r4, [r0]
 1103 0008 A468     		ldr	r4, [r4, #8]
 1104              	.LVL68:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
 1105              		.loc 1 1257 3 is_stmt 1 view .LVU349
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 1106              		.loc 1 1258 3 view .LVU350
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 1107              		.loc 1 1259 3 view .LVU351
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 1108              		.loc 1 1260 3 view .LVU352
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
 1109              		.loc 1 1266 5 view .LVU353
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
 1110              		.loc 1 1268 3 view .LVU354
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1111              		.loc 1 1270 3 view .LVU355
 1112              		.loc 1 1270 38 is_stmt 0 view .LVU356
 1113 000a 0CF1FF3C 		add	ip, ip, #-1
 1114              	.LVL69:
 1115              		.loc 1 1270 38 view .LVU357
 1116 000e 5FFA8CFC 		uxtb	ip, ip
 1117              		.loc 1 1270 6 view .LVU358
 1118 0012 BCF1010F 		cmp	ip, #1
 1119 0016 6BD8     		bhi	.L97
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1120              		.loc 1 1274 5 is_stmt 1 view .LVU359
 1121              		.loc 1 1274 8 is_stmt 0 view .LVU360
 1122 0018 14F0E05F 		tst	r4, #469762048
 1123 001c 62D0     		beq	.L98
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  /tmp/cc21oG54.s 			page 47


1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1124              		.loc 1 1279 7 is_stmt 1 view .LVU361
 1125              		.loc 1 1279 23 is_stmt 0 view .LVU362
 1126 001e C4F3016C 		ubfx	ip, r4, #24, #2
 1127              	.LVL70:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check transmit mailbox value */
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (transmitmailbox > 2U)
 1128              		.loc 1 1282 7 is_stmt 1 view .LVU363
 1129              		.loc 1 1282 10 is_stmt 0 view .LVU364
 1130 0022 BCF1020F 		cmp	ip, #2
 1131 0026 05D9     		bls	.L99
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INTERNAL;
 1132              		.loc 1 1285 9 is_stmt 1 view .LVU365
 1133              		.loc 1 1285 25 is_stmt 0 view .LVU366
 1134 0028 436A     		ldr	r3, [r0, #36]
 1135              	.LVL71:
 1136              		.loc 1 1285 25 view .LVU367
 1137 002a 43F40003 		orr	r3, r3, #8388608
 1138 002e 4362     		str	r3, [r0, #36]
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1139              		.loc 1 1287 9 is_stmt 1 view .LVU368
 1140              		.loc 1 1287 16 is_stmt 0 view .LVU369
 1141 0030 0120     		movs	r0, #1
 1142              	.LVL72:
 1143              		.loc 1 1287 16 view .LVU370
 1144 0032 62E0     		b	.L100
 1145              	.LVL73:
 1146              	.L99:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Store the Tx mailbox */
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1147              		.loc 1 1291 7 is_stmt 1 view .LVU371
 1148              		.loc 1 1291 33 is_stmt 0 view .LVU372
 1149 0034 0124     		movs	r4, #1
 1150              	.LVL74:
 1151              		.loc 1 1291 33 view .LVU373
 1152 0036 04FA0CF4 		lsl	r4, r4, ip
 1153              		.loc 1 1291 19 view .LVU374
 1154 003a 1C60     		str	r4, [r3]
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Id */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1155              		.loc 1 1294 7 is_stmt 1 view .LVU375
 1156              		.loc 1 1294 18 is_stmt 0 view .LVU376
 1157 003c 8B68     		ldr	r3, [r1, #8]
 1158              	.LVL75:
 1159              		.loc 1 1294 10 view .LVU377
 1160 003e 002B     		cmp	r3, #0
 1161 0040 3DD1     		bne	.L101
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
ARM GAS  /tmp/cc21oG54.s 			page 48


 1162              		.loc 1 1296 9 is_stmt 1 view .LVU378
 1163              		.loc 1 1296 68 is_stmt 0 view .LVU379
 1164 0042 0D68     		ldr	r5, [r1]
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1165              		.loc 1 1297 67 view .LVU380
 1166 0044 CB68     		ldr	r3, [r1, #12]
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1167              		.loc 1 1296 13 view .LVU381
 1168 0046 0468     		ldr	r4, [r0]
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1169              		.loc 1 1296 98 view .LVU382
 1170 0048 43EA4555 		orr	r5, r3, r5, lsl #21
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1171              		.loc 1 1296 57 view .LVU383
 1172 004c 0CF11803 		add	r3, ip, #24
 1173 0050 1B01     		lsls	r3, r3, #4
 1174 0052 E550     		str	r5, [r4, r3]
 1175              	.L102:
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the DLC */
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1176              		.loc 1 1307 7 is_stmt 1 view .LVU384
 1177              		.loc 1 1307 11 is_stmt 0 view .LVU385
 1178 0054 0368     		ldr	r3, [r0]
 1179              		.loc 1 1307 66 view .LVU386
 1180 0056 0C69     		ldr	r4, [r1, #16]
 1181              		.loc 1 1307 56 view .LVU387
 1182 0058 0CF1180E 		add	lr, ip, #24
 1183 005c 03EB0E13 		add	r3, r3, lr, lsl #4
 1184 0060 5C60     		str	r4, [r3, #4]
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1185              		.loc 1 1310 7 is_stmt 1 view .LVU388
 1186              		.loc 1 1310 18 is_stmt 0 view .LVU389
 1187 0062 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 1188              		.loc 1 1310 10 view .LVU390
 1189 0064 012B     		cmp	r3, #1
 1190 0066 35D0     		beq	.L105
 1191              	.LVL76:
 1192              	.L103:
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the data field */
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1193              		.loc 1 1316 7 is_stmt 1 view .LVU391
 1194 0068 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 1195 006a 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc21oG54.s 			page 49


 1196 006c 1B04     		lsls	r3, r3, #16
 1197 006e 43EA0163 		orr	r3, r3, r1, lsl #24
 1198 0072 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1199 0074 43EA0123 		orr	r3, r3, r1, lsl #8
 1200 0078 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1201 007a 0168     		ldr	r1, [r0]
 1202 007c 2343     		orrs	r3, r3, r4
 1203 007e 01EB0C11 		add	r1, r1, ip, lsl #4
 1204 0082 C1F88C31 		str	r3, [r1, #396]
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1205              		.loc 1 1321 7 view .LVU392
 1206 0086 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1207 0088 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1208 008a 1B04     		lsls	r3, r3, #16
 1209 008c 43EA0163 		orr	r3, r3, r1, lsl #24
 1210 0090 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 1211 0092 43EA0123 		orr	r3, r3, r1, lsl #8
 1212 0096 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1213 0098 0268     		ldr	r2, [r0]
 1214              	.LVL77:
 1215              		.loc 1 1321 7 is_stmt 0 view .LVU393
 1216 009a 0B43     		orrs	r3, r3, r1
 1217 009c 02EB0C12 		add	r2, r2, ip, lsl #4
 1218 00a0 C2F88831 		str	r3, [r2, #392]
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Request transmission */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1219              		.loc 1 1328 7 is_stmt 1 view .LVU394
 1220 00a4 0268     		ldr	r2, [r0]
 1221 00a6 0CF1180C 		add	ip, ip, #24
 1222              	.LVL78:
 1223              		.loc 1 1328 7 is_stmt 0 view .LVU395
 1224 00aa 4FEA0C1C 		lsl	ip, ip, #4
 1225 00ae 52F80C30 		ldr	r3, [r2, ip]
 1226 00b2 43F00103 		orr	r3, r3, #1
 1227 00b6 42F80C30 		str	r3, [r2, ip]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Return function status */
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_OK;
 1228              		.loc 1 1331 7 is_stmt 1 view .LVU396
 1229              		.loc 1 1331 14 is_stmt 0 view .LVU397
 1230 00ba 0020     		movs	r0, #0
 1231              	.LVL79:
 1232              		.loc 1 1331 14 view .LVU398
 1233 00bc 1DE0     		b	.L100
 1234              	.LVL80:
 1235              	.L101:
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1236              		.loc 1 1301 9 is_stmt 1 view .LVU399
ARM GAS  /tmp/cc21oG54.s 			page 50


1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1237              		.loc 1 1301 68 is_stmt 0 view .LVU400
 1238 00be 4C68     		ldr	r4, [r1, #4]
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1239              		.loc 1 1301 98 view .LVU401
 1240 00c0 43EAC403 		orr	r3, r3, r4, lsl #3
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1241              		.loc 1 1303 67 view .LVU402
 1242 00c4 CC68     		ldr	r4, [r1, #12]
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1243              		.loc 1 1302 73 view .LVU403
 1244 00c6 2343     		orrs	r3, r3, r4
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1245              		.loc 1 1301 57 view .LVU404
 1246 00c8 0CF11804 		add	r4, ip, #24
 1247 00cc 2401     		lsls	r4, r4, #4
 1248 00ce 0568     		ldr	r5, [r0]
 1249 00d0 2B51     		str	r3, [r5, r4]
 1250 00d2 BFE7     		b	.L102
 1251              	.L105:
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1252              		.loc 1 1312 9 is_stmt 1 view .LVU405
 1253 00d4 0368     		ldr	r3, [r0]
 1254 00d6 03EB0E13 		add	r3, r3, lr, lsl #4
 1255 00da 5968     		ldr	r1, [r3, #4]
 1256              	.LVL81:
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 1257              		.loc 1 1312 9 is_stmt 0 view .LVU406
 1258 00dc 41F48071 		orr	r1, r1, #256
 1259 00e0 5960     		str	r1, [r3, #4]
 1260 00e2 C1E7     		b	.L103
 1261              	.LVL82:
 1262              	.L98:
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1263              		.loc 1 1336 7 is_stmt 1 view .LVU407
 1264              		.loc 1 1336 23 is_stmt 0 view .LVU408
 1265 00e4 436A     		ldr	r3, [r0, #36]
 1266              	.LVL83:
 1267              		.loc 1 1336 23 view .LVU409
 1268 00e6 43F40013 		orr	r3, r3, #2097152
 1269 00ea 4362     		str	r3, [r0, #36]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 1270              		.loc 1 1338 7 is_stmt 1 view .LVU410
 1271              		.loc 1 1338 14 is_stmt 0 view .LVU411
 1272 00ec 0120     		movs	r0, #1
 1273              	.LVL84:
 1274              		.loc 1 1338 14 view .LVU412
 1275 00ee 04E0     		b	.L100
 1276              	.LVL85:
 1277              	.L97:
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  /tmp/cc21oG54.s 			page 51


1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1278              		.loc 1 1344 5 is_stmt 1 view .LVU413
 1279              		.loc 1 1344 21 is_stmt 0 view .LVU414
 1280 00f0 436A     		ldr	r3, [r0, #36]
 1281              	.LVL86:
 1282              		.loc 1 1344 21 view .LVU415
 1283 00f2 43F48023 		orr	r3, r3, #262144
 1284 00f6 4362     		str	r3, [r0, #36]
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1285              		.loc 1 1346 5 is_stmt 1 view .LVU416
 1286              		.loc 1 1346 12 is_stmt 0 view .LVU417
 1287 00f8 0120     		movs	r0, #1
 1288              	.LVL87:
 1289              	.L100:
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1290              		.loc 1 1348 1 view .LVU418
 1291 00fa 30BD     		pop	{r4, r5, pc}
 1292              		.cfi_endproc
 1293              	.LFE140:
 1295              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_CAN_AbortTxRequest
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1302              	HAL_CAN_AbortTxRequest:
 1303              	.LVL88:
 1304              	.LFB141:
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Abort transmission requests
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1305              		.loc 1 1359 1 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1310              		.loc 1 1360 3 view .LVU420
 1311              		.loc 1 1360 24 is_stmt 0 view .LVU421
 1312 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1313              	.LVL89:
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
ARM GAS  /tmp/cc21oG54.s 			page 52


 1314              		.loc 1 1363 3 is_stmt 1 view .LVU422
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1315              		.loc 1 1365 3 view .LVU423
 1316              		.loc 1 1365 38 is_stmt 0 view .LVU424
 1317 0004 013B     		subs	r3, r3, #1
 1318              	.LVL90:
 1319              		.loc 1 1365 38 view .LVU425
 1320 0006 DBB2     		uxtb	r3, r3
 1321              		.loc 1 1365 6 view .LVU426
 1322 0008 012B     		cmp	r3, #1
 1323 000a 05D9     		bls	.L112
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1324              		.loc 1 1395 5 is_stmt 1 view .LVU427
 1325              		.loc 1 1395 21 is_stmt 0 view .LVU428
 1326 000c 436A     		ldr	r3, [r0, #36]
 1327 000e 43F48023 		orr	r3, r3, #262144
 1328 0012 4362     		str	r3, [r0, #36]
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1329              		.loc 1 1397 5 is_stmt 1 view .LVU429
 1330              		.loc 1 1397 12 is_stmt 0 view .LVU430
 1331 0014 0120     		movs	r0, #1
 1332              	.LVL91:
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1333              		.loc 1 1399 1 view .LVU431
 1334 0016 7047     		bx	lr
ARM GAS  /tmp/cc21oG54.s 			page 53


 1335              	.LVL92:
 1336              	.L112:
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1337              		.loc 1 1369 5 is_stmt 1 view .LVU432
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1338              		.loc 1 1369 8 is_stmt 0 view .LVU433
 1339 0018 11F0010F 		tst	r1, #1
 1340 001c 04D0     		beq	.L108
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1341              		.loc 1 1372 7 is_stmt 1 view .LVU434
 1342 001e 0268     		ldr	r2, [r0]
 1343 0020 9368     		ldr	r3, [r2, #8]
 1344 0022 43F08003 		orr	r3, r3, #128
 1345 0026 9360     		str	r3, [r2, #8]
 1346              	.L108:
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1347              		.loc 1 1376 5 view .LVU435
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1348              		.loc 1 1376 8 is_stmt 0 view .LVU436
 1349 0028 11F0020F 		tst	r1, #2
 1350 002c 04D0     		beq	.L109
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1351              		.loc 1 1379 7 is_stmt 1 view .LVU437
 1352 002e 0268     		ldr	r2, [r0]
 1353 0030 9368     		ldr	r3, [r2, #8]
 1354 0032 43F40043 		orr	r3, r3, #32768
 1355 0036 9360     		str	r3, [r2, #8]
 1356              	.L109:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1357              		.loc 1 1383 5 view .LVU438
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1358              		.loc 1 1383 8 is_stmt 0 view .LVU439
 1359 0038 11F0040F 		tst	r1, #4
 1360 003c 04D0     		beq	.L110
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1361              		.loc 1 1386 7 is_stmt 1 view .LVU440
 1362 003e 0268     		ldr	r2, [r0]
 1363 0040 9368     		ldr	r3, [r2, #8]
 1364 0042 43F40003 		orr	r3, r3, #8388608
 1365 0046 9360     		str	r3, [r2, #8]
 1366              	.L110:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1367              		.loc 1 1390 5 view .LVU441
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1368              		.loc 1 1390 12 is_stmt 0 view .LVU442
 1369 0048 0020     		movs	r0, #0
 1370              	.LVL93:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1371              		.loc 1 1390 12 view .LVU443
 1372 004a 7047     		bx	lr
 1373              		.cfi_endproc
 1374              	.LFE141:
 1376              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1377              		.align	1
 1378              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1379              		.syntax unified
 1380              		.thumb
ARM GAS  /tmp/cc21oG54.s 			page 54


 1381              		.thumb_func
 1383              	HAL_CAN_GetTxMailboxesFreeLevel:
 1384              	.LVL94:
 1385              	.LFB142:
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(CAN_HandleTypeDef *hcan)
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1386              		.loc 1 1408 1 is_stmt 1 view -0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 0
 1389              		@ frame_needed = 0, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1391              		.loc 1 1409 3 view .LVU445
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1392              		.loc 1 1410 3 view .LVU446
 1393              		.loc 1 1410 24 is_stmt 0 view .LVU447
 1394 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1395              	.LVL95:
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1396              		.loc 1 1412 3 is_stmt 1 view .LVU448
 1397              		.loc 1 1412 38 is_stmt 0 view .LVU449
 1398 0004 013B     		subs	r3, r3, #1
 1399              	.LVL96:
 1400              		.loc 1 1412 38 view .LVU450
 1401 0006 DBB2     		uxtb	r3, r3
 1402              		.loc 1 1412 6 view .LVU451
 1403 0008 012B     		cmp	r3, #1
 1404 000a 01D9     		bls	.L119
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1405              		.loc 1 1409 12 view .LVU452
 1406 000c 0020     		movs	r0, #0
 1407              	.LVL97:
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  /tmp/cc21oG54.s 			page 55


1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return freelevel;
 1408              		.loc 1 1435 3 is_stmt 1 view .LVU453
 1409              	.L113:
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1410              		.loc 1 1436 1 is_stmt 0 view .LVU454
 1411 000e 7047     		bx	lr
 1412              	.LVL98:
 1413              	.L119:
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1414              		.loc 1 1416 5 is_stmt 1 view .LVU455
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1415              		.loc 1 1416 14 is_stmt 0 view .LVU456
 1416 0010 0368     		ldr	r3, [r0]
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1417              		.loc 1 1416 24 view .LVU457
 1418 0012 9868     		ldr	r0, [r3, #8]
 1419              	.LVL99:
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1420              		.loc 1 1416 8 view .LVU458
 1421 0014 10F08060 		ands	r0, r0, #67108864
 1422 0018 00D0     		beq	.L115
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1423              		.loc 1 1418 16 view .LVU459
 1424 001a 0120     		movs	r0, #1
 1425              	.L115:
 1426              	.LVL100:
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1427              		.loc 1 1422 5 is_stmt 1 view .LVU460
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1428              		.loc 1 1422 24 is_stmt 0 view .LVU461
 1429 001c 9A68     		ldr	r2, [r3, #8]
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1430              		.loc 1 1422 8 view .LVU462
 1431 001e 12F0006F 		tst	r2, #134217728
 1432 0022 00D0     		beq	.L116
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1433              		.loc 1 1424 7 is_stmt 1 view .LVU463
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1434              		.loc 1 1424 16 is_stmt 0 view .LVU464
 1435 0024 0130     		adds	r0, r0, #1
 1436              	.LVL101:
 1437              	.L116:
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1438              		.loc 1 1428 5 is_stmt 1 view .LVU465
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1439              		.loc 1 1428 24 is_stmt 0 view .LVU466
 1440 0026 9B68     		ldr	r3, [r3, #8]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1441              		.loc 1 1428 8 view .LVU467
 1442 0028 13F0805F 		tst	r3, #268435456
 1443 002c EFD0     		beq	.L113
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
ARM GAS  /tmp/cc21oG54.s 			page 56


 1444              		.loc 1 1430 7 is_stmt 1 view .LVU468
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1445              		.loc 1 1430 16 is_stmt 0 view .LVU469
 1446 002e 0130     		adds	r0, r0, #1
 1447              	.LVL102:
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1448              		.loc 1 1430 16 view .LVU470
 1449 0030 7047     		bx	lr
 1450              		.cfi_endproc
 1451              	.LFE142:
 1453              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1454              		.align	1
 1455              		.global	HAL_CAN_IsTxMessagePending
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1460              	HAL_CAN_IsTxMessagePending:
 1461              	.LVL103:
 1462              	.LFB143:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         Mailboxes.
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *                Tx Mailbox.
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1463              		.loc 1 1451 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1468              		.loc 1 1452 3 view .LVU472
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1469              		.loc 1 1453 3 view .LVU473
 1470              		.loc 1 1453 24 is_stmt 0 view .LVU474
 1471 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1472              	.LVL104:
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
 1473              		.loc 1 1456 3 is_stmt 1 view .LVU475
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1474              		.loc 1 1458 3 view .LVU476
 1475              		.loc 1 1458 38 is_stmt 0 view .LVU477
 1476 0004 013B     		subs	r3, r3, #1
 1477              	.LVL105:
 1478              		.loc 1 1458 38 view .LVU478
ARM GAS  /tmp/cc21oG54.s 			page 57


 1479 0006 DBB2     		uxtb	r3, r3
 1480              		.loc 1 1458 6 view .LVU479
 1481 0008 012B     		cmp	r3, #1
 1482 000a 01D9     		bls	.L124
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1483              		.loc 1 1452 12 view .LVU480
 1484 000c 0020     		movs	r0, #0
 1485              	.LVL106:
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1486              		.loc 1 1452 12 view .LVU481
 1487 000e 7047     		bx	lr
 1488              	.LVL107:
 1489              	.L124:
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1490              		.loc 1 1462 5 is_stmt 1 view .LVU482
 1491              		.loc 1 1462 14 is_stmt 0 view .LVU483
 1492 0010 0368     		ldr	r3, [r0]
 1493              		.loc 1 1462 24 view .LVU484
 1494 0012 9B68     		ldr	r3, [r3, #8]
 1495              		.loc 1 1462 30 view .LVU485
 1496 0014 03EA8163 		and	r3, r3, r1, lsl #26
 1497              		.loc 1 1462 8 view .LVU486
 1498 0018 B3EB816F 		cmp	r3, r1, lsl #26
 1499 001c 01D0     		beq	.L125
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1500              		.loc 1 1464 14 view .LVU487
 1501 001e 0120     		movs	r0, #1
 1502              	.LVL108:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return status */
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1503              		.loc 1 1469 3 is_stmt 1 view .LVU488
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1504              		.loc 1 1470 1 is_stmt 0 view .LVU489
 1505 0020 7047     		bx	lr
 1506              	.LVL109:
 1507              	.L125:
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1508              		.loc 1 1452 12 view .LVU490
 1509 0022 0020     		movs	r0, #0
 1510              	.LVL110:
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1511              		.loc 1 1452 12 view .LVU491
 1512 0024 7047     		bx	lr
 1513              		.cfi_endproc
 1514              	.LFE143:
 1516              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1517              		.align	1
 1518              		.global	HAL_CAN_GetTxTimestamp
 1519              		.syntax unified
 1520              		.thumb
ARM GAS  /tmp/cc21oG54.s 			page 58


 1521              		.thumb_func
 1523              	HAL_CAN_GetTxTimestamp:
 1524              	.LVL111:
 1525              	.LFB144:
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             mode is enabled.
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         read.
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1526              		.loc 1 1483 1 is_stmt 1 view -0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530              		@ link register save eliminated.
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1531              		.loc 1 1484 3 view .LVU493
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1532              		.loc 1 1485 3 view .LVU494
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1533              		.loc 1 1486 3 view .LVU495
 1534              		.loc 1 1486 24 is_stmt 0 view .LVU496
 1535 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1536              	.LVL112:
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
 1537              		.loc 1 1489 3 is_stmt 1 view .LVU497
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1538              		.loc 1 1491 3 view .LVU498
 1539              		.loc 1 1491 38 is_stmt 0 view .LVU499
 1540 0004 013B     		subs	r3, r3, #1
 1541              	.LVL113:
 1542              		.loc 1 1491 38 view .LVU500
 1543 0006 DBB2     		uxtb	r3, r3
 1544              		.loc 1 1491 6 view .LVU501
 1545 0008 012B     		cmp	r3, #1
 1546 000a 01D9     		bls	.L129
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
 1547              		.loc 1 1484 12 view .LVU502
 1548 000c 0020     		movs	r0, #0
 1549              	.LVL114:
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the Tx mailbox */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get timestamp */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
ARM GAS  /tmp/cc21oG54.s 			page 59


1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the timestamp */
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return timestamp;
 1550              		.loc 1 1502 3 is_stmt 1 view .LVU503
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1551              		.loc 1 1503 1 is_stmt 0 view .LVU504
 1552 000e 7047     		bx	lr
 1553              	.LVL115:
 1554              	.L129:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1555              		.loc 1 1495 5 is_stmt 1 view .LVU505
 1556              	.LBB4:
 1557              	.LBI4:
 1558              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc21oG54.s 			page 60


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc21oG54.s 			page 61


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/cc21oG54.s 			page 62


 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc21oG54.s 			page 63


 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc21oG54.s 			page 64


 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
ARM GAS  /tmp/cc21oG54.s 			page 65


 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc21oG54.s 			page 66


 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
ARM GAS  /tmp/cc21oG54.s 			page 67


 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc21oG54.s 			page 68


 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  /tmp/cc21oG54.s 			page 69


 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  /tmp/cc21oG54.s 			page 70


 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc21oG54.s 			page 71


 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc21oG54.s 			page 72


 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc21oG54.s 			page 73


 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
ARM GAS  /tmp/cc21oG54.s 			page 74


 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /tmp/cc21oG54.s 			page 75


 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
ARM GAS  /tmp/cc21oG54.s 			page 76


 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1559              		.loc 2 981 31 view .LVU506
 1560              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1561              		.loc 2 983 3 view .LVU507
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1562              		.loc 2 988 4 view .LVU508
 1563              		.syntax unified
 1564              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1565 0010 91FAA1F1 		rbit r1, r1
 1566              	@ 0 "" 2
 1567              	.LVL116:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1568              		.loc 2 1001 3 view .LVU509
ARM GAS  /tmp/cc21oG54.s 			page 77


 1569              		.loc 2 1001 3 is_stmt 0 view .LVU510
 1570              		.thumb
 1571              		.syntax unified
 1572              	.LBE5:
 1573              	.LBE4:
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1574              		.loc 1 1495 21 view .LVU511
 1575 0014 B1FA81F1 		clz	r1, r1
 1576              	.LVL117:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1577              		.loc 1 1498 5 is_stmt 1 view .LVU512
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1578              		.loc 1 1498 22 is_stmt 0 view .LVU513
 1579 0018 0368     		ldr	r3, [r0]
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1580              		.loc 1 1498 61 view .LVU514
 1581 001a 1831     		adds	r1, r1, #24
 1582              	.LVL118:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1583              		.loc 1 1498 61 view .LVU515
 1584 001c 03EB0111 		add	r1, r3, r1, lsl #4
 1585              	.LVL119:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1586              		.loc 1 1498 61 view .LVU516
 1587 0020 4868     		ldr	r0, [r1, #4]
 1588              	.LVL120:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1589              		.loc 1 1498 85 view .LVU517
 1590 0022 000C     		lsrs	r0, r0, #16
 1591              	.LVL121:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1592              		.loc 1 1498 85 view .LVU518
 1593 0024 7047     		bx	lr
 1594              		.cfi_endproc
 1595              	.LFE144:
 1597              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1598              		.align	1
 1599              		.global	HAL_CAN_GetRxMessage
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1604              	HAL_CAN_GetRxMessage:
 1605              	.LVL122:
 1606              	.LFB145:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of the Rx frame will be stored.
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo, CAN_RxHeaderTypeDe
ARM GAS  /tmp/cc21oG54.s 			page 78


1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1607              		.loc 1 1517 1 is_stmt 1 view -0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 0
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              		@ link register save eliminated.
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1612              		.loc 1 1518 3 view .LVU520
 1613              		.loc 1 1518 24 is_stmt 0 view .LVU521
 1614 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 1615              	.LVL123:
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1616              		.loc 1 1520 3 is_stmt 1 view .LVU522
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1617              		.loc 1 1522 3 view .LVU523
 1618              		.loc 1 1522 38 is_stmt 0 view .LVU524
 1619 0004 0CF1FF3C 		add	ip, ip, #-1
 1620              	.LVL124:
 1621              		.loc 1 1522 38 view .LVU525
 1622 0008 5FFA8CFC 		uxtb	ip, ip
 1623              		.loc 1 1522 6 view .LVU526
 1624 000c BCF1010F 		cmp	ip, #1
 1625 0010 00F29580 		bhi	.L131
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1626              		.loc 1 1517 1 view .LVU527
 1627 0014 30B4     		push	{r4, r5}
 1628              		.cfi_def_cfa_offset 8
 1629              		.cfi_offset 4, -8
 1630              		.cfi_offset 5, -4
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the Rx FIFO */
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1631              		.loc 1 1526 5 is_stmt 1 view .LVU528
 1632              		.loc 1 1526 8 is_stmt 0 view .LVU529
 1633 0016 51B9     		cbnz	r1, .L132
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 1634              		.loc 1 1529 7 is_stmt 1 view .LVU530
 1635              		.loc 1 1529 16 is_stmt 0 view .LVU531
 1636 0018 0468     		ldr	r4, [r0]
 1637              		.loc 1 1529 26 view .LVU532
 1638 001a E468     		ldr	r4, [r4, #12]
 1639              		.loc 1 1529 10 view .LVU533
 1640 001c 14F0030F 		tst	r4, #3
 1641 0020 10D1     		bne	.L133
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1642              		.loc 1 1532 9 is_stmt 1 view .LVU534
 1643              		.loc 1 1532 25 is_stmt 0 view .LVU535
 1644 0022 436A     		ldr	r3, [r0, #36]
 1645              	.LVL125:
 1646              		.loc 1 1532 25 view .LVU536
ARM GAS  /tmp/cc21oG54.s 			page 79


 1647 0024 43F40013 		orr	r3, r3, #2097152
 1648 0028 4362     		str	r3, [r0, #36]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1649              		.loc 1 1534 9 is_stmt 1 view .LVU537
 1650              		.loc 1 1534 16 is_stmt 0 view .LVU538
 1651 002a 0120     		movs	r0, #1
 1652              	.LVL126:
 1653              		.loc 1 1534 16 view .LVU539
 1654 002c 77E0     		b	.L134
 1655              	.LVL127:
 1656              	.L132:
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 1657              		.loc 1 1540 7 is_stmt 1 view .LVU540
 1658              		.loc 1 1540 16 is_stmt 0 view .LVU541
 1659 002e 0468     		ldr	r4, [r0]
 1660              		.loc 1 1540 26 view .LVU542
 1661 0030 2469     		ldr	r4, [r4, #16]
 1662              		.loc 1 1540 10 view .LVU543
 1663 0032 14F0030F 		tst	r4, #3
 1664 0036 05D1     		bne	.L133
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1665              		.loc 1 1543 9 is_stmt 1 view .LVU544
 1666              		.loc 1 1543 25 is_stmt 0 view .LVU545
 1667 0038 436A     		ldr	r3, [r0, #36]
 1668              	.LVL128:
 1669              		.loc 1 1543 25 view .LVU546
 1670 003a 43F40013 		orr	r3, r3, #2097152
 1671 003e 4362     		str	r3, [r0, #36]
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1672              		.loc 1 1545 9 is_stmt 1 view .LVU547
 1673              		.loc 1 1545 16 is_stmt 0 view .LVU548
 1674 0040 0120     		movs	r0, #1
 1675              	.LVL129:
 1676              		.loc 1 1545 16 view .LVU549
 1677 0042 6CE0     		b	.L134
 1678              	.LVL130:
 1679              	.L133:
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the header */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 1680              		.loc 1 1550 5 is_stmt 1 view .LVU550
 1681              		.loc 1 1550 71 is_stmt 0 view .LVU551
 1682 0044 01F11B04 		add	r4, r1, #27
 1683 0048 2401     		lsls	r4, r4, #4
 1684 004a 0568     		ldr	r5, [r0]
 1685 004c 2C59     		ldr	r4, [r5, r4]
ARM GAS  /tmp/cc21oG54.s 			page 80


 1686              		.loc 1 1550 33 view .LVU552
 1687 004e 04F00404 		and	r4, r4, #4
 1688              		.loc 1 1550 18 view .LVU553
 1689 0052 9460     		str	r4, [r2, #8]
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 1690              		.loc 1 1551 5 is_stmt 1 view .LVU554
 1691              		.loc 1 1551 8 is_stmt 0 view .LVU555
 1692 0054 002C     		cmp	r4, #0
 1693 0056 64D1     		bne	.L135
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 1694              		.loc 1 1553 7 is_stmt 1 view .LVU556
 1695              		.loc 1 1553 77 is_stmt 0 view .LVU557
 1696 0058 01F11B04 		add	r4, r1, #27
 1697 005c 2401     		lsls	r4, r4, #4
 1698 005e 0568     		ldr	r5, [r0]
 1699 0060 2C59     		ldr	r4, [r5, r4]
 1700              		.loc 1 1553 83 view .LVU558
 1701 0062 640D     		lsrs	r4, r4, #21
 1702              		.loc 1 1553 22 view .LVU559
 1703 0064 1460     		str	r4, [r2]
 1704              	.L136:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) & hcan->Instance->sFIFOMailBox[RxFifo].RIR)
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 1705              		.loc 1 1559 5 is_stmt 1 view .LVU560
 1706              		.loc 1 1559 40 is_stmt 0 view .LVU561
 1707 0066 0468     		ldr	r4, [r0]
 1708              		.loc 1 1559 72 view .LVU562
 1709 0068 01F11B0C 		add	ip, r1, #27
 1710 006c 4FEA0C1C 		lsl	ip, ip, #4
 1711 0070 54F80C40 		ldr	r4, [r4, ip]
 1712              		.loc 1 1559 34 view .LVU563
 1713 0074 04F00204 		and	r4, r4, #2
 1714              		.loc 1 1559 18 view .LVU564
 1715 0078 D460     		str	r4, [r2, #12]
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 1716              		.loc 1 1560 5 is_stmt 1 view .LVU565
 1717              		.loc 1 1560 41 is_stmt 0 view .LVU566
 1718 007a 0468     		ldr	r4, [r0]
 1719              		.loc 1 1560 73 view .LVU567
 1720 007c 6444     		add	r4, r4, ip
 1721 007e 6468     		ldr	r4, [r4, #4]
 1722              		.loc 1 1560 80 view .LVU568
 1723 0080 04F00F04 		and	r4, r4, #15
 1724              		.loc 1 1560 18 view .LVU569
 1725 0084 1461     		str	r4, [r2, #16]
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 1726              		.loc 1 1561 5 is_stmt 1 view .LVU570
 1727              		.loc 1 1561 54 is_stmt 0 view .LVU571
 1728 0086 0468     		ldr	r4, [r0]
 1729              		.loc 1 1561 86 view .LVU572
 1730 0088 6444     		add	r4, r4, ip
 1731 008a 6468     		ldr	r4, [r4, #4]
ARM GAS  /tmp/cc21oG54.s 			page 81


 1732              		.loc 1 1561 93 view .LVU573
 1733 008c C4F30724 		ubfx	r4, r4, #8, #8
 1734              		.loc 1 1561 31 view .LVU574
 1735 0090 9461     		str	r4, [r2, #24]
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 1736              		.loc 1 1562 5 is_stmt 1 view .LVU575
 1737              		.loc 1 1562 48 is_stmt 0 view .LVU576
 1738 0092 0468     		ldr	r4, [r0]
 1739              		.loc 1 1562 80 view .LVU577
 1740 0094 6444     		add	r4, r4, ip
 1741 0096 6468     		ldr	r4, [r4, #4]
 1742              		.loc 1 1562 87 view .LVU578
 1743 0098 240C     		lsrs	r4, r4, #16
 1744              		.loc 1 1562 24 view .LVU579
 1745 009a 5461     		str	r4, [r2, #20]
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the data */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1746              		.loc 1 1565 5 is_stmt 1 view .LVU580
 1747              		.loc 1 1565 49 is_stmt 0 view .LVU581
 1748 009c 0268     		ldr	r2, [r0]
 1749              	.LVL131:
 1750              		.loc 1 1565 81 view .LVU582
 1751 009e 02EB0112 		add	r2, r2, r1, lsl #4
 1752 00a2 D2F8B821 		ldr	r2, [r2, #440]
 1753              		.loc 1 1565 14 view .LVU583
 1754 00a6 1A70     		strb	r2, [r3]
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1755              		.loc 1 1566 5 is_stmt 1 view .LVU584
 1756              		.loc 1 1566 49 is_stmt 0 view .LVU585
 1757 00a8 0268     		ldr	r2, [r0]
 1758              		.loc 1 1566 81 view .LVU586
 1759 00aa 02EB0112 		add	r2, r2, r1, lsl #4
 1760 00ae D2F8B821 		ldr	r2, [r2, #440]
 1761              		.loc 1 1566 16 view .LVU587
 1762 00b2 C2F30722 		ubfx	r2, r2, #8, #8
 1763              		.loc 1 1566 14 view .LVU588
 1764 00b6 5A70     		strb	r2, [r3, #1]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1765              		.loc 1 1567 5 is_stmt 1 view .LVU589
 1766              		.loc 1 1567 49 is_stmt 0 view .LVU590
 1767 00b8 0268     		ldr	r2, [r0]
 1768              		.loc 1 1567 81 view .LVU591
 1769 00ba 02EB0112 		add	r2, r2, r1, lsl #4
 1770 00be D2F8B821 		ldr	r2, [r2, #440]
 1771              		.loc 1 1567 16 view .LVU592
 1772 00c2 C2F30742 		ubfx	r2, r2, #16, #8
 1773              		.loc 1 1567 14 view .LVU593
 1774 00c6 9A70     		strb	r2, [r3, #2]
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 1775              		.loc 1 1568 5 is_stmt 1 view .LVU594
 1776              		.loc 1 1568 49 is_stmt 0 view .LVU595
 1777 00c8 0268     		ldr	r2, [r0]
 1778              		.loc 1 1568 81 view .LVU596
 1779 00ca 02EB0112 		add	r2, r2, r1, lsl #4
 1780 00ce D2F8B821 		ldr	r2, [r2, #440]
 1781              		.loc 1 1568 16 view .LVU597
ARM GAS  /tmp/cc21oG54.s 			page 82


 1782 00d2 120E     		lsrs	r2, r2, #24
 1783              		.loc 1 1568 14 view .LVU598
 1784 00d4 DA70     		strb	r2, [r3, #3]
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1785              		.loc 1 1569 5 is_stmt 1 view .LVU599
 1786              		.loc 1 1569 49 is_stmt 0 view .LVU600
 1787 00d6 0268     		ldr	r2, [r0]
 1788              		.loc 1 1569 81 view .LVU601
 1789 00d8 02EB0112 		add	r2, r2, r1, lsl #4
 1790 00dc D2F8BC21 		ldr	r2, [r2, #444]
 1791              		.loc 1 1569 14 view .LVU602
 1792 00e0 1A71     		strb	r2, [r3, #4]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1793              		.loc 1 1570 5 is_stmt 1 view .LVU603
 1794              		.loc 1 1570 49 is_stmt 0 view .LVU604
 1795 00e2 0268     		ldr	r2, [r0]
 1796              		.loc 1 1570 81 view .LVU605
 1797 00e4 02EB0112 		add	r2, r2, r1, lsl #4
 1798 00e8 D2F8BC21 		ldr	r2, [r2, #444]
 1799              		.loc 1 1570 16 view .LVU606
 1800 00ec C2F30722 		ubfx	r2, r2, #8, #8
 1801              		.loc 1 1570 14 view .LVU607
 1802 00f0 5A71     		strb	r2, [r3, #5]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1803              		.loc 1 1571 5 is_stmt 1 view .LVU608
 1804              		.loc 1 1571 49 is_stmt 0 view .LVU609
 1805 00f2 0268     		ldr	r2, [r0]
 1806              		.loc 1 1571 81 view .LVU610
 1807 00f4 02EB0112 		add	r2, r2, r1, lsl #4
 1808 00f8 D2F8BC21 		ldr	r2, [r2, #444]
 1809              		.loc 1 1571 16 view .LVU611
 1810 00fc C2F30742 		ubfx	r2, r2, #16, #8
 1811              		.loc 1 1571 14 view .LVU612
 1812 0100 9A71     		strb	r2, [r3, #6]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 1813              		.loc 1 1572 5 is_stmt 1 view .LVU613
 1814              		.loc 1 1572 49 is_stmt 0 view .LVU614
 1815 0102 0268     		ldr	r2, [r0]
 1816              		.loc 1 1572 81 view .LVU615
 1817 0104 02EB0112 		add	r2, r2, r1, lsl #4
 1818 0108 D2F8BC21 		ldr	r2, [r2, #444]
 1819              		.loc 1 1572 16 view .LVU616
 1820 010c 120E     		lsrs	r2, r2, #24
 1821              		.loc 1 1572 14 view .LVU617
 1822 010e DA71     		strb	r2, [r3, #7]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Release the FIFO */
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 1823              		.loc 1 1575 5 is_stmt 1 view .LVU618
 1824              		.loc 1 1575 8 is_stmt 0 view .LVU619
 1825 0110 79B9     		cbnz	r1, .L137
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 0 */
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 1826              		.loc 1 1578 7 is_stmt 1 view .LVU620
 1827 0112 0268     		ldr	r2, [r0]
 1828 0114 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/cc21oG54.s 			page 83


 1829              	.LVL132:
 1830              		.loc 1 1578 7 is_stmt 0 view .LVU621
 1831 0116 43F02003 		orr	r3, r3, #32
 1832 011a D360     		str	r3, [r2, #12]
 1833              	.L138:
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 1 */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1834              		.loc 1 1587 5 is_stmt 1 view .LVU622
 1835              		.loc 1 1587 12 is_stmt 0 view .LVU623
 1836 011c 0020     		movs	r0, #0
 1837              	.LVL133:
 1838              	.L134:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1839              		.loc 1 1596 1 view .LVU624
 1840 011e 30BC     		pop	{r4, r5}
 1841              		.cfi_remember_state
 1842              		.cfi_restore 5
 1843              		.cfi_restore 4
 1844              		.cfi_def_cfa_offset 0
 1845 0120 7047     		bx	lr
 1846              	.LVL134:
 1847              	.L135:
 1848              		.cfi_restore_state
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1849              		.loc 1 1557 7 is_stmt 1 view .LVU625
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1850              		.loc 1 1557 95 is_stmt 0 view .LVU626
 1851 0122 01F11B04 		add	r4, r1, #27
 1852 0126 2401     		lsls	r4, r4, #4
 1853 0128 0568     		ldr	r5, [r0]
 1854 012a 2C59     		ldr	r4, [r5, r4]
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1855              		.loc 1 1557 101 view .LVU627
 1856 012c E408     		lsrs	r4, r4, #3
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1857              		.loc 1 1557 22 view .LVU628
 1858 012e 5460     		str	r4, [r2, #4]
 1859 0130 99E7     		b	.L136
 1860              	.LVL135:
 1861              	.L137:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1862              		.loc 1 1583 7 is_stmt 1 view .LVU629
ARM GAS  /tmp/cc21oG54.s 			page 84


 1863 0132 0268     		ldr	r2, [r0]
 1864 0134 1369     		ldr	r3, [r2, #16]
 1865              	.LVL136:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1866              		.loc 1 1583 7 is_stmt 0 view .LVU630
 1867 0136 43F02003 		orr	r3, r3, #32
 1868 013a 1361     		str	r3, [r2, #16]
 1869 013c EEE7     		b	.L138
 1870              	.LVL137:
 1871              	.L131:
 1872              		.cfi_def_cfa_offset 0
 1873              		.cfi_restore 4
 1874              		.cfi_restore 5
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1875              		.loc 1 1592 5 is_stmt 1 view .LVU631
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1876              		.loc 1 1592 21 is_stmt 0 view .LVU632
 1877 013e 436A     		ldr	r3, [r0, #36]
 1878              	.LVL138:
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 1879              		.loc 1 1592 21 view .LVU633
 1880 0140 43F48023 		orr	r3, r3, #262144
 1881 0144 4362     		str	r3, [r0, #36]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1882              		.loc 1 1594 5 is_stmt 1 view .LVU634
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 1883              		.loc 1 1594 12 is_stmt 0 view .LVU635
 1884 0146 0120     		movs	r0, #1
 1885              	.LVL139:
 1886              		.loc 1 1596 1 view .LVU636
 1887 0148 7047     		bx	lr
 1888              		.cfi_endproc
 1889              	.LFE145:
 1891              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 1892              		.align	1
 1893              		.global	HAL_CAN_GetRxFifoFillLevel
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1898              	HAL_CAN_GetRxFifoFillLevel:
 1899              	.LVL140:
 1900              	.LFB146:
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1901              		.loc 1 1607 1 is_stmt 1 view -0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc21oG54.s 			page 85


 1905              		@ link register save eliminated.
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filllevel = 0U;
 1906              		.loc 1 1608 3 view .LVU638
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1907              		.loc 1 1609 3 view .LVU639
 1908              		.loc 1 1609 24 is_stmt 0 view .LVU640
 1909 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1910              	.LVL141:
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
 1911              		.loc 1 1612 3 is_stmt 1 view .LVU641
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1912              		.loc 1 1614 3 view .LVU642
 1913              		.loc 1 1614 38 is_stmt 0 view .LVU643
 1914 0004 013B     		subs	r3, r3, #1
 1915              	.LVL142:
 1916              		.loc 1 1614 38 view .LVU644
 1917 0006 DBB2     		uxtb	r3, r3
 1918              		.loc 1 1614 6 view .LVU645
 1919 0008 012B     		cmp	r3, #1
 1920 000a 01D9     		bls	.L147
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1921              		.loc 1 1608 12 view .LVU646
 1922 000c 0020     		movs	r0, #0
 1923              	.LVL143:
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return filllevel;
 1924              		.loc 1 1628 3 is_stmt 1 view .LVU647
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1925              		.loc 1 1629 1 is_stmt 0 view .LVU648
 1926 000e 7047     		bx	lr
 1927              	.LVL144:
 1928              	.L147:
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1929              		.loc 1 1617 5 is_stmt 1 view .LVU649
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 1930              		.loc 1 1617 8 is_stmt 0 view .LVU650
 1931 0010 21B9     		cbnz	r1, .L145
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1932              		.loc 1 1619 7 is_stmt 1 view .LVU651
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1933              		.loc 1 1619 23 is_stmt 0 view .LVU652
 1934 0012 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc21oG54.s 			page 86


1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1935              		.loc 1 1619 33 view .LVU653
 1936 0014 D868     		ldr	r0, [r3, #12]
 1937              	.LVL145:
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1938              		.loc 1 1619 17 view .LVU654
 1939 0016 00F00300 		and	r0, r0, #3
 1940              	.LVL146:
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1941              		.loc 1 1619 17 view .LVU655
 1942 001a 7047     		bx	lr
 1943              	.LVL147:
 1944              	.L145:
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1945              		.loc 1 1623 7 is_stmt 1 view .LVU656
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1946              		.loc 1 1623 23 is_stmt 0 view .LVU657
 1947 001c 0368     		ldr	r3, [r0]
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1948              		.loc 1 1623 33 view .LVU658
 1949 001e 1869     		ldr	r0, [r3, #16]
 1950              	.LVL148:
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1951              		.loc 1 1623 17 view .LVU659
 1952 0020 00F00300 		and	r0, r0, #3
 1953              	.LVL149:
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 1954              		.loc 1 1623 17 view .LVU660
 1955 0024 7047     		bx	lr
 1956              		.cfi_endproc
 1957              	.LFE146:
 1959              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 1960              		.align	1
 1961              		.global	HAL_CAN_ActivateNotification
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1966              	HAL_CAN_ActivateNotification:
 1967              	.LVL150:
 1968              	.LFB147:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief    Interrupts management
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                        ##### Interrupts management #####
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 87


1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Enable interrupts.
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1969              		.loc 1 1660 1 is_stmt 1 view -0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 0
 1972              		@ frame_needed = 0, uses_anonymous_args = 0
 1973              		@ link register save eliminated.
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1974              		.loc 1 1661 3 view .LVU662
 1975              		.loc 1 1661 24 is_stmt 0 view .LVU663
 1976 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1977              	.LVL151:
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
 1978              		.loc 1 1664 3 is_stmt 1 view .LVU664
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1979              		.loc 1 1666 3 view .LVU665
 1980              		.loc 1 1666 38 is_stmt 0 view .LVU666
 1981 0004 013B     		subs	r3, r3, #1
 1982              	.LVL152:
 1983              		.loc 1 1666 38 view .LVU667
 1984 0006 DBB2     		uxtb	r3, r3
 1985              		.loc 1 1666 6 view .LVU668
 1986 0008 012B     		cmp	r3, #1
 1987 000a 05D9     		bls	.L151
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Enable the selected interrupts */
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1988              		.loc 1 1678 5 is_stmt 1 view .LVU669
 1989              		.loc 1 1678 21 is_stmt 0 view .LVU670
 1990 000c 436A     		ldr	r3, [r0, #36]
 1991 000e 43F48023 		orr	r3, r3, #262144
 1992 0012 4362     		str	r3, [r0, #36]
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 88


1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1993              		.loc 1 1680 5 is_stmt 1 view .LVU671
 1994              		.loc 1 1680 12 is_stmt 0 view .LVU672
 1995 0014 0120     		movs	r0, #1
 1996              	.LVL153:
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1997              		.loc 1 1682 1 view .LVU673
 1998 0016 7047     		bx	lr
 1999              	.LVL154:
 2000              	.L151:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2001              		.loc 1 1670 5 is_stmt 1 view .LVU674
 2002 0018 0268     		ldr	r2, [r0]
 2003 001a 5369     		ldr	r3, [r2, #20]
 2004 001c 1943     		orrs	r1, r1, r3
 2005              	.LVL155:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2006              		.loc 1 1670 5 is_stmt 0 view .LVU675
 2007 001e 5161     		str	r1, [r2, #20]
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2008              		.loc 1 1673 5 is_stmt 1 view .LVU676
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2009              		.loc 1 1673 12 is_stmt 0 view .LVU677
 2010 0020 0020     		movs	r0, #0
 2011              	.LVL156:
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2012              		.loc 1 1673 12 view .LVU678
 2013 0022 7047     		bx	lr
 2014              		.cfi_endproc
 2015              	.LFE147:
 2017              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2018              		.align	1
 2019              		.global	HAL_CAN_DeactivateNotification
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2024              	HAL_CAN_DeactivateNotification:
 2025              	.LVL157:
 2026              	.LFB148:
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Disable interrupts.
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2027              		.loc 1 1693 1 is_stmt 1 view -0
 2028              		.cfi_startproc
 2029              		@ args = 0, pretend = 0, frame = 0
 2030              		@ frame_needed = 0, uses_anonymous_args = 0
 2031              		@ link register save eliminated.
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
ARM GAS  /tmp/cc21oG54.s 			page 89


 2032              		.loc 1 1694 3 view .LVU680
 2033              		.loc 1 1694 24 is_stmt 0 view .LVU681
 2034 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2035              	.LVL158:
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
 2036              		.loc 1 1697 3 is_stmt 1 view .LVU682
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2037              		.loc 1 1699 3 view .LVU683
 2038              		.loc 1 1699 38 is_stmt 0 view .LVU684
 2039 0004 013B     		subs	r3, r3, #1
 2040              	.LVL159:
 2041              		.loc 1 1699 38 view .LVU685
 2042 0006 DBB2     		uxtb	r3, r3
 2043              		.loc 1 1699 6 view .LVU686
 2044 0008 012B     		cmp	r3, #1
 2045 000a 05D9     		bls	.L155
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Disable the selected interrupts */
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2046              		.loc 1 1711 5 is_stmt 1 view .LVU687
 2047              		.loc 1 1711 21 is_stmt 0 view .LVU688
 2048 000c 436A     		ldr	r3, [r0, #36]
 2049 000e 43F48023 		orr	r3, r3, #262144
 2050 0012 4362     		str	r3, [r0, #36]
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2051              		.loc 1 1713 5 is_stmt 1 view .LVU689
 2052              		.loc 1 1713 12 is_stmt 0 view .LVU690
 2053 0014 0120     		movs	r0, #1
 2054              	.LVL160:
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2055              		.loc 1 1715 1 view .LVU691
 2056 0016 7047     		bx	lr
 2057              	.LVL161:
 2058              	.L155:
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2059              		.loc 1 1703 5 is_stmt 1 view .LVU692
 2060 0018 0268     		ldr	r2, [r0]
 2061 001a 5369     		ldr	r3, [r2, #20]
 2062 001c 23EA0101 		bic	r1, r3, r1
 2063              	.LVL162:
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2064              		.loc 1 1703 5 is_stmt 0 view .LVU693
 2065 0020 5161     		str	r1, [r2, #20]
ARM GAS  /tmp/cc21oG54.s 			page 90


1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2066              		.loc 1 1706 5 is_stmt 1 view .LVU694
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2067              		.loc 1 1706 12 is_stmt 0 view .LVU695
 2068 0022 0020     		movs	r0, #0
 2069              	.LVL163:
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2070              		.loc 1 1706 12 view .LVU696
 2071 0024 7047     		bx	lr
 2072              		.cfi_endproc
 2073              	.LFE148:
 2075              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 2076              		.align	1
 2077              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 2078              		.syntax unified
 2079              		.thumb
 2080              		.thumb_func
 2082              	HAL_CAN_TxMailbox0CompleteCallback:
 2083              	.LVL164:
 2084              	.LFB150:
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
ARM GAS  /tmp/cc21oG54.s 			page 91


1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
ARM GAS  /tmp/cc21oG54.s 			page 92


1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
ARM GAS  /tmp/cc21oG54.s 			page 93


1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
ARM GAS  /tmp/cc21oG54.s 			page 94


1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep Callback */
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
ARM GAS  /tmp/cc21oG54.s 			page 95


1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear WakeUp Flag */
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* WakeUp Callback */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Error interrupts management *********************************************/
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Warning Flag */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Passive Flag */
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Bus-off Flag */
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Last Error Code Flag */
ARM GAS  /tmp/cc21oG54.s 			page 96


2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Form error */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Clear Last error code Flag */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Clear ERRI Flag */
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code in handle */
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call Error callback function */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call registered callback*/
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  /tmp/cc21oG54.s 			page 97


2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief   CAN Callback functions
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                           ##### Callback functions #####
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides the following callback functions:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2085              		.loc 1 2135 1 is_stmt 1 view -0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089              		@ link register save eliminated.
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2090              		.loc 1 2137 3 view .LVU698
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2091              		.loc 1 2143 1 is_stmt 0 view .LVU699
 2092 0000 7047     		bx	lr
ARM GAS  /tmp/cc21oG54.s 			page 98


 2093              		.cfi_endproc
 2094              	.LFE150:
 2096              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 2097              		.align	1
 2098              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2103              	HAL_CAN_TxMailbox1CompleteCallback:
 2104              	.LVL165:
 2105              	.LFB151:
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2106              		.loc 1 2152 1 is_stmt 1 view -0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
 2110              		@ link register save eliminated.
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2111              		.loc 1 2154 3 view .LVU701
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2112              		.loc 1 2160 1 is_stmt 0 view .LVU702
 2113 0000 7047     		bx	lr
 2114              		.cfi_endproc
 2115              	.LFE151:
 2117              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 2118              		.align	1
 2119              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 2120              		.syntax unified
 2121              		.thumb
 2122              		.thumb_func
 2124              	HAL_CAN_TxMailbox2CompleteCallback:
 2125              	.LVL166:
 2126              	.LFB152:
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2127              		.loc 1 2169 1 is_stmt 1 view -0
ARM GAS  /tmp/cc21oG54.s 			page 99


 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131              		@ link register save eliminated.
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2132              		.loc 1 2171 3 view .LVU704
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2133              		.loc 1 2177 1 is_stmt 0 view .LVU705
 2134 0000 7047     		bx	lr
 2135              		.cfi_endproc
 2136              	.LFE152:
 2138              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 2139              		.align	1
 2140              		.weak	HAL_CAN_TxMailbox0AbortCallback
 2141              		.syntax unified
 2142              		.thumb
 2143              		.thumb_func
 2145              	HAL_CAN_TxMailbox0AbortCallback:
 2146              	.LVL167:
 2147              	.LFB153:
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2148              		.loc 1 2186 1 is_stmt 1 view -0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 0
 2151              		@ frame_needed = 0, uses_anonymous_args = 0
 2152              		@ link register save eliminated.
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2153              		.loc 1 2188 3 view .LVU707
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2154              		.loc 1 2194 1 is_stmt 0 view .LVU708
 2155 0000 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE153:
 2159              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 2160              		.align	1
 2161              		.weak	HAL_CAN_TxMailbox1AbortCallback
 2162              		.syntax unified
ARM GAS  /tmp/cc21oG54.s 			page 100


 2163              		.thumb
 2164              		.thumb_func
 2166              	HAL_CAN_TxMailbox1AbortCallback:
 2167              	.LVL168:
 2168              	.LFB154:
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2169              		.loc 1 2203 1 is_stmt 1 view -0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 0
 2172              		@ frame_needed = 0, uses_anonymous_args = 0
 2173              		@ link register save eliminated.
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2174              		.loc 1 2205 3 view .LVU710
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2175              		.loc 1 2211 1 is_stmt 0 view .LVU711
 2176 0000 7047     		bx	lr
 2177              		.cfi_endproc
 2178              	.LFE154:
 2180              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 2181              		.align	1
 2182              		.weak	HAL_CAN_TxMailbox2AbortCallback
 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2187              	HAL_CAN_TxMailbox2AbortCallback:
 2188              	.LVL169:
 2189              	.LFB155:
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2190              		.loc 1 2220 1 is_stmt 1 view -0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 2194              		@ link register save eliminated.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
ARM GAS  /tmp/cc21oG54.s 			page 101


 2195              		.loc 1 2222 3 view .LVU713
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2196              		.loc 1 2228 1 is_stmt 0 view .LVU714
 2197 0000 7047     		bx	lr
 2198              		.cfi_endproc
 2199              	.LFE155:
 2201              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 2202              		.align	1
 2203              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 2204              		.syntax unified
 2205              		.thumb
 2206              		.thumb_func
 2208              	HAL_CAN_RxFifo0MsgPendingCallback:
 2209              	.LVL170:
 2210              	.LFB156:
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2211              		.loc 1 2237 1 is_stmt 1 view -0
 2212              		.cfi_startproc
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 0, uses_anonymous_args = 0
 2215              		@ link register save eliminated.
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2216              		.loc 1 2239 3 view .LVU716
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2217              		.loc 1 2245 1 is_stmt 0 view .LVU717
 2218 0000 7047     		bx	lr
 2219              		.cfi_endproc
 2220              	.LFE156:
 2222              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 2223              		.align	1
 2224              		.weak	HAL_CAN_RxFifo0FullCallback
 2225              		.syntax unified
 2226              		.thumb
 2227              		.thumb_func
 2229              	HAL_CAN_RxFifo0FullCallback:
 2230              	.LVL171:
 2231              	.LFB157:
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 102


2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2232              		.loc 1 2254 1 is_stmt 1 view -0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              		@ link register save eliminated.
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2237              		.loc 1 2256 3 view .LVU719
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2238              		.loc 1 2262 1 is_stmt 0 view .LVU720
 2239 0000 7047     		bx	lr
 2240              		.cfi_endproc
 2241              	.LFE157:
 2243              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 2244              		.align	1
 2245              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 2246              		.syntax unified
 2247              		.thumb
 2248              		.thumb_func
 2250              	HAL_CAN_RxFifo1MsgPendingCallback:
 2251              	.LVL172:
 2252              	.LFB158:
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2253              		.loc 1 2271 1 is_stmt 1 view -0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 0
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2258              		.loc 1 2273 3 view .LVU722
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
ARM GAS  /tmp/cc21oG54.s 			page 103


2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2259              		.loc 1 2279 1 is_stmt 0 view .LVU723
 2260 0000 7047     		bx	lr
 2261              		.cfi_endproc
 2262              	.LFE158:
 2264              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 2265              		.align	1
 2266              		.weak	HAL_CAN_RxFifo1FullCallback
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2271              	HAL_CAN_RxFifo1FullCallback:
 2272              	.LVL173:
 2273              	.LFB159:
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2274              		.loc 1 2288 1 is_stmt 1 view -0
 2275              		.cfi_startproc
 2276              		@ args = 0, pretend = 0, frame = 0
 2277              		@ frame_needed = 0, uses_anonymous_args = 0
 2278              		@ link register save eliminated.
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2279              		.loc 1 2290 3 view .LVU725
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2280              		.loc 1 2296 1 is_stmt 0 view .LVU726
 2281 0000 7047     		bx	lr
 2282              		.cfi_endproc
 2283              	.LFE159:
 2285              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 2286              		.align	1
 2287              		.weak	HAL_CAN_SleepCallback
 2288              		.syntax unified
 2289              		.thumb
 2290              		.thumb_func
 2292              	HAL_CAN_SleepCallback:
 2293              	.LVL174:
 2294              	.LFB160:
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Sleep callback.
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
ARM GAS  /tmp/cc21oG54.s 			page 104


2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2295              		.loc 1 2305 1 is_stmt 1 view -0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 0
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              		@ link register save eliminated.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2300              		.loc 1 2307 3 view .LVU728
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2301              		.loc 1 2312 1 is_stmt 0 view .LVU729
 2302 0000 7047     		bx	lr
 2303              		.cfi_endproc
 2304              	.LFE160:
 2306              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 2307              		.align	1
 2308              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2313              	HAL_CAN_WakeUpFromRxMsgCallback:
 2314              	.LVL175:
 2315              	.LFB161:
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2316              		.loc 1 2321 1 is_stmt 1 view -0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2321              		.loc 1 2323 3 view .LVU731
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2322              		.loc 1 2329 1 is_stmt 0 view .LVU732
 2323 0000 7047     		bx	lr
 2324              		.cfi_endproc
 2325              	.LFE161:
 2327              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2328              		.align	1
ARM GAS  /tmp/cc21oG54.s 			page 105


 2329              		.weak	HAL_CAN_ErrorCallback
 2330              		.syntax unified
 2331              		.thumb
 2332              		.thumb_func
 2334              	HAL_CAN_ErrorCallback:
 2335              	.LVL176:
 2336              	.LFB162:
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Error CAN callback.
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2337              		.loc 1 2338 1 is_stmt 1 view -0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 0, uses_anonymous_args = 0
 2341              		@ link register save eliminated.
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 2342              		.loc 1 2340 3 view .LVU734
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2343              		.loc 1 2345 1 is_stmt 0 view .LVU735
 2344 0000 7047     		bx	lr
 2345              		.cfi_endproc
 2346              	.LFE162:
 2348              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2349              		.align	1
 2350              		.global	HAL_CAN_IRQHandler
 2351              		.syntax unified
 2352              		.thumb
 2353              		.thumb_func
 2355              	HAL_CAN_IRQHandler:
 2356              	.LVL177:
 2357              	.LFB149:
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2358              		.loc 1 1724 1 is_stmt 1 view -0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2362              		.loc 1 1724 1 is_stmt 0 view .LVU737
 2363 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2364              		.cfi_def_cfa_offset 40
 2365              		.cfi_offset 3, -40
 2366              		.cfi_offset 4, -36
 2367              		.cfi_offset 5, -32
 2368              		.cfi_offset 6, -28
 2369              		.cfi_offset 7, -24
 2370              		.cfi_offset 8, -20
ARM GAS  /tmp/cc21oG54.s 			page 106


 2371              		.cfi_offset 9, -16
 2372              		.cfi_offset 10, -12
 2373              		.cfi_offset 11, -8
 2374              		.cfi_offset 14, -4
 2375 0004 0546     		mov	r5, r0
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2376              		.loc 1 1725 3 is_stmt 1 view .LVU738
 2377              	.LVL178:
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2378              		.loc 1 1726 3 view .LVU739
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2379              		.loc 1 1726 25 is_stmt 0 view .LVU740
 2380 0006 0368     		ldr	r3, [r0]
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2381              		.loc 1 1726 12 view .LVU741
 2382 0008 5C69     		ldr	r4, [r3, #20]
 2383              	.LVL179:
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2384              		.loc 1 1727 3 is_stmt 1 view .LVU742
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2385              		.loc 1 1727 12 is_stmt 0 view .LVU743
 2386 000a D3F80480 		ldr	r8, [r3, #4]
 2387              	.LVL180:
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2388              		.loc 1 1728 3 is_stmt 1 view .LVU744
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2389              		.loc 1 1728 12 is_stmt 0 view .LVU745
 2390 000e 9F68     		ldr	r7, [r3, #8]
 2391              	.LVL181:
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2392              		.loc 1 1729 3 is_stmt 1 view .LVU746
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2393              		.loc 1 1729 12 is_stmt 0 view .LVU747
 2394 0010 D3F80CB0 		ldr	fp, [r3, #12]
 2395              	.LVL182:
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2396              		.loc 1 1730 3 is_stmt 1 view .LVU748
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2397              		.loc 1 1730 12 is_stmt 0 view .LVU749
 2398 0014 D3F810A0 		ldr	r10, [r3, #16]
 2399              	.LVL183:
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2400              		.loc 1 1731 3 is_stmt 1 view .LVU750
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2401              		.loc 1 1731 12 is_stmt 0 view .LVU751
 2402 0018 D3F81890 		ldr	r9, [r3, #24]
 2403              	.LVL184:
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2404              		.loc 1 1734 3 is_stmt 1 view .LVU752
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2405              		.loc 1 1734 6 is_stmt 0 view .LVU753
 2406 001c 14F00106 		ands	r6, r4, #1
 2407 0020 3BD0     		beq	.L170
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2408              		.loc 1 1737 5 is_stmt 1 view .LVU754
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2409              		.loc 1 1737 8 is_stmt 0 view .LVU755
ARM GAS  /tmp/cc21oG54.s 			page 107


 2410 0022 17F00106 		ands	r6, r7, #1
 2411 0026 16D0     		beq	.L171
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2412              		.loc 1 1740 7 is_stmt 1 view .LVU756
 2413 0028 0122     		movs	r2, #1
 2414 002a 9A60     		str	r2, [r3, #8]
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2415              		.loc 1 1742 7 view .LVU757
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2416              		.loc 1 1742 10 is_stmt 0 view .LVU758
 2417 002c 17F0020F 		tst	r7, #2
 2418 0030 08D1     		bne	.L205
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2419              		.loc 1 1755 9 is_stmt 1 view .LVU759
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2420              		.loc 1 1755 12 is_stmt 0 view .LVU760
 2421 0032 17F0040F 		tst	r7, #4
 2422 0036 0CD1     		bne	.L202
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2423              		.loc 1 1760 14 is_stmt 1 view .LVU761
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2424              		.loc 1 1760 17 is_stmt 0 view .LVU762
 2425 0038 17F00806 		ands	r6, r7, #8
 2426 003c 06D0     		beq	.L206
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2427              		.loc 1 1763 21 view .LVU763
 2428 003e 4FF48056 		mov	r6, #4096
 2429 0042 08E0     		b	.L171
 2430              	.L205:
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2431              		.loc 1 1750 9 is_stmt 1 view .LVU764
 2432 0044 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2433              	.LVL185:
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2434              		.loc 1 1725 12 is_stmt 0 view .LVU765
 2435 0048 0026     		movs	r6, #0
 2436 004a 04E0     		b	.L171
 2437              	.LVL186:
 2438              	.L206:
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2439              		.loc 1 1773 11 is_stmt 1 view .LVU766
 2440 004c FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2441              	.LVL187:
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2442              		.loc 1 1773 11 is_stmt 0 view .LVU767
 2443 0050 01E0     		b	.L171
 2444              	.LVL188:
 2445              	.L202:
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2446              		.loc 1 1758 21 view .LVU768
 2447 0052 4FF40066 		mov	r6, #2048
 2448              	.LVL189:
 2449              	.L171:
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2450              		.loc 1 1780 5 is_stmt 1 view .LVU769
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2451              		.loc 1 1780 8 is_stmt 0 view .LVU770
ARM GAS  /tmp/cc21oG54.s 			page 108


 2452 0056 17F4807F 		tst	r7, #256
 2453 005a 0DD0     		beq	.L173
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2454              		.loc 1 1783 7 is_stmt 1 view .LVU771
 2455 005c 2B68     		ldr	r3, [r5]
 2456 005e 4FF48072 		mov	r2, #256
 2457 0062 9A60     		str	r2, [r3, #8]
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2458              		.loc 1 1785 7 view .LVU772
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2459              		.loc 1 1785 10 is_stmt 0 view .LVU773
 2460 0064 17F4007F 		tst	r7, #512
 2461 0068 40F08680 		bne	.L207
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2462              		.loc 1 1798 9 is_stmt 1 view .LVU774
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2463              		.loc 1 1798 12 is_stmt 0 view .LVU775
 2464 006c 17F4806F 		tst	r7, #1024
 2465 0070 00F08680 		beq	.L175
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2466              		.loc 1 1801 11 is_stmt 1 view .LVU776
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2467              		.loc 1 1801 21 is_stmt 0 view .LVU777
 2468 0074 46F40056 		orr	r6, r6, #8192
 2469              	.LVL190:
 2470              	.L173:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2471              		.loc 1 1823 5 is_stmt 1 view .LVU778
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2472              		.loc 1 1823 8 is_stmt 0 view .LVU779
 2473 0078 17F4803F 		tst	r7, #65536
 2474 007c 0DD0     		beq	.L170
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2475              		.loc 1 1826 7 is_stmt 1 view .LVU780
 2476 007e 2B68     		ldr	r3, [r5]
 2477 0080 4FF48032 		mov	r2, #65536
 2478 0084 9A60     		str	r2, [r3, #8]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2479              		.loc 1 1828 7 view .LVU781
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
 2480              		.loc 1 1828 10 is_stmt 0 view .LVU782
 2481 0086 17F4003F 		tst	r7, #131072
 2482 008a 40F08380 		bne	.L208
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2483              		.loc 1 1841 9 is_stmt 1 view .LVU783
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2484              		.loc 1 1841 12 is_stmt 0 view .LVU784
 2485 008e 17F4802F 		tst	r7, #262144
 2486 0092 00F08380 		beq	.L178
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2487              		.loc 1 1844 11 is_stmt 1 view .LVU785
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2488              		.loc 1 1844 21 is_stmt 0 view .LVU786
 2489 0096 46F40046 		orr	r6, r6, #32768
 2490              	.LVL191:
 2491              	.L170:
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/cc21oG54.s 			page 109


 2492              		.loc 1 1867 3 is_stmt 1 view .LVU787
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2493              		.loc 1 1867 6 is_stmt 0 view .LVU788
 2494 009a 14F0080F 		tst	r4, #8
 2495 009e 07D0     		beq	.L180
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2496              		.loc 1 1869 5 is_stmt 1 view .LVU789
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2497              		.loc 1 1869 8 is_stmt 0 view .LVU790
 2498 00a0 1BF0100F 		tst	fp, #16
 2499 00a4 04D0     		beq	.L180
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2500              		.loc 1 1872 7 is_stmt 1 view .LVU791
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2501              		.loc 1 1872 17 is_stmt 0 view .LVU792
 2502 00a6 46F40076 		orr	r6, r6, #512
 2503              	.LVL192:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2504              		.loc 1 1875 7 is_stmt 1 view .LVU793
 2505 00aa 2B68     		ldr	r3, [r5]
 2506 00ac 1022     		movs	r2, #16
 2507 00ae DA60     		str	r2, [r3, #12]
 2508              	.L180:
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2509              		.loc 1 1880 3 view .LVU794
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2510              		.loc 1 1880 6 is_stmt 0 view .LVU795
 2511 00b0 14F0040F 		tst	r4, #4
 2512 00b4 02D0     		beq	.L181
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2513              		.loc 1 1882 5 is_stmt 1 view .LVU796
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2514              		.loc 1 1882 8 is_stmt 0 view .LVU797
 2515 00b6 1BF0080F 		tst	fp, #8
 2516 00ba 79D1     		bne	.L209
 2517              	.L181:
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2518              		.loc 1 1899 3 is_stmt 1 view .LVU798
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2519              		.loc 1 1899 6 is_stmt 0 view .LVU799
 2520 00bc 14F0020F 		tst	r4, #2
 2521 00c0 04D0     		beq	.L182
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2522              		.loc 1 1902 5 is_stmt 1 view .LVU800
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2523              		.loc 1 1902 14 is_stmt 0 view .LVU801
 2524 00c2 2B68     		ldr	r3, [r5]
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2525              		.loc 1 1902 24 view .LVU802
 2526 00c4 DB68     		ldr	r3, [r3, #12]
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2527              		.loc 1 1902 8 view .LVU803
 2528 00c6 13F0030F 		tst	r3, #3
 2529 00ca 78D1     		bne	.L210
 2530              	.L182:
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2531              		.loc 1 1916 3 is_stmt 1 view .LVU804
ARM GAS  /tmp/cc21oG54.s 			page 110


1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2532              		.loc 1 1916 6 is_stmt 0 view .LVU805
 2533 00cc 14F0400F 		tst	r4, #64
 2534 00d0 07D0     		beq	.L183
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2535              		.loc 1 1918 5 is_stmt 1 view .LVU806
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2536              		.loc 1 1918 8 is_stmt 0 view .LVU807
 2537 00d2 1AF0100F 		tst	r10, #16
 2538 00d6 04D0     		beq	.L183
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2539              		.loc 1 1921 7 is_stmt 1 view .LVU808
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2540              		.loc 1 1921 17 is_stmt 0 view .LVU809
 2541 00d8 46F48066 		orr	r6, r6, #1024
 2542              	.LVL193:
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2543              		.loc 1 1924 7 is_stmt 1 view .LVU810
 2544 00dc 2B68     		ldr	r3, [r5]
 2545 00de 1022     		movs	r2, #16
 2546 00e0 1A61     		str	r2, [r3, #16]
 2547              	.L183:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2548              		.loc 1 1929 3 view .LVU811
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2549              		.loc 1 1929 6 is_stmt 0 view .LVU812
 2550 00e2 14F0200F 		tst	r4, #32
 2551 00e6 02D0     		beq	.L184
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2552              		.loc 1 1931 5 is_stmt 1 view .LVU813
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2553              		.loc 1 1931 8 is_stmt 0 view .LVU814
 2554 00e8 1AF0080F 		tst	r10, #8
 2555 00ec 6BD1     		bne	.L211
 2556              	.L184:
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2557              		.loc 1 1948 3 is_stmt 1 view .LVU815
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2558              		.loc 1 1948 6 is_stmt 0 view .LVU816
 2559 00ee 14F0100F 		tst	r4, #16
 2560 00f2 04D0     		beq	.L185
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2561              		.loc 1 1951 5 is_stmt 1 view .LVU817
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2562              		.loc 1 1951 14 is_stmt 0 view .LVU818
 2563 00f4 2B68     		ldr	r3, [r5]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2564              		.loc 1 1951 24 view .LVU819
 2565 00f6 1B69     		ldr	r3, [r3, #16]
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2566              		.loc 1 1951 8 view .LVU820
 2567 00f8 13F0030F 		tst	r3, #3
 2568 00fc 6AD1     		bne	.L212
 2569              	.L185:
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2570              		.loc 1 1965 3 is_stmt 1 view .LVU821
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  /tmp/cc21oG54.s 			page 111


 2571              		.loc 1 1965 6 is_stmt 0 view .LVU822
 2572 00fe 14F4003F 		tst	r4, #131072
 2573 0102 02D0     		beq	.L186
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2574              		.loc 1 1967 5 is_stmt 1 view .LVU823
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2575              		.loc 1 1967 8 is_stmt 0 view .LVU824
 2576 0104 18F0100F 		tst	r8, #16
 2577 0108 68D1     		bne	.L213
 2578              	.L186:
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2579              		.loc 1 1984 3 is_stmt 1 view .LVU825
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2580              		.loc 1 1984 6 is_stmt 0 view .LVU826
 2581 010a 14F4803F 		tst	r4, #65536
 2582 010e 02D0     		beq	.L187
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2583              		.loc 1 1986 5 is_stmt 1 view .LVU827
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2584              		.loc 1 1986 8 is_stmt 0 view .LVU828
 2585 0110 18F0080F 		tst	r8, #8
 2586 0114 69D1     		bne	.L214
 2587              	.L187:
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2588              		.loc 1 2003 3 is_stmt 1 view .LVU829
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2589              		.loc 1 2003 6 is_stmt 0 view .LVU830
 2590 0116 14F4004F 		tst	r4, #32768
 2591 011a 7AD0     		beq	.L188
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2592              		.loc 1 2005 5 is_stmt 1 view .LVU831
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2593              		.loc 1 2005 8 is_stmt 0 view .LVU832
 2594 011c 18F0040F 		tst	r8, #4
 2595 0120 74D0     		beq	.L189
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2596              		.loc 1 2008 7 is_stmt 1 view .LVU833
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2597              		.loc 1 2008 10 is_stmt 0 view .LVU834
 2598 0122 14F4807F 		tst	r4, #256
 2599 0126 04D0     		beq	.L190
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 2600              		.loc 1 2008 55 discriminator 1 view .LVU835
 2601 0128 19F0010F 		tst	r9, #1
 2602 012c 01D0     		beq	.L190
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2603              		.loc 1 2012 9 is_stmt 1 view .LVU836
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2604              		.loc 1 2012 19 is_stmt 0 view .LVU837
 2605 012e 46F00106 		orr	r6, r6, #1
 2606              	.LVL194:
 2607              	.L190:
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2608              		.loc 1 2018 7 is_stmt 1 view .LVU838
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2609              		.loc 1 2018 10 is_stmt 0 view .LVU839
 2610 0132 14F4007F 		tst	r4, #512
ARM GAS  /tmp/cc21oG54.s 			page 112


 2611 0136 04D0     		beq	.L191
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 2612              		.loc 1 2018 55 discriminator 1 view .LVU840
 2613 0138 19F0020F 		tst	r9, #2
 2614 013c 01D0     		beq	.L191
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2615              		.loc 1 2022 9 is_stmt 1 view .LVU841
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2616              		.loc 1 2022 19 is_stmt 0 view .LVU842
 2617 013e 46F00206 		orr	r6, r6, #2
 2618              	.LVL195:
 2619              	.L191:
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2620              		.loc 1 2028 7 is_stmt 1 view .LVU843
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2621              		.loc 1 2028 10 is_stmt 0 view .LVU844
 2622 0142 14F4806F 		tst	r4, #1024
 2623 0146 04D0     		beq	.L192
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 2624              		.loc 1 2028 48 discriminator 1 view .LVU845
 2625 0148 19F0040F 		tst	r9, #4
 2626 014c 01D0     		beq	.L192
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2627              		.loc 1 2032 9 is_stmt 1 view .LVU846
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2628              		.loc 1 2032 19 is_stmt 0 view .LVU847
 2629 014e 46F00406 		orr	r6, r6, #4
 2630              	.LVL196:
 2631              	.L192:
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2632              		.loc 1 2038 7 is_stmt 1 view .LVU848
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2633              		.loc 1 2038 10 is_stmt 0 view .LVU849
 2634 0152 14F4006F 		tst	r4, #2048
 2635 0156 59D0     		beq	.L189
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2636              		.loc 1 2038 57 discriminator 1 view .LVU850
 2637 0158 19F07009 		ands	r9, r9, #112
 2638              	.LVL197:
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 2639              		.loc 1 2038 57 discriminator 1 view .LVU851
 2640 015c 56D0     		beq	.L189
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2641              		.loc 1 2041 9 is_stmt 1 view .LVU852
 2642 015e B9F1400F 		cmp	r9, #64
 2643 0162 65D0     		beq	.L193
 2644 0164 58D8     		bhi	.L194
 2645 0166 B9F1200F 		cmp	r9, #32
 2646 016a 5ED0     		beq	.L195
 2647 016c B9F1300F 		cmp	r9, #48
 2648 0170 42D1     		bne	.L215
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2649              		.loc 1 2053 13 view .LVU853
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2650              		.loc 1 2053 23 is_stmt 0 view .LVU854
 2651 0172 46F02006 		orr	r6, r6, #32
 2652              	.LVL198:
ARM GAS  /tmp/cc21oG54.s 			page 113


2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 2653              		.loc 1 2054 13 is_stmt 1 view .LVU855
 2654 0176 44E0     		b	.L198
 2655              	.LVL199:
 2656              	.L207:
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2657              		.loc 1 1793 9 view .LVU856
 2658 0178 2846     		mov	r0, r5
 2659 017a FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2660              	.LVL200:
 2661 017e 7BE7     		b	.L173
 2662              	.L175:
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2663              		.loc 1 1803 14 view .LVU857
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2664              		.loc 1 1803 17 is_stmt 0 view .LVU858
 2665 0180 17F4006F 		tst	r7, #2048
 2666 0184 02D0     		beq	.L176
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2667              		.loc 1 1806 11 is_stmt 1 view .LVU859
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2668              		.loc 1 1806 21 is_stmt 0 view .LVU860
 2669 0186 46F48046 		orr	r6, r6, #16384
 2670              	.LVL201:
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2671              		.loc 1 1806 21 view .LVU861
 2672 018a 75E7     		b	.L173
 2673              	.L176:
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2674              		.loc 1 1816 11 is_stmt 1 view .LVU862
 2675 018c 2846     		mov	r0, r5
 2676 018e FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2677              	.LVL202:
 2678 0192 71E7     		b	.L173
 2679              	.L208:
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2680              		.loc 1 1836 9 view .LVU863
 2681 0194 2846     		mov	r0, r5
 2682 0196 FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2683              	.LVL203:
 2684 019a 7EE7     		b	.L170
 2685              	.L178:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2686              		.loc 1 1846 14 view .LVU864
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2687              		.loc 1 1846 17 is_stmt 0 view .LVU865
 2688 019c 17F4002F 		tst	r7, #524288
 2689 01a0 02D0     		beq	.L179
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2690              		.loc 1 1849 11 is_stmt 1 view .LVU866
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2691              		.loc 1 1849 21 is_stmt 0 view .LVU867
 2692 01a2 46F48036 		orr	r6, r6, #65536
 2693              	.LVL204:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
 2694              		.loc 1 1849 21 view .LVU868
 2695 01a6 78E7     		b	.L170
ARM GAS  /tmp/cc21oG54.s 			page 114


 2696              	.L179:
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2697              		.loc 1 1859 11 is_stmt 1 view .LVU869
 2698 01a8 2846     		mov	r0, r5
 2699 01aa FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2700              	.LVL205:
 2701 01ae 74E7     		b	.L170
 2702              	.L209:
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2703              		.loc 1 1885 7 view .LVU870
 2704 01b0 2B68     		ldr	r3, [r5]
 2705 01b2 0822     		movs	r2, #8
 2706 01b4 DA60     		str	r2, [r3, #12]
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2707              		.loc 1 1893 7 view .LVU871
 2708 01b6 2846     		mov	r0, r5
 2709 01b8 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2710              	.LVL206:
 2711 01bc 7EE7     		b	.L181
 2712              	.L210:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2713              		.loc 1 1910 7 view .LVU872
 2714 01be 2846     		mov	r0, r5
 2715 01c0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2716              	.LVL207:
 2717 01c4 82E7     		b	.L182
 2718              	.L211:
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2719              		.loc 1 1934 7 view .LVU873
 2720 01c6 2B68     		ldr	r3, [r5]
 2721 01c8 0822     		movs	r2, #8
 2722 01ca 1A61     		str	r2, [r3, #16]
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2723              		.loc 1 1942 7 view .LVU874
 2724 01cc 2846     		mov	r0, r5
 2725 01ce FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2726              	.LVL208:
 2727 01d2 8CE7     		b	.L184
 2728              	.L212:
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2729              		.loc 1 1959 7 view .LVU875
 2730 01d4 2846     		mov	r0, r5
 2731 01d6 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2732              	.LVL209:
 2733 01da 90E7     		b	.L185
 2734              	.L213:
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2735              		.loc 1 1970 7 view .LVU876
 2736 01dc 2B68     		ldr	r3, [r5]
 2737 01de 1022     		movs	r2, #16
 2738 01e0 5A60     		str	r2, [r3, #4]
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2739              		.loc 1 1978 7 view .LVU877
 2740 01e2 2846     		mov	r0, r5
 2741 01e4 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 2742              	.LVL210:
 2743 01e8 8FE7     		b	.L186
ARM GAS  /tmp/cc21oG54.s 			page 115


 2744              	.L214:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2745              		.loc 1 1989 7 view .LVU878
 2746 01ea 2B68     		ldr	r3, [r5]
 2747 01ec 0822     		movs	r2, #8
 2748 01ee 5A60     		str	r2, [r3, #4]
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2749              		.loc 1 1997 7 view .LVU879
 2750 01f0 2846     		mov	r0, r5
 2751 01f2 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 2752              	.LVL211:
 2753 01f6 8EE7     		b	.L187
 2754              	.LVL212:
 2755              	.L215:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2756              		.loc 1 2041 9 is_stmt 0 view .LVU880
 2757 01f8 B9F1100F 		cmp	r9, #16
 2758 01fc 01D1     		bne	.L198
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2759              		.loc 1 2045 13 is_stmt 1 view .LVU881
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2760              		.loc 1 2045 23 is_stmt 0 view .LVU882
 2761 01fe 46F00806 		orr	r6, r6, #8
 2762              	.LVL213:
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 2763              		.loc 1 2046 13 is_stmt 1 view .LVU883
 2764              	.L198:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
 2765              		.loc 1 2072 9 view .LVU884
 2766 0202 2A68     		ldr	r2, [r5]
 2767 0204 9369     		ldr	r3, [r2, #24]
 2768 0206 23F07003 		bic	r3, r3, #112
 2769 020a 9361     		str	r3, [r2, #24]
 2770              	.L189:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2771              		.loc 1 2077 5 view .LVU885
 2772 020c 2B68     		ldr	r3, [r5]
 2773 020e 0422     		movs	r2, #4
 2774 0210 5A60     		str	r2, [r3, #4]
 2775              	.L188:
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2776              		.loc 1 2081 3 view .LVU886
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 2777              		.loc 1 2081 6 is_stmt 0 view .LVU887
 2778 0212 9EB9     		cbnz	r6, .L216
 2779              	.LVL214:
 2780              	.L169:
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2781              		.loc 1 2095 1 view .LVU888
 2782 0214 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2783              	.LVL215:
 2784              	.L194:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
 2785              		.loc 1 2041 9 view .LVU889
 2786 0218 B9F1500F 		cmp	r9, #80
 2787 021c 0BD0     		beq	.L199
 2788 021e B9F1600F 		cmp	r9, #96
ARM GAS  /tmp/cc21oG54.s 			page 116


 2789 0222 EED1     		bne	.L198
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2790              		.loc 1 2065 13 is_stmt 1 view .LVU890
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2791              		.loc 1 2065 23 is_stmt 0 view .LVU891
 2792 0224 46F48076 		orr	r6, r6, #256
 2793              	.LVL216:
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
 2794              		.loc 1 2066 13 is_stmt 1 view .LVU892
 2795 0228 EBE7     		b	.L198
 2796              	.L195:
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2797              		.loc 1 2049 13 view .LVU893
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2798              		.loc 1 2049 23 is_stmt 0 view .LVU894
 2799 022a 46F01006 		orr	r6, r6, #16
 2800              	.LVL217:
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 2801              		.loc 1 2050 13 is_stmt 1 view .LVU895
 2802 022e E8E7     		b	.L198
 2803              	.L193:
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2804              		.loc 1 2057 13 view .LVU896
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2805              		.loc 1 2057 23 is_stmt 0 view .LVU897
 2806 0230 46F04006 		orr	r6, r6, #64
 2807              	.LVL218:
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 2808              		.loc 1 2058 13 is_stmt 1 view .LVU898
 2809 0234 E5E7     		b	.L198
 2810              	.L199:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2811              		.loc 1 2061 13 view .LVU899
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 2812              		.loc 1 2061 23 is_stmt 0 view .LVU900
 2813 0236 46F08006 		orr	r6, r6, #128
 2814              	.LVL219:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 2815              		.loc 1 2062 13 is_stmt 1 view .LVU901
 2816 023a E2E7     		b	.L198
 2817              	.L216:
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2818              		.loc 1 2084 5 view .LVU902
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2819              		.loc 1 2084 21 is_stmt 0 view .LVU903
 2820 023c 6B6A     		ldr	r3, [r5, #36]
 2821 023e 1E43     		orrs	r6, r6, r3
 2822              	.LVL220:
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 2823              		.loc 1 2084 21 view .LVU904
 2824 0240 6E62     		str	r6, [r5, #36]
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 2825              		.loc 1 2092 5 is_stmt 1 view .LVU905
 2826 0242 2846     		mov	r0, r5
 2827 0244 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 2828              	.LVL221:
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 117


 2829              		.loc 1 2095 1 is_stmt 0 view .LVU906
 2830 0248 E4E7     		b	.L169
 2831              		.cfi_endproc
 2832              	.LFE149:
 2834              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 2835              		.align	1
 2836              		.global	HAL_CAN_GetState
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2841              	HAL_CAN_GetState:
 2842              	.LVL222:
 2843              	.LFB163:
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****  *
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides functions allowing to :
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN state.
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL state
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan)
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2844              		.loc 1 2375 1 is_stmt 1 view -0
 2845              		.cfi_startproc
 2846              		@ args = 0, pretend = 0, frame = 0
 2847              		@ frame_needed = 0, uses_anonymous_args = 0
 2848              		@ link register save eliminated.
 2849              		.loc 1 2375 1 is_stmt 0 view .LVU908
 2850 0000 0246     		mov	r2, r0
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2851              		.loc 1 2376 3 is_stmt 1 view .LVU909
 2852              		.loc 1 2376 24 is_stmt 0 view .LVU910
 2853 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2854 0006 D8B2     		uxtb	r0, r3
 2855              	.LVL223:
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  /tmp/cc21oG54.s 			page 118


2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2856              		.loc 1 2378 3 is_stmt 1 view .LVU911
 2857              		.loc 1 2378 38 is_stmt 0 view .LVU912
 2858 0008 013B     		subs	r3, r3, #1
 2859 000a DBB2     		uxtb	r3, r3
 2860              		.loc 1 2378 6 view .LVU913
 2861 000c 012B     		cmp	r3, #1
 2862 000e 00D9     		bls	.L221
 2863              	.LVL224:
 2864              	.L218:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode is active */
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode request flag */
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode request is pending */
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2865              		.loc 1 2396 5 is_stmt 1 view .LVU914
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN state */
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return state;
 2866              		.loc 1 2400 3 view .LVU915
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2867              		.loc 1 2401 1 is_stmt 0 view .LVU916
 2868 0010 7047     		bx	lr
 2869              	.LVL225:
 2870              	.L221:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2871              		.loc 1 2382 5 is_stmt 1 view .LVU917
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2872              		.loc 1 2382 14 is_stmt 0 view .LVU918
 2873 0012 1368     		ldr	r3, [r2]
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2874              		.loc 1 2382 24 view .LVU919
 2875 0014 5A68     		ldr	r2, [r3, #4]
 2876              	.LVL226:
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2877              		.loc 1 2382 8 view .LVU920
 2878 0016 12F0020F 		tst	r2, #2
 2879 001a 05D1     		bne	.L219
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2880              		.loc 1 2388 10 is_stmt 1 view .LVU921
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2881              		.loc 1 2388 29 is_stmt 0 view .LVU922
 2882 001c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc21oG54.s 			page 119


2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 2883              		.loc 1 2388 13 view .LVU923
 2884 001e 13F0020F 		tst	r3, #2
 2885 0022 F5D0     		beq	.L218
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2886              		.loc 1 2391 13 view .LVU924
 2887 0024 0320     		movs	r0, #3
 2888              	.LVL227:
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2889              		.loc 1 2391 13 view .LVU925
 2890 0026 F3E7     		b	.L218
 2891              	.LVL228:
 2892              	.L219:
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2893              		.loc 1 2385 13 view .LVU926
 2894 0028 0420     		movs	r0, #4
 2895              	.LVL229:
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 2896              		.loc 1 2385 13 view .LVU927
 2897 002a 7047     		bx	lr
 2898              		.cfi_endproc
 2899              	.LFE163:
 2901              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 2902              		.align	1
 2903              		.global	HAL_CAN_GetError
 2904              		.syntax unified
 2905              		.thumb
 2906              		.thumb_func
 2908              	HAL_CAN_GetError:
 2909              	.LVL230:
 2910              	.LFB164:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN error code.
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval CAN Error Code
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2911              		.loc 1 2410 1 is_stmt 1 view -0
 2912              		.cfi_startproc
 2913              		@ args = 0, pretend = 0, frame = 0
 2914              		@ frame_needed = 0, uses_anonymous_args = 0
 2915              		@ link register save eliminated.
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN error code */
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return hcan->ErrorCode;
 2916              		.loc 1 2412 3 view .LVU929
 2917              		.loc 1 2412 14 is_stmt 0 view .LVU930
 2918 0000 406A     		ldr	r0, [r0, #36]
 2919              	.LVL231:
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2920              		.loc 1 2413 1 view .LVU931
 2921 0002 7047     		bx	lr
 2922              		.cfi_endproc
 2923              	.LFE164:
 2925              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
ARM GAS  /tmp/cc21oG54.s 			page 120


 2926              		.align	1
 2927              		.global	HAL_CAN_ResetError
 2928              		.syntax unified
 2929              		.thumb
 2930              		.thumb_func
 2932              	HAL_CAN_ResetError:
 2933              	.LVL232:
 2934              	.LFB165:
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2935              		.loc 1 2422 1 is_stmt 1 view -0
 2936              		.cfi_startproc
 2937              		@ args = 0, pretend = 0, frame = 0
 2938              		@ frame_needed = 0, uses_anonymous_args = 0
 2939              		@ link register save eliminated.
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 2940              		.loc 1 2423 3 view .LVU933
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2941              		.loc 1 2424 3 view .LVU934
 2942              		.loc 1 2424 24 is_stmt 0 view .LVU935
 2943 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2944              	.LVL233:
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2945              		.loc 1 2426 3 is_stmt 1 view .LVU936
 2946              		.loc 1 2426 38 is_stmt 0 view .LVU937
 2947 0004 013B     		subs	r3, r3, #1
 2948              	.LVL234:
 2949              		.loc 1 2426 38 view .LVU938
 2950 0006 DBB2     		uxtb	r3, r3
 2951              		.loc 1 2426 6 view .LVU939
 2952 0008 012B     		cmp	r3, #1
 2953 000a 05D9     		bls	.L226
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset CAN error code */
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = 0U;
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2954              		.loc 1 2435 5 is_stmt 1 view .LVU940
 2955              		.loc 1 2435 21 is_stmt 0 view .LVU941
 2956 000c 436A     		ldr	r3, [r0, #36]
 2957 000e 43F48023 		orr	r3, r3, #262144
 2958 0012 4362     		str	r3, [r0, #36]
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status = HAL_ERROR;
 2959              		.loc 1 2437 5 is_stmt 1 view .LVU942
ARM GAS  /tmp/cc21oG54.s 			page 121


 2960              	.LVL235:
 2961              		.loc 1 2437 12 is_stmt 0 view .LVU943
 2962 0014 0120     		movs	r0, #1
 2963              	.LVL236:
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the status */
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 2964              		.loc 1 2441 3 is_stmt 1 view .LVU944
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2965              		.loc 1 2442 1 is_stmt 0 view .LVU945
 2966 0016 7047     		bx	lr
 2967              	.LVL237:
 2968              	.L226:
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2969              		.loc 1 2430 5 is_stmt 1 view .LVU946
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 2970              		.loc 1 2430 21 is_stmt 0 view .LVU947
 2971 0018 0023     		movs	r3, #0
 2972 001a 4362     		str	r3, [r0, #36]
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2973              		.loc 1 2423 21 view .LVU948
 2974 001c 1846     		mov	r0, r3
 2975              	.LVL238:
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2976              		.loc 1 2423 21 view .LVU949
 2977 001e 7047     		bx	lr
 2978              		.cfi_endproc
 2979              	.LFE165:
 2981              		.text
 2982              	.Letext0:
 2983              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2984              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2985              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 2986              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2987              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2988              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 2989              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cc21oG54.s 			page 122


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_can.c
     /tmp/cc21oG54.s:20     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/cc21oG54.s:26     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/cc21oG54.s:42     .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/cc21oG54.s:48     .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/cc21oG54.s:336    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/cc21oG54.s:342    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/cc21oG54.s:357    .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/cc21oG54.s:363    .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/cc21oG54.s:587    .text.HAL_CAN_ConfigFilter:0000000000000134 $d
     /tmp/cc21oG54.s:592    .text.HAL_CAN_Start:0000000000000000 $t
     /tmp/cc21oG54.s:598    .text.HAL_CAN_Start:0000000000000000 HAL_CAN_Start
     /tmp/cc21oG54.s:695    .text.HAL_CAN_Stop:0000000000000000 $t
     /tmp/cc21oG54.s:701    .text.HAL_CAN_Stop:0000000000000000 HAL_CAN_Stop
     /tmp/cc21oG54.s:799    .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/cc21oG54.s:805    .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/cc21oG54.s:859    .text.HAL_CAN_RequestSleep:0000000000000000 $t
     /tmp/cc21oG54.s:865    .text.HAL_CAN_RequestSleep:0000000000000000 HAL_CAN_RequestSleep
     /tmp/cc21oG54.s:914    .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/cc21oG54.s:920    .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/cc21oG54.s:1015   .text.HAL_CAN_WakeUp:0000000000000054 $d
     /tmp/cc21oG54.s:1020   .text.HAL_CAN_IsSleepActive:0000000000000000 $t
     /tmp/cc21oG54.s:1026   .text.HAL_CAN_IsSleepActive:0000000000000000 HAL_CAN_IsSleepActive
     /tmp/cc21oG54.s:1076   .text.HAL_CAN_AddTxMessage:0000000000000000 $t
     /tmp/cc21oG54.s:1082   .text.HAL_CAN_AddTxMessage:0000000000000000 HAL_CAN_AddTxMessage
     /tmp/cc21oG54.s:1296   .text.HAL_CAN_AbortTxRequest:0000000000000000 $t
     /tmp/cc21oG54.s:1302   .text.HAL_CAN_AbortTxRequest:0000000000000000 HAL_CAN_AbortTxRequest
     /tmp/cc21oG54.s:1377   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 $t
     /tmp/cc21oG54.s:1383   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 HAL_CAN_GetTxMailboxesFreeLevel
     /tmp/cc21oG54.s:1454   .text.HAL_CAN_IsTxMessagePending:0000000000000000 $t
     /tmp/cc21oG54.s:1460   .text.HAL_CAN_IsTxMessagePending:0000000000000000 HAL_CAN_IsTxMessagePending
     /tmp/cc21oG54.s:1517   .text.HAL_CAN_GetTxTimestamp:0000000000000000 $t
     /tmp/cc21oG54.s:1523   .text.HAL_CAN_GetTxTimestamp:0000000000000000 HAL_CAN_GetTxTimestamp
     /tmp/cc21oG54.s:1598   .text.HAL_CAN_GetRxMessage:0000000000000000 $t
     /tmp/cc21oG54.s:1604   .text.HAL_CAN_GetRxMessage:0000000000000000 HAL_CAN_GetRxMessage
     /tmp/cc21oG54.s:1892   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 $t
     /tmp/cc21oG54.s:1898   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 HAL_CAN_GetRxFifoFillLevel
     /tmp/cc21oG54.s:1960   .text.HAL_CAN_ActivateNotification:0000000000000000 $t
     /tmp/cc21oG54.s:1966   .text.HAL_CAN_ActivateNotification:0000000000000000 HAL_CAN_ActivateNotification
     /tmp/cc21oG54.s:2018   .text.HAL_CAN_DeactivateNotification:0000000000000000 $t
     /tmp/cc21oG54.s:2024   .text.HAL_CAN_DeactivateNotification:0000000000000000 HAL_CAN_DeactivateNotification
     /tmp/cc21oG54.s:2076   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2082   .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/cc21oG54.s:2097   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2103   .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/cc21oG54.s:2118   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2124   .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/cc21oG54.s:2139   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2145   .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 HAL_CAN_TxMailbox0AbortCallback
     /tmp/cc21oG54.s:2160   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2166   .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 HAL_CAN_TxMailbox1AbortCallback
     /tmp/cc21oG54.s:2181   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2187   .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 HAL_CAN_TxMailbox2AbortCallback
     /tmp/cc21oG54.s:2202   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2208   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cc21oG54.s:2223   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
ARM GAS  /tmp/cc21oG54.s 			page 123


     /tmp/cc21oG54.s:2229   .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/cc21oG54.s:2244   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2250   .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/cc21oG54.s:2265   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2271   .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/cc21oG54.s:2286   .text.HAL_CAN_SleepCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2292   .text.HAL_CAN_SleepCallback:0000000000000000 HAL_CAN_SleepCallback
     /tmp/cc21oG54.s:2307   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2313   .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 HAL_CAN_WakeUpFromRxMsgCallback
     /tmp/cc21oG54.s:2328   .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/cc21oG54.s:2334   .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/cc21oG54.s:2349   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/cc21oG54.s:2355   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/cc21oG54.s:2835   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/cc21oG54.s:2841   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/cc21oG54.s:2902   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/cc21oG54.s:2908   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
     /tmp/cc21oG54.s:2926   .text.HAL_CAN_ResetError:0000000000000000 $t
     /tmp/cc21oG54.s:2932   .text.HAL_CAN_ResetError:0000000000000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
