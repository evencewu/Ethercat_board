ARM GAS  /tmp/ccKlA27f.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RCC_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	RCC_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	RCC_DeInit:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @file    stm32f4xx_rcc.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @version V1.6.1
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @date    21-October-2015
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Peripheral clocks configuration
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           + Interrupts and flags management
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @verbatim
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                       ##### RCC specific features #####
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]  
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       After reset the device is running from Internal High Speed oscillator 
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache 
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       SRAM, Flash and JTAG.
  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           are assigned to be used for debug purpose.
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]          
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       Once the device started from reset, the user application has to:
  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
ARM GAS  /tmp/ccKlA27f.s 			page 2


  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           (if the application needs higher frequency/performance)
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @endverbatim    
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @attention
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * You may not use this file except in compliance with the License.
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * You may obtain a copy of the License at:
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * See the License for the specific language governing permissions and
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * limitations under the License.
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ******************************************************************************
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #include "stm32f4xx_rcc.h"
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC 
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief RCC driver modules
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */ 
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CR Register ---*/
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of HSION bit */
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define HSION_BitNumber           0x00
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of CSSON bit */
  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSSON_BitNumber           0x13
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLON bit */
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLON_BitNumber           0x18
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLI2SON bit */
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLI2SON_BitNumber        0x1A
  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLI2SON_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLI2SON_BitNumber * 4))
ARM GAS  /tmp/ccKlA27f.s 			page 3


  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of PLLSAION bit */
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define PLLSAION_BitNumber        0x1C
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_PLLSAION_BB            (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLSAION_BitNumber * 4))
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of I2SSRC bit */
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x08)
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define I2SSRC_BitNumber          0x17
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- BDCR Register ---*/
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of RTCEN bit */
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x70)
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RTCEN_BitNumber           0x0F
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of BDRST bit */
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDRST_BitNumber           0x10
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CSR Register ---*/
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of LSION bit */
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x74)
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define LSION_BitNumber           0x00
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- DCKCFGR Register ---*/
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of TIMPRE bit */
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_OFFSET            (RCC_OFFSET + 0x8C)
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define TIMPRE_BitNumber          0x18
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define DCKCFGR_TIMPRE_BB         (PERIPH_BB_BASE + (DCKCFGR_OFFSET * 32) + (TIMPRE_BitNumber * 4))
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* --- CFGR Register ---*/
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_OFFSET            (RCC_OFFSET + 0x08)
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  #if defined(STM32F410xx)
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO1EN bit */
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_MCO1EN_BIT_NUMBER      0x8
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO1EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO1EN_BIT_NUMBE
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Alias word address of MCO2EN bit */
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_MCO2EN_BIT_NUMBER      0x9
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define RCC_CFGR_MCO2EN_BB         (PERIPH_BB_BASE + (RCC_CFGR_OFFSET * 32) + (RCC_MCO2EN_BIT_NUMBE
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CFGR register bit mask */
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO2_RESET_MASK      ((uint32_t)0x07FFFFFF)
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CFGR_MCO1_RESET_MASK      ((uint32_t)0xF89FFFFF)
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* RCC Flag Mask */
 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CR register byte 3 (Bits[23:16]) base address */
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CR_BYTE3_ADDRESS          ((uint32_t)0x40023802)
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x01))
 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  /tmp/ccKlA27f.s 			page 4


 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)(RCC_BASE + 0x0C + 0x02))
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* BDCR register base address */
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Private_Functions
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */ 
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ##### Internal and  external clocks, PLL, CSS and MCO configuration functions #####
 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===================================================================================
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the internal/external clocks,
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       PLLs, CSS and MCO pins.
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           the PLL as System clock source.
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock source.
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLLI2S (clocked by HSI or HSE), used to generate an accurate clock to achieve 
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           high-quality audio performance on the I2S interface or SAI interface in case 
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           of STM32F429x/439x devices.
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) PLLSAI clocked by (HSI or HSE), used to generate an accurate clock to SAI 
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           interface and LCD TFT controller available only for STM32F42xxx/43xxx/446xx/469xx/479xx d
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) CSS (Clock security system), once enable and if a HSE clock failure occurs 
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          (HSE used directly or through PLL as System clock source), the System clock
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          is automatically switched to HSI and an interrupt is generated if enabled. 
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          exception vector.   
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  /tmp/ccKlA27f.s 			page 5


 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PA8 pin.
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           clock (through a configurable prescaler) on PC9 pin.
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  @endverbatim
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - HSI ON and used as system clock source
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - All interrupts disabled
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function doesn't modify the configuration of the
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - Peripheral clocks  
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            - LSI, LSE and RTC clocks 
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DeInit(void)
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
  29              		.loc 1 226 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set HSION bit */
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  34              		.loc 1 228 3 view .LVU1
  35              		.loc 1 228 11 is_stmt 0 view .LVU2
  36 0000 0E4B     		ldr	r3, .L2
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 42F00102 		orr	r2, r2, #1
  39 0008 1A60     		str	r2, [r3]
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset CFGR register */
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = 0x00000000;
  40              		.loc 1 231 3 is_stmt 1 view .LVU3
  41              		.loc 1 231 13 is_stmt 0 view .LVU4
  42 000a 0021     		movs	r1, #0
  43 000c 9960     		str	r1, [r3, #8]
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON, CSSON, PLLON, PLLI2S and PLLSAI(STM32F42xxx/43xxx/446xx/469xx/479xx devices) bits
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xEAF6FFFF;
  44              		.loc 1 234 3 is_stmt 1 view .LVU5
  45              		.loc 1 234 11 is_stmt 0 view .LVU6
  46 000e 1A68     		ldr	r2, [r3]
  47 0010 22F0A852 		bic	r2, r2, #352321536
  48 0014 22F41022 		bic	r2, r2, #589824
  49 0018 1A60     		str	r2, [r3]
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLCFGR register */
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = 0x24003010;
ARM GAS  /tmp/ccKlA27f.s 			page 6


  50              		.loc 1 237 3 is_stmt 1 view .LVU7
  51              		.loc 1 237 16 is_stmt 0 view .LVU8
  52 001a 094A     		ldr	r2, .L2+4
  53 001c 5A60     		str	r2, [r3, #4]
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLI2SCFGR register */
 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = 0x20003000;
  54              		.loc 1 241 3 is_stmt 1 view .LVU9
  55              		.loc 1 241 19 is_stmt 0 view .LVU10
  56 001e 094A     		ldr	r2, .L2+8
  57 0020 C3F88420 		str	r2, [r3, #132]
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset PLLSAICFGR register, only available for STM32F42xxx/43xxx/446xx/469xx/479xx devices */
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = 0x24003000;
  58              		.loc 1 246 3 is_stmt 1 view .LVU11
  59              		.loc 1 246 19 is_stmt 0 view .LVU12
  60 0024 02F18062 		add	r2, r2, #67108864
  61 0028 C3F88820 		str	r2, [r3, #136]
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEBYP bit */
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  62              		.loc 1 250 3 is_stmt 1 view .LVU13
  63              		.loc 1 250 11 is_stmt 0 view .LVU14
  64 002c 1A68     		ldr	r2, [r3]
  65 002e 22F48022 		bic	r2, r2, #262144
  66 0032 1A60     		str	r2, [r3]
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable all interrupts */
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CIR = 0x00000000;
  67              		.loc 1 253 3 is_stmt 1 view .LVU15
  68              		.loc 1 253 12 is_stmt 0 view .LVU16
  69 0034 D960     		str	r1, [r3, #12]
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable Timers clock prescalers selection, only available for STM32F42/43xxx devices */
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = 0x00000000;
  70              		.loc 1 256 3 is_stmt 1 view .LVU17
  71              		.loc 1 256 16 is_stmt 0 view .LVU18
  72 0036 C3F88C10 		str	r1, [r3, #140]
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Disable LPTIM and FMPI2C clock prescalers selection, only available for STM32F410xx devices */
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 = 0x00000000;
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */  
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
  73              		.loc 1 262 1 view .LVU19
  74 003a 7047     		bx	lr
  75              	.L3:
  76              		.align	2
  77              	.L2:
  78 003c 00380240 		.word	1073887232
  79 0040 10300024 		.word	603992080
  80 0044 00300020 		.word	536883200
  81              		.cfi_endproc
ARM GAS  /tmp/ccKlA27f.s 			page 7


  82              	.LFE123:
  84              		.section	.text.RCC_HSEConfig,"ax",%progbits
  85              		.align	1
  86              		.global	RCC_HSEConfig
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	RCC_HSEConfig:
  92              	.LVL0:
  93              	.LFB124:
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.  
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function reset the CSSON bit, so if the Clock security system(CSS)
 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         function.    
 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                              6 HSE oscillator clock cycles.
 280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_ON: turn ON the HSE oscillator
 281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
  94              		.loc 1 285 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
  99              		.loc 1 287 3 view .LVU21
 288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE_OFF;
 100              		.loc 1 290 3 view .LVU22
 101              		.loc 1 290 38 is_stmt 0 view .LVU23
 102 0000 024B     		ldr	r3, .L5
 103 0002 0022     		movs	r2, #0
 104 0004 9A70     		strb	r2, [r3, #2]
 291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE3_ADDRESS = RCC_HSE;
 105              		.loc 1 293 3 is_stmt 1 view .LVU24
 106              		.loc 1 293 38 is_stmt 0 view .LVU25
 107 0006 9870     		strb	r0, [r3, #2]
 294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 108              		.loc 1 294 1 view .LVU26
ARM GAS  /tmp/ccKlA27f.s 			page 8


 109 0008 7047     		bx	lr
 110              	.L6:
 111 000a 00BF     		.align	2
 112              	.L5:
 113 000c 00380240 		.word	1073887232
 114              		.cfi_endproc
 115              	.LFE124:
 117              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 118              		.align	1
 119              		.global	RCC_AdjustHSICalibrationValue
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	RCC_AdjustHSICalibrationValue:
 125              	.LVL1:
 126              	.LFB126:
 295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Waits for HSE start-up.
 298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This functions waits on HSERDY flag to be set and return SUCCESS if 
 299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f4xx.h file. You can tailor it depending
 302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the HSE crystal used in your application. 
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
 304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   do
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     hsestatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     status = SUCCESS;
 323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
 325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     status = ERROR;
 327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return (status);
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
ARM GAS  /tmp/ccKlA27f.s 			page 9


 336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 127              		.loc 1 340 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 132              		.loc 1 341 3 view .LVU28
 342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 133              		.loc 1 343 3 view .LVU29
 344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CR;
 134              		.loc 1 345 3 view .LVU30
 135              		.loc 1 345 10 is_stmt 0 view .LVU31
 136 0000 034A     		ldr	r2, .L8
 137 0002 1368     		ldr	r3, [r2]
 138              	.LVL2:
 346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 139              		.loc 1 348 3 is_stmt 1 view .LVU32
 140              		.loc 1 348 10 is_stmt 0 view .LVU33
 141 0004 23F0F803 		bic	r3, r3, #248
 142              	.LVL3:
 349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 143              		.loc 1 351 3 is_stmt 1 view .LVU34
 144              		.loc 1 351 10 is_stmt 0 view .LVU35
 145 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 146              	.LVL4:
 352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CR = tmpreg;
 147              		.loc 1 354 3 is_stmt 1 view .LVU36
 148              		.loc 1 354 11 is_stmt 0 view .LVU37
 149 000c 1360     		str	r3, [r2]
 355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 150              		.loc 1 355 1 view .LVU38
 151 000e 7047     		bx	lr
 152              	.L9:
 153              		.align	2
 154              	.L8:
 155 0010 00380240 		.word	1073887232
 156              		.cfi_endproc
 157              	.LFE126:
 159              		.section	.text.RCC_HSICmd,"ax",%progbits
 160              		.align	1
 161              		.global	RCC_HSICmd
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
ARM GAS  /tmp/ccKlA27f.s 			page 10


 166              	RCC_HSICmd:
 167              	.LVL5:
 168              	.LFB127:
 356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes.
 360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         It is used (enabled by hardware) as system clock source after startup
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         from Reset, wakeup from STOP and STANDBY mode, or in case of failure
 362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the HSE used directly or indirectly as system clock (if the Clock
 363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         Security System CSS is enabled).             
 364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   HSI can not be stopped if it is used as system clock source. In this case,
 365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         you have to select another source of the system clock then stop the HSI.  
 366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the HSI, the application software should wait on HSIRDY
 367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         flag to be set indicating that HSI clock is stable and can be used as
 368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         system clock source.  
 369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the HSI.
 370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock cycles.  
 373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 169              		.loc 1 376 1 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 174              		.loc 1 378 3 view .LVU40
 379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 175              		.loc 1 380 3 view .LVU41
 176              		.loc 1 380 34 is_stmt 0 view .LVU42
 177 0000 014B     		ldr	r3, .L11
 178 0002 1860     		str	r0, [r3]
 381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 179              		.loc 1 381 1 view .LVU43
 180 0004 7047     		bx	lr
 181              	.L12:
 182 0006 00BF     		.align	2
 183              	.L11:
 184 0008 00004742 		.word	1111949312
 185              		.cfi_endproc
 186              	.LFE127:
 188              		.section	.text.RCC_LSEConfig,"ax",%progbits
 189              		.align	1
 190              		.global	RCC_LSEConfig
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	RCC_LSEConfig:
 196              	.LVL6:
 197              	.LFB128:
 382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  /tmp/ccKlA27f.s 			page 11


 383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   As the LSE is in the Backup domain and write access is denied to
 386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         this domain after reset, you have to enable write access using 
 387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (to be done once after reset).  
 389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software should wait on LSERDY flag to be set indicating that LSE clock
 391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is stable and can be used to clock the RTC.
 392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                              6 LSE oscillator clock cycles.
 396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_ON: turn ON the LSE oscillator
 397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 198              		.loc 1 401 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 203              		.loc 1 403 3 view .LVU45
 404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEON bit */
 407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 204              		.loc 1 407 3 view .LVU46
 205              		.loc 1 407 34 is_stmt 0 view .LVU47
 206 0000 0A4B     		ldr	r3, .L17
 207 0002 0022     		movs	r2, #0
 208 0004 83F87020 		strb	r2, [r3, #112]
 408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Reset LSEBYP bit */
 410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 209              		.loc 1 410 3 is_stmt 1 view .LVU48
 210              		.loc 1 410 34 is_stmt 0 view .LVU49
 211 0008 83F87020 		strb	r2, [r3, #112]
 411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   switch (RCC_LSE)
 212              		.loc 1 413 3 is_stmt 1 view .LVU50
 213 000c 0128     		cmp	r0, #1
 214 000e 02D0     		beq	.L14
 215 0010 0428     		cmp	r0, #4
 216 0012 05D0     		beq	.L15
 217 0014 7047     		bx	lr
 218              	.L14:
 414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_ON:
 416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* Set LSEON bit */
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 219              		.loc 1 417 7 view .LVU51
ARM GAS  /tmp/ccKlA27f.s 			page 12


 220              		.loc 1 417 38 is_stmt 0 view .LVU52
 221 0016 054B     		ldr	r3, .L17
 222 0018 0122     		movs	r2, #1
 223 001a 83F87020 		strb	r2, [r3, #112]
 418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 224              		.loc 1 418 7 is_stmt 1 view .LVU53
 225 001e 7047     		bx	lr
 226              	.L15:
 419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     case RCC_LSE_Bypass:
 420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* Set LSEBYP and LSEON bits */
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 227              		.loc 1 421 7 view .LVU54
 228              		.loc 1 421 38 is_stmt 0 view .LVU55
 229 0020 024B     		ldr	r3, .L17
 230 0022 0522     		movs	r2, #5
 231 0024 83F87020 		strb	r2, [r3, #112]
 422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 232              		.loc 1 422 7 is_stmt 1 view .LVU56
 423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     default:
 424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       break;
 425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 233              		.loc 1 426 1 is_stmt 0 view .LVU57
 234 0028 7047     		bx	lr
 235              	.L18:
 236 002a 00BF     		.align	2
 237              	.L17:
 238 002c 00380240 		.word	1073887232
 239              		.cfi_endproc
 240              	.LFE128:
 242              		.section	.text.RCC_LSICmd,"ax",%progbits
 243              		.align	1
 244              		.global	RCC_LSICmd
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	RCC_LSICmd:
 250              	.LVL7:
 251              	.LFB129:
 427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the LSI.
 435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
 436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock cycles. 
 438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 252              		.loc 1 441 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccKlA27f.s 			page 13


 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 257              		.loc 1 443 3 view .LVU59
 444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 258              		.loc 1 445 3 view .LVU60
 259              		.loc 1 445 35 is_stmt 0 view .LVU61
 260 0000 014B     		ldr	r3, .L20
 261 0002 C3F8800E 		str	r0, [r3, #3712]
 446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 262              		.loc 1 446 1 view .LVU62
 263 0006 7047     		bx	lr
 264              	.L21:
 265              		.align	2
 266              	.L20:
 267 0008 00004742 		.word	1111949312
 268              		.cfi_endproc
 269              	.LFE129:
 271              		.section	.text.RCC_PLLConfig,"ax",%progbits
 272              		.align	1
 273              		.global	RCC_PLLConfig
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	RCC_PLLConfig:
 279              	.LVL8:
 280              	.LFB130:
 447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F446xx) || defined(STM32F469_479xx)
 449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
ARM GAS  /tmp/ccKlA27f.s 			page 14


 475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
 477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLR: specifies the division factor for I2S, SAI, SYSTEM, SPDIF in STM32F446xx devices
 479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         correctly.
 485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLR_VALUE(PLLR));
 497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24) | (PLLR << 28);
 500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F446xx || STM32F469_479xx */
 502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the main PLL clock source, multiplication and division factors.
 506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the main PLL is disabled.
 507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSI: HSI oscillator clock selected as PLL clock entry
 511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSource_HSE: HSE oscillator clock selected as PLL clock entry
 512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This clock source (RCC_PLLSource) is common for the main PLL and PLLI2S.  
 513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLM: specifies the division factor for PLL VCO input clock
 515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 0 and 63.
 516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLM parameter correctly to ensure that the VCO input
 517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLL jitter.
 519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLN: specifies the multiplication factor for PLL VCO output clock
 521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLN parameter correctly to ensure that the VCO
 523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLP: specifies the division factor for main system clock (SYSCLK)
 526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLP parameter correctly to not exceed 168 MHz on
 528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the System clock frequency.
 529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLQ: specifies the division factor for OTG FS, SDIO and RNG clocks
 531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 4 and 15.
ARM GAS  /tmp/ccKlA27f.s 			page 15


 532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the USB OTG FS is used in your application, you have to set the
 533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLQ parameter correctly to have 48 MHz clock for the USB. However,
 534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SDIO and RNG need a frequency lower than or equal to 48 MHz to work
 535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         correctly.
 536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t PLLM, uint32_t PLLN, uint32_t PLLP, uint32_t PL
 540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 281              		.loc 1 540 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 4, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 286              		.loc 1 542 3 view .LVU64
 543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLM_VALUE(PLLM));
 287              		.loc 1 543 3 view .LVU65
 544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLN_VALUE(PLLN));
 288              		.loc 1 544 3 view .LVU66
 545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLP_VALUE(PLLP));
 289              		.loc 1 545 3 view .LVU67
 546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLQ_VALUE(PLLQ));
 290              		.loc 1 546 3 view .LVU68
 547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLCFGR = PLLM | (PLLN << 6) | (((PLLP >> 1) -1) << 16) | (RCC_PLLSource) |
 291              		.loc 1 548 3 view .LVU69
 292              		.loc 1 548 23 is_stmt 0 view .LVU70
 293 0000 41EA8211 		orr	r1, r1, r2, lsl #6
 294              	.LVL9:
 295              		.loc 1 548 47 view .LVU71
 296 0004 5B08     		lsrs	r3, r3, #1
 297              	.LVL10:
 298              		.loc 1 548 53 view .LVU72
 299 0006 013B     		subs	r3, r3, #1
 300              		.loc 1 548 37 view .LVU73
 301 0008 41EA0341 		orr	r1, r1, r3, lsl #16
 302              		.loc 1 548 64 view .LVU74
 303 000c 0143     		orrs	r1, r1, r0
 304              		.loc 1 548 82 view .LVU75
 305 000e 0098     		ldr	r0, [sp]
 306              	.LVL11:
 307              		.loc 1 548 82 view .LVU76
 308 0010 41EA0061 		orr	r1, r1, r0, lsl #24
 309              		.loc 1 548 16 view .LVU77
 310 0014 014B     		ldr	r3, .L23
 311 0016 5960     		str	r1, [r3, #4]
 312              	.LVL12:
 549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                  (PLLQ << 24);
 550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 313              		.loc 1 550 1 view .LVU78
 314 0018 7047     		bx	lr
 315              	.L24:
 316 001a 00BF     		.align	2
 317              	.L23:
 318 001c 00380240 		.word	1073887232
ARM GAS  /tmp/ccKlA27f.s 			page 16


 319              		.cfi_endproc
 320              	.LFE130:
 322              		.section	.text.RCC_PLLCmd,"ax",%progbits
 323              		.align	1
 324              		.global	RCC_PLLCmd
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	RCC_PLLCmd:
 330              	.LVL13:
 331              	.LFB131:
 551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the main PLL.
 555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After enabling the main PLL, the application software should wait on 
 556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         be used as system clock source.
 558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL can not be disabled if it is used as system clock source
 559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The main PLL is disabled by hardware when entering STOP and STANDBY modes.
 560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the main PLL. This parameter can be: ENABLE or DISABLE.
 561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 332              		.loc 1 564 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337              		.loc 1 566 3 view .LVU80
 567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 338              		.loc 1 567 3 view .LVU81
 339              		.loc 1 567 34 is_stmt 0 view .LVU82
 340 0000 014B     		ldr	r3, .L26
 341 0002 1866     		str	r0, [r3, #96]
 568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 342              		.loc 1 568 1 view .LVU83
 343 0004 7047     		bx	lr
 344              	.L27:
 345 0006 00BF     		.align	2
 346              	.L26:
 347 0008 00004742 		.word	1111949312
 348              		.cfi_endproc
 349              	.LFE131:
 351              		.section	.text.RCC_PLLI2SConfig,"ax",%progbits
 352              		.align	1
 353              		.global	RCC_PLLI2SConfig
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	RCC_PLLI2SConfig:
 359              	.LVL14:
 360              	.LFB132:
 569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
ARM GAS  /tmp/ccKlA27f.s 			page 17


 570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F401xx)
 571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F405xx/407xx, STM32F415xx/417xx 
 575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         or STM32F401xx devices. 
 576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR)
 594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 361              		.loc 1 594 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 366              		.loc 1 596 3 view .LVU85
 597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 367              		.loc 1 597 3 view .LVU86
 598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28);
 368              		.loc 1 599 3 view .LVU87
 369              		.loc 1 599 47 is_stmt 0 view .LVU88
 370 0000 0907     		lsls	r1, r1, #28
 371              	.LVL15:
 372              		.loc 1 599 36 view .LVU89
 373 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 374              		.loc 1 599 19 view .LVU90
 375 0006 024B     		ldr	r3, .L29
 376 0008 C3F88410 		str	r1, [r3, #132]
 600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 377              		.loc 1 600 1 view .LVU91
 378 000c 7047     		bx	lr
 379              	.L30:
 380 000e 00BF     		.align	2
 381              	.L29:
 382 0010 00380240 		.word	1073887232
 383              		.cfi_endproc
 384              	.LFE132:
 386              		.section	.text.RCC_PLLI2SCmd,"ax",%progbits
 387              		.align	1
ARM GAS  /tmp/ccKlA27f.s 			page 18


 388              		.global	RCC_PLLI2SCmd
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	RCC_PLLI2SCmd:
 394              	.LVL16:
 395              	.LFB133:
 601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F401xx */
 602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F411xE)
 604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
 607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F411xE devices. 
 608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
 624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SR, uint32_t PLLI2SM)
 632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SR << 28) | PLLI2SM;
 639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F411xE */
 641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM32F469_479xx)
 643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         
 648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
ARM GAS  /tmp/ccKlA27f.s 			page 19


 651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 
 660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
 663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SN, uint32_t PLLI2SQ, uint32_t PLLI2SR)
 668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR = (PLLI2SN << 6) | (PLLI2SQ << 24) | (PLLI2SR << 28);
 675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
 677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
 679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLI2S clock multiplication and division factors.
 681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         
 684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLI2S is disabled.
 685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLI2S clock source is common with the main PLL (configured in 
 686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SM: specifies the division factor for PLLI2S VCO input clock
 689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SM parameter correctly to ensure that the VCO input
 691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLI2S jitter.
 693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SN: specifies the multiplication factor for PLLI2S VCO output clock
 695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SN parameter correctly to ensure that the VCO 
 697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SP: specifies the division factor for PLL 48Mhz clock output
 700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number in the range {2, 4, 6, or 8}.
 701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SQ: specifies the division factor for SAI1 clock
 703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 
 705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLI2SR: specifies the division factor for I2S clock
 706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLI2SR parameter correctly to not exceed 192 MHz
ARM GAS  /tmp/ccKlA27f.s 			page 20


 708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         on the I2S clock frequency.
 709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   the PLLI2SR parameter is only available with STM32F42xxx/43xxx devices.  
 710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SConfig(uint32_t PLLI2SM, uint32_t PLLI2SN, uint32_t PLLI2SP, uint32_t PLLI2SQ, uint3
 714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SM_VALUE(PLLI2SM));
 717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SN_VALUE(PLLI2SN));
 718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SP_VALUE(PLLI2SP));
 719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SQ_VALUE(PLLI2SQ));
 720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2SR_VALUE(PLLI2SR));
 721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLI2SCFGR =  PLLI2SM | (PLLI2SN << 6) | (((PLLI2SP >> 1) -1) << 16) | (PLLI2SQ << 24) | (PL
 723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
 725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLI2S. 
 728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The PLLI2S is disabled by hardware when entering STOP and STANDBY modes.  
 729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLI2S. This parameter can be: ENABLE or DISABLE.
 730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLI2SCmd(FunctionalState NewState)
 733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 396              		.loc 1 733 1 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 401              		.loc 1 735 3 view .LVU93
 736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLI2SON_BB = (uint32_t)NewState;
 402              		.loc 1 736 3 view .LVU94
 403              		.loc 1 736 37 is_stmt 0 view .LVU95
 404 0000 014B     		ldr	r3, .L32
 405 0002 9866     		str	r0, [r3, #104]
 737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 406              		.loc 1 737 1 view .LVU96
 407 0004 7047     		bx	lr
 408              	.L33:
 409 0006 00BF     		.align	2
 410              	.L32:
 411 0008 00004742 		.word	1111949312
 412              		.cfi_endproc
 413              	.LFE133:
 415              		.section	.text.RCC_PLLSAIConfig,"ax",%progbits
 416              		.align	1
 417              		.global	RCC_PLLSAIConfig
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	RCC_PLLSAIConfig:
 423              	.LVL17:
 424              	.LFB134:
ARM GAS  /tmp/ccKlA27f.s 			page 21


 738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
 740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F469_479xx devices 
 744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
 751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}..
 756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           
 757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
 760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
 772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (PLLSAIP << 16) | (PLLSAIQ << 24) | (PLLSAIR << 28);
 774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */
 776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
 778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F446xx devices 
 782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIM: specifies the division factor for PLLSAI VCO input clock
 788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between Min_Data = 2 and Max_Data = 63.
 789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIM parameter correctly to ensure that the VCO input
 790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency ranges from 1 to 2 MHz. It is recommended to select a frequency
 791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of 2 MHz to limit PLLSAI jitter.
 792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 50 and 432.
ARM GAS  /tmp/ccKlA27f.s 			page 22


 795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIP: specifies the division factor for PLL 48Mhz clock output
 799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number in the range {2, 4, 6, or 8}.
 800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter must be a number between 2 and 15.
 803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIM, uint32_t PLLSAIN, uint32_t PLLSAIP, uint32_t PLLSAIQ)
 807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIM_VALUE(PLLSAIM));
 810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIP_VALUE(PLLSAIP));
 812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = PLLSAIM | (PLLSAIN << 6) | (((PLLSAIP >> 1) -1) << 16)  | (PLLSAIQ << 24);
 815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
 817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
 819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the PLLSAI clock multiplication and division factors.
 821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
 822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx devices 
 823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
 824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only when the PLLSAI is disabled.
 825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PLLSAI clock source is common with the main PLL (configured in 
 826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_PLLConfig function )  
 827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *             
 828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIN: specifies the multiplication factor for PLLSAI VCO output clock
 829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 50 and 432.
 830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   You have to set the PLLSAIN parameter correctly to ensure that the VCO 
 831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         output frequency is between 100 and 432 MHz.
 832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           
 833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIQ: specifies the division factor for SAI1 clock
 834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 15.
 835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
 836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  PLLSAIR: specifies the division factor for LTDC clock
 837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 2 and 7.
 838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
 839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAIConfig(uint32_t PLLSAIN, uint32_t PLLSAIQ, uint32_t PLLSAIR)
 842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 425              		.loc 1 842 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIN_VALUE(PLLSAIN));
 430              		.loc 1 844 3 view .LVU98
 845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIR_VALUE(PLLSAIR));
ARM GAS  /tmp/ccKlA27f.s 			page 23


 431              		.loc 1 845 3 view .LVU99
 846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAIQ_VALUE(PLLSAIQ));
 432              		.loc 1 846 3 view .LVU100
 847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->PLLSAICFGR = (PLLSAIN << 6) | (PLLSAIQ << 24) | (PLLSAIR << 28);
 433              		.loc 1 848 3 view .LVU101
 434              		.loc 1 848 47 is_stmt 0 view .LVU102
 435 0000 0906     		lsls	r1, r1, #24
 436              	.LVL18:
 437              		.loc 1 848 36 view .LVU103
 438 0002 41EA8011 		orr	r1, r1, r0, lsl #6
 439              		.loc 1 848 54 view .LVU104
 440 0006 41EA0271 		orr	r1, r1, r2, lsl #28
 441              		.loc 1 848 19 view .LVU105
 442 000a 024B     		ldr	r3, .L35
 443 000c C3F88810 		str	r1, [r3, #136]
 849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 444              		.loc 1 849 1 view .LVU106
 445 0010 7047     		bx	lr
 446              	.L36:
 447 0012 00BF     		.align	2
 448              	.L35:
 449 0014 00380240 		.word	1073887232
 450              		.cfi_endproc
 451              	.LFE134:
 453              		.section	.text.RCC_PLLSAICmd,"ax",%progbits
 454              		.align	1
 455              		.global	RCC_PLLSAICmd
 456              		.syntax unified
 457              		.thumb
 458              		.thumb_func
 460              	RCC_PLLSAICmd:
 461              	.LVL19:
 462              	.LFB135:
 850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE */
 851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the PLLSAI. 
 854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
 855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices 
 856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
 857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The PLLSAI is disabled by hardware when entering STOP and STANDBY modes.  
 858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the PLLSAI. This parameter can be: ENABLE or DISABLE.
 859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PLLSAICmd(FunctionalState NewState)
 862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 463              		.loc 1 862 1 is_stmt 1 view -0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468              		.loc 1 864 3 view .LVU108
 865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_PLLSAION_BB = (uint32_t)NewState;
 469              		.loc 1 865 3 view .LVU109
ARM GAS  /tmp/ccKlA27f.s 			page 24


 470              		.loc 1 865 37 is_stmt 0 view .LVU110
 471 0000 014B     		ldr	r3, .L38
 472 0002 1867     		str	r0, [r3, #112]
 866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 473              		.loc 1 866 1 view .LVU111
 474 0004 7047     		bx	lr
 475              	.L39:
 476 0006 00BF     		.align	2
 477              	.L38:
 478 0008 00004742 		.word	1111949312
 479              		.cfi_endproc
 480              	.LFE135:
 482              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 483              		.align	1
 484              		.global	RCC_ClockSecuritySystemCmd
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	RCC_ClockSecuritySystemCmd:
 490              	.LVL20:
 491              	.LFB136:
 867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 492              		.loc 1 880 1 is_stmt 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 497              		.loc 1 882 3 view .LVU113
 883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 498              		.loc 1 883 3 view .LVU114
 499              		.loc 1 883 34 is_stmt 0 view .LVU115
 500 0000 014B     		ldr	r3, .L41
 501 0002 D864     		str	r0, [r3, #76]
 884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 502              		.loc 1 884 1 view .LVU116
 503 0004 7047     		bx	lr
 504              	.L42:
 505 0006 00BF     		.align	2
 506              	.L41:
 507 0008 00004742 		.word	1111949312
 508              		.cfi_endproc
 509              	.LFE136:
ARM GAS  /tmp/ccKlA27f.s 			page 25


 511              		.section	.text.RCC_MCO1Config,"ax",%progbits
 512              		.align	1
 513              		.global	RCC_MCO1Config
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	RCC_MCO1Config:
 519              	.LVL21:
 520              	.LFB137:
 885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8).
 888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Source: specifies the clock source to output.
 890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSI: HSI clock selected as MCO1 source
 892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_LSE: LSE clock selected as MCO1 source
 893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_HSE: HSE clock selected as MCO1 source
 894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Source_PLLCLK: main PLL clock selected as MCO1 source
 895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO1Div: specifies the MCO1 prescaler.
 896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_1: no division applied to MCO1 clock
 898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_2: division by 2 applied to MCO1 clock
 899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_3: division by 3 applied to MCO1 clock
 900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_4: division by 4 applied to MCO1 clock
 901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO1Div_5: division by 5 applied to MCO1 clock
 902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Config(uint32_t RCC_MCO1Source, uint32_t RCC_MCO1Div)
 905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 521              		.loc 1 905 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 526              		.loc 1 906 3 view .LVU118
 907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCO1Source));
 527              		.loc 1 909 3 view .LVU119
 910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO1DIV(RCC_MCO1Div));  
 528              		.loc 1 910 3 view .LVU120
 911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 529              		.loc 1 912 3 view .LVU121
 530              		.loc 1 912 10 is_stmt 0 view .LVU122
 531 0000 034A     		ldr	r2, .L44
 532 0002 9368     		ldr	r3, [r2, #8]
 533              	.LVL22:
 913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear MCO1[1:0] and MCO1PRE[2:0] bits */
 915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO1_RESET_MASK;
 534              		.loc 1 915 3 is_stmt 1 view .LVU123
 535              		.loc 1 915 10 is_stmt 0 view .LVU124
 536 0004 23F0EC63 		bic	r3, r3, #123731968
 537              	.LVL23:
ARM GAS  /tmp/ccKlA27f.s 			page 26


 916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select MCO1 clock source and prescaler */
 918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO1Source | RCC_MCO1Div;
 538              		.loc 1 918 3 is_stmt 1 view .LVU125
 539              		.loc 1 918 28 is_stmt 0 view .LVU126
 540 0008 0843     		orrs	r0, r0, r1
 541              	.LVL24:
 542              		.loc 1 918 10 view .LVU127
 543 000a 1843     		orrs	r0, r0, r3
 544              	.LVL25:
 919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 545              		.loc 1 921 3 is_stmt 1 view .LVU128
 546              		.loc 1 921 13 is_stmt 0 view .LVU129
 547 000c 9060     		str	r0, [r2, #8]
 922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_MCO1Cmd(ENABLE);
 925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 548              		.loc 1 926 1 view .LVU130
 549 000e 7047     		bx	lr
 550              	.L45:
 551              		.align	2
 552              	.L44:
 553 0010 00380240 		.word	1073887232
 554              		.cfi_endproc
 555              	.LFE137:
 557              		.section	.text.RCC_MCO2Config,"ax",%progbits
 558              		.align	1
 559              		.global	RCC_MCO2Config
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 564              	RCC_MCO2Config:
 565              	.LVL26:
 566              	.LFB138:
 927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Selects the clock source to output on MCO2 pin(PC9).
 930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   PC9 should be configured in alternate function mode.
 931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Source: specifies the clock source to output.
 932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_HSE: HSE clock selected as MCO2 source
 937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Source_PLLCLK: main PLL clock selected as MCO2 source
 938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_MCO2Div: specifies the MCO2 prescaler.
 939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
 940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_1: no division applied to MCO2 clock
 941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_2: division by 2 applied to MCO2 clock
 942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_3: division by 3 applied to MCO2 clock
 943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_4: division by 4 applied to MCO2 clock
 944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_MCO2Div_5: division by 5 applied to MCO2 clock
 945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note  For STM32F410xx devices to output I2SCLK clock on MCO2 you should have
ARM GAS  /tmp/ccKlA27f.s 			page 27


 946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
 948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Config(uint32_t RCC_MCO2Source, uint32_t RCC_MCO2Div)
 950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 567              		.loc 1 950 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 572              		.loc 1 951 3 view .LVU132
 952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
 954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2SOURCE(RCC_MCO2Source));
 573              		.loc 1 954 3 view .LVU133
 955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_MCO2DIV(RCC_MCO2Div));
 574              		.loc 1 955 3 view .LVU134
 956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 575              		.loc 1 957 3 view .LVU135
 576              		.loc 1 957 10 is_stmt 0 view .LVU136
 577 0000 034A     		ldr	r2, .L47
 578 0002 9368     		ldr	r3, [r2, #8]
 579              	.LVL27:
 958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear MCO2 and MCO2PRE[2:0] bits */
 960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= CFGR_MCO2_RESET_MASK;
 580              		.loc 1 960 3 is_stmt 1 view .LVU137
 581              		.loc 1 960 10 is_stmt 0 view .LVU138
 582 0004 23F07843 		bic	r3, r3, #-134217728
 583              	.LVL28:
 961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select MCO2 clock source and prescaler */
 963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_MCO2Source | RCC_MCO2Div;
 584              		.loc 1 963 3 is_stmt 1 view .LVU139
 585              		.loc 1 963 28 is_stmt 0 view .LVU140
 586 0008 0843     		orrs	r0, r0, r1
 587              	.LVL29:
 588              		.loc 1 963 10 view .LVU141
 589 000a 1843     		orrs	r0, r0, r3
 590              	.LVL30:
 964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
 966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 591              		.loc 1 966 3 is_stmt 1 view .LVU142
 592              		.loc 1 966 13 is_stmt 0 view .LVU143
 593 000c 9060     		str	r0, [r2, #8]
 967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
 969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_MCO2Cmd(ENABLE);
 970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */   
 971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 594              		.loc 1 971 1 view .LVU144
 595 000e 7047     		bx	lr
 596              	.L48:
 597              		.align	2
ARM GAS  /tmp/ccKlA27f.s 			page 28


 598              	.L47:
 599 0010 00380240 		.word	1073887232
 600              		.cfi_endproc
 601              	.LFE138:
 603              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 604              		.align	1
 605              		.global	RCC_SYSCLKConfig
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 610              	RCC_SYSCLKConfig:
 611              	.LVL31:
 612              	.LFB139:
 972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
 974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
 975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
 976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
 980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
 981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
 982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       ##### System, AHB and APB busses clocks configuration functions #####
 983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
 984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..]
 985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       This section provide functions allowing to configure the System, AHB, APB1 and 
 986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       APB2 busses clocks.
 987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
 988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           HSE and PLL.
 990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable 
 991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped 
 992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived 
 993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           from AHB clock through configurable prescalers and used to clock 
 994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           the peripherals mapped on these busses. You can use 
 995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks.  
 996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              from an external clock mapped on the I2S_CKIN pin. 
1000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              You have to use RCC_I2SCLKConfig() function to configure this clock. 
1001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
1002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
1003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              functions to configure this clock. 
1004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
1005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              to work correctly, while the SDIO require a frequency equal or lower than
1006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****              to 48. This clock is derived of the main PLL through PLLQ divider.
1007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****         (+@) IWDG clock which is always the LSI clock.
1008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****        
1009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F405xx/407xx and STM32F415xx/417xx devices, the maximum frequency 
1010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz. Depending 
1011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****          on the device voltage range, the maximum frequency should be adapted accordingly:
1012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
ARM GAS  /tmp/ccKlA27f.s 			page 29


1016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|150< HCLK <= 168|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |154 < HCLK <= 168|140 < HCLK <= 160|
1033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +---------------|----------------|----------------|-----------------|-----------------+
1034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F42xxx/43xxx/469xx/479xx devices, the maximum frequency of the SYSCLK and HCLK i
1035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 90 MHz and PCLK1 45 MHz. Depending on the device voltage range, the maximum 
1036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |66 < HCLK <= 88  |60 < HCLK <= 80  |
1050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|120< HCLK <= 150|96 < HCLK <= 120|88 < HCLK <= 110 |80 < HCLK <= 100 |
1052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|120< HCLK <= 180|120< HCLK <= 144|110 < HCLK <= 132|100 < HCLK <= 120|
1054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |144< HCLK <= 168|132 < HCLK <= 154|120 < HCLK <= 140|
1056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |7WS(8CPU cycle)|      NA        |168< HCLK <= 180|154 < HCLK <= 176|140 < HCLK <= 160|
1058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |8WS(9CPU cycle)|      NA        |      NA        |176 < HCLK <= 180|160 < HCLK <= 168|
1060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****    
1062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F401xx devices, the maximum frequency of the SYSCLK and HCLK is 84 MHz, 
1063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 84 MHz and PCLK1 42 MHz. Depending on the device voltage range, the maximum 
1064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 22   |0 < HCLK <= 20   |
1072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
ARM GAS  /tmp/ccKlA27f.s 			page 30


1073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |22 < HCLK <= 44  |20 < HCLK <= 40  |
1074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 84 |48 < HCLK <= 72 |44 < HCLK <= 66  |40 < HCLK <= 60  |
1076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|      NA        |72 < HCLK <= 84 |66 < HCLK <= 84  |60 < HCLK <= 80  |
1078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |      NA        |      NA         |80 < HCLK <= 84  |
1080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) For STM32F410xx/STM32F411xE devices, the maximum frequency of the SYSCLK and HCLK is 100 
1083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           PCLK2 100 MHz and PCLK1 50 MHz. Depending on the device voltage range, the maximum 
1084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           frequency should be adapted accordingly:
1085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
1087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               |---------------------------------------------------------------------|
1088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
1089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
1090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
1092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 64 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
1094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |2WS(3CPU cycle)|64 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
1096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 100|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
1098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 100|72 < HCLK <= 90  |64 < HCLK <= 80  |
1100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |5WS(6CPU cycle)|      NA        |       NA       |90 < HCLK <= 100 |80 < HCLK <= 96  |
1102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
1103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  |6WS(7CPU cycle)|      NA        |       NA       |        NA       |96 < HCLK <= 100 |
1104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  +-------------------------------------------------------------------------------------+
1105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       -@- On STM32F405xx/407xx and STM32F415xx/417xx devices: 
1107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '0', the maximum value of fHCLK = 144MHz. 
1108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS = '1', the maximum value of fHCLK = 168MHz. 
1109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           [..] 
1110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F42xxx/43xxx/469xx/479xx devices:
1111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 120MHz.
1112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 144MHz.
1113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11', the maximum value of f  is 168MHz 
1114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           [..]  
1115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F401x devices:
1116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01', the maximum value of fHCLK is 64MHz.
1117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10', the maximum value of fHCLK is 84MHz.
1118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           On STM32F410xx/STM32F411xE devices:
1119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x01' the maximum value of fHCLK is 64MHz.
1120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x10' the maximum value of fHCLK is 84MHz.
1121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****            (++) when VOS[1:0] = '0x11' the maximum value of fHCLK is 100MHz.
1122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****        You can use PWR_MainRegulatorModeConfig() function to control VOS bits.
1124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
1126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
1127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
ARM GAS  /tmp/ccKlA27f.s 			page 31


1130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
1131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
1132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
1133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
1134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (if the Clock Security System CSS is enabled).
1135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked). 
1137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         occur when the clock source will be ready. 
1139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         You can use RCC_GetSYSCLKSource() function to know which clock is
1140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         currently used as system clock source. 
1141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
1142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSI: HSI selected as system clock source
1144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_HSE: HSE selected as system clock source
1145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source (RCC_SYSCLKSource_
1146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLKSource_PLLRCLK: PLL R selected as system clock source only for STM32F
1147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
1150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 613              		.loc 1 1150 1 is_stmt 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
1151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 618              		.loc 1 1151 3 view .LVU146
1152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 619              		.loc 1 1154 3 view .LVU147
1155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 620              		.loc 1 1156 3 view .LVU148
 621              		.loc 1 1156 10 is_stmt 0 view .LVU149
 622 0000 034A     		ldr	r2, .L50
 623 0002 9368     		ldr	r3, [r2, #8]
 624              	.LVL32:
1157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear SW[1:0] bits */
1159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 625              		.loc 1 1159 3 is_stmt 1 view .LVU150
 626              		.loc 1 1159 10 is_stmt 0 view .LVU151
 627 0004 23F00303 		bic	r3, r3, #3
 628              	.LVL33:
1160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
1162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 629              		.loc 1 1162 3 is_stmt 1 view .LVU152
 630              		.loc 1 1162 10 is_stmt 0 view .LVU153
 631 0008 0343     		orrs	r3, r3, r0
 632              	.LVL34:
1163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 633              		.loc 1 1165 3 is_stmt 1 view .LVU154
ARM GAS  /tmp/ccKlA27f.s 			page 32


 634              		.loc 1 1165 13 is_stmt 0 view .LVU155
 635 000a 9360     		str	r3, [r2, #8]
1166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 636              		.loc 1 1166 1 view .LVU156
 637 000c 7047     		bx	lr
 638              	.L51:
 639 000e 00BF     		.align	2
 640              	.L50:
 641 0010 00380240 		.word	1073887232
 642              		.cfi_endproc
 643              	.LFE139:
 645              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 646              		.align	1
 647              		.global	RCC_GetSYSCLKSource
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	RCC_GetSYSCLKSource:
 653              	.LFB140:
1167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
1170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
1171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one
1172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         of the following:
1173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x00: HSI used as system clock
1174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x04: HSE used as system clock
1175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x08: PLL used as system clock (PLL P for STM32F446xx devices)
1176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              - 0x0C: PLL R used as system clock (only for STM32F446xx devices)
1177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
1179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 654              		.loc 1 1179 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
1180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 659              		.loc 1 1180 3 view .LVU158
 660              		.loc 1 1180 24 is_stmt 0 view .LVU159
 661 0000 024B     		ldr	r3, .L53
 662 0002 9868     		ldr	r0, [r3, #8]
1181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 663              		.loc 1 1181 1 view .LVU160
 664 0004 00F00C00 		and	r0, r0, #12
 665 0008 7047     		bx	lr
 666              	.L54:
 667 000a 00BF     		.align	2
 668              	.L53:
 669 000c 00380240 		.word	1073887232
 670              		.cfi_endproc
 671              	.LFE140:
 673              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 674              		.align	1
 675              		.global	RCC_HCLKConfig
 676              		.syntax unified
 677              		.thumb
ARM GAS  /tmp/ccKlA27f.s 			page 33


 678              		.thumb_func
 680              	RCC_HCLKConfig:
 681              	.LVL35:
 682              	.LFB141:
1182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
1185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         these bits to ensure that HCLK not exceed the maximum allowed frequency
1187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         (for more details refer to section above
1188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           "CPU, AHB and APB busses clocks configuration functions")
1189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
1190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the system clock (SYSCLK).
1191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
1193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
1194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
1195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
1196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
1197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
1198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
1199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
1200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
1201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
1204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 683              		.loc 1 1204 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
1205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 688              		.loc 1 1205 3 view .LVU162
1206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 689              		.loc 1 1208 3 view .LVU163
1209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 690              		.loc 1 1210 3 view .LVU164
 691              		.loc 1 1210 10 is_stmt 0 view .LVU165
 692 0000 034A     		ldr	r2, .L56
 693 0002 9368     		ldr	r3, [r2, #8]
 694              	.LVL36:
1211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear HPRE[3:0] bits */
1213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 695              		.loc 1 1213 3 is_stmt 1 view .LVU166
 696              		.loc 1 1213 10 is_stmt 0 view .LVU167
 697 0004 23F0F003 		bic	r3, r3, #240
 698              	.LVL37:
1214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
1216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 699              		.loc 1 1216 3 is_stmt 1 view .LVU168
 700              		.loc 1 1216 10 is_stmt 0 view .LVU169
ARM GAS  /tmp/ccKlA27f.s 			page 34


 701 0008 0343     		orrs	r3, r3, r0
 702              	.LVL38:
1217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 703              		.loc 1 1219 3 is_stmt 1 view .LVU170
 704              		.loc 1 1219 13 is_stmt 0 view .LVU171
 705 000a 9360     		str	r3, [r2, #8]
1220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 706              		.loc 1 1220 1 view .LVU172
 707 000c 7047     		bx	lr
 708              	.L57:
 709 000e 00BF     		.align	2
 710              	.L56:
 711 0010 00380240 		.word	1073887232
 712              		.cfi_endproc
 713              	.LFE141:
 715              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 716              		.align	1
 717              		.global	RCC_PCLK1Config
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 722              	RCC_PCLK1Config:
 723              	.LVL39:
 724              	.LFB142:
1221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
1224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
1225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB1 clock = HCLK
1228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB1 clock = HCLK/2
1229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB1 clock = HCLK/4
1230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB1 clock = HCLK/8
1231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
1232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
1235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 725              		.loc 1 1235 1 is_stmt 1 view -0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
1236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 730              		.loc 1 1236 3 view .LVU174
1237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 731              		.loc 1 1239 3 view .LVU175
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 732              		.loc 1 1241 3 view .LVU176
 733              		.loc 1 1241 10 is_stmt 0 view .LVU177
 734 0000 034A     		ldr	r2, .L59
ARM GAS  /tmp/ccKlA27f.s 			page 35


 735 0002 9368     		ldr	r3, [r2, #8]
 736              	.LVL40:
1242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE1[2:0] bits */
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 737              		.loc 1 1244 3 is_stmt 1 view .LVU178
 738              		.loc 1 1244 10 is_stmt 0 view .LVU179
 739 0004 23F4E053 		bic	r3, r3, #7168
 740              	.LVL41:
1245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
1247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK;
 741              		.loc 1 1247 3 is_stmt 1 view .LVU180
 742              		.loc 1 1247 10 is_stmt 0 view .LVU181
 743 0008 0343     		orrs	r3, r3, r0
 744              	.LVL42:
1248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 745              		.loc 1 1250 3 is_stmt 1 view .LVU182
 746              		.loc 1 1250 13 is_stmt 0 view .LVU183
 747 000a 9360     		str	r3, [r2, #8]
1251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 748              		.loc 1 1251 1 view .LVU184
 749 000c 7047     		bx	lr
 750              	.L60:
 751 000e 00BF     		.align	2
 752              	.L59:
 753 0010 00380240 		.word	1073887232
 754              		.cfi_endproc
 755              	.LFE142:
 757              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 758              		.align	1
 759              		.global	RCC_PCLK2Config
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 764              	RCC_PCLK2Config:
 765              	.LVL43:
 766              	.LFB143:
1252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
1255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the AHB clock (HCLK).
1257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div1:  APB2 clock = HCLK
1259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div2:  APB2 clock = HCLK/2
1260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div4:  APB2 clock = HCLK/4
1261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div8:  APB2 clock = HCLK/8
1262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
1263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
1266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 767              		.loc 1 1266 1 is_stmt 1 view -0
 768              		.cfi_startproc
ARM GAS  /tmp/ccKlA27f.s 			page 36


 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
1267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 772              		.loc 1 1267 3 view .LVU186
1268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 773              		.loc 1 1270 3 view .LVU187
1271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->CFGR;
 774              		.loc 1 1272 3 view .LVU188
 775              		.loc 1 1272 10 is_stmt 0 view .LVU189
 776 0000 034A     		ldr	r2, .L62
 777 0002 9368     		ldr	r3, [r2, #8]
 778              	.LVL44:
1273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PPRE2[2:0] bits */
1275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 779              		.loc 1 1275 3 is_stmt 1 view .LVU190
 780              		.loc 1 1275 10 is_stmt 0 view .LVU191
 781 0004 23F46043 		bic	r3, r3, #57344
 782              	.LVL45:
1276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
1278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 783              		.loc 1 1278 3 is_stmt 1 view .LVU192
 784              		.loc 1 1278 10 is_stmt 0 view .LVU193
 785 0008 43EAC003 		orr	r3, r3, r0, lsl #3
 786              	.LVL46:
1279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CFGR = tmpreg;
 787              		.loc 1 1281 3 is_stmt 1 view .LVU194
 788              		.loc 1 1281 13 is_stmt 0 view .LVU195
 789 000c 9360     		str	r3, [r2, #8]
1282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 790              		.loc 1 1282 1 view .LVU196
 791 000e 7047     		bx	lr
 792              	.L63:
 793              		.align	2
 794              	.L62:
 795 0010 00380240 		.word	1073887232
 796              		.cfi_endproc
 797              	.LFE143:
 799              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 800              		.align	1
 801              		.global	RCC_GetClocksFreq
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 806              	RCC_GetClocksFreq:
 807              	.LVL47:
 808              	.LFB144:
1283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
ARM GAS  /tmp/ccKlA27f.s 			page 37


1286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         PCLK1 and PCLK2.
1287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         constant and the selected clock source:
1291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) 
1294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
1295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
1296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *               in voltage and temperature.
1298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
1299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                have wrong result.
1302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                
1303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         value for HSE crystal.
1305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
1307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          the clocks frequencies.
1308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *     
1309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used by the user application to compute the 
1310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
1312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         must be called to update the structure's field. Otherwise, any
1313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         configuration based on this function will be incorrect.
1314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
1315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
1318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 809              		.loc 1 1318 1 is_stmt 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              		.loc 1 1318 1 is_stmt 0 view .LVU198
 815 0000 10B4     		push	{r4}
 816              		.cfi_def_cfa_offset 4
 817              		.cfi_offset 4, -4
1319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0, presc = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 818              		.loc 1 1319 3 is_stmt 1 view .LVU199
 819              	.LVL48:
1320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)  
1321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t pllr = 2;
1322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 820              		.loc 1 1325 3 view .LVU200
 821              		.loc 1 1325 12 is_stmt 0 view .LVU201
 822 0002 294B     		ldr	r3, .L73
 823 0004 9B68     		ldr	r3, [r3, #8]
 824              		.loc 1 1325 7 view .LVU202
 825 0006 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/ccKlA27f.s 			page 38


 826              	.LVL49:
1326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   switch (tmp)
 827              		.loc 1 1327 3 is_stmt 1 view .LVU203
 828 000a 042B     		cmp	r3, #4
 829 000c 23D0     		beq	.L65
 830 000e 082B     		cmp	r3, #8
 831 0010 24D0     		beq	.L66
 832 0012 13B1     		cbz	r3, .L72
1328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x00:  /* HSI used as system clock source */
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
1332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
1334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
1335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
1336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLP
1339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     */    
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     else
1349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
1356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
1357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
1359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x0C:  /* PLL R used as system clock  source */
1360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
1361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     */    
1363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
1364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
1365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     if (pllsource != 0)
1367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSE used as PLL clock source */
1369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
1371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     else
1372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
1373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       /* HSI used as PLL clock source */
1374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
1375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
ARM GAS  /tmp/ccKlA27f.s 			page 39


1376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >>28) + 1 ) *2;
1378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllr;    
1379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
1380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   default:
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 833              		.loc 1 1383 5 view .LVU204
 834              		.loc 1 1383 34 is_stmt 0 view .LVU205
 835 0014 254B     		ldr	r3, .L73+4
 836              	.LVL50:
 837              		.loc 1 1383 34 view .LVU206
 838 0016 0360     		str	r3, [r0]
1384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 839              		.loc 1 1384 5 is_stmt 1 view .LVU207
 840 0018 01E0     		b	.L68
 841              	.LVL51:
 842              	.L72:
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 843              		.loc 1 1330 5 view .LVU208
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 844              		.loc 1 1330 34 is_stmt 0 view .LVU209
 845 001a 244B     		ldr	r3, .L73+4
 846              	.LVL52:
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 847              		.loc 1 1330 34 view .LVU210
 848 001c 0360     		str	r3, [r0]
1331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x04:  /* HSE used as system clock  source */
 849              		.loc 1 1331 5 is_stmt 1 view .LVU211
 850              	.LVL53:
 851              	.L68:
1385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Compute HCLK, PCLK1 and PCLK2 clocks frequencies ------------------------*/
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get HCLK prescaler */
1389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 852              		.loc 1 1389 3 view .LVU212
 853              		.loc 1 1389 12 is_stmt 0 view .LVU213
 854 001e 224C     		ldr	r4, .L73
 855 0020 A368     		ldr	r3, [r4, #8]
 856              	.LVL54:
1390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 4;
 857              		.loc 1 1390 3 is_stmt 1 view .LVU214
 858              		.loc 1 1390 7 is_stmt 0 view .LVU215
 859 0022 C3F30313 		ubfx	r3, r3, #4, #4
 860              	.LVL55:
1391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 861              		.loc 1 1391 3 is_stmt 1 view .LVU216
 862              		.loc 1 1391 27 is_stmt 0 view .LVU217
 863 0026 2249     		ldr	r1, .L73+8
 864 0028 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 865              	.LVL56:
 866              		.loc 1 1391 27 view .LVU218
 867 002a DAB2     		uxtb	r2, r3
 868              	.LVL57:
1392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* HCLK clock frequency */
ARM GAS  /tmp/ccKlA27f.s 			page 40


1393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 869              		.loc 1 1393 3 is_stmt 1 view .LVU219
 870              		.loc 1 1393 42 is_stmt 0 view .LVU220
 871 002c 0368     		ldr	r3, [r0]
 872              		.loc 1 1393 61 view .LVU221
 873 002e D340     		lsrs	r3, r3, r2
 874              		.loc 1 1393 30 view .LVU222
 875 0030 4360     		str	r3, [r0, #4]
1394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get PCLK1 prescaler */
1396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 876              		.loc 1 1396 3 is_stmt 1 view .LVU223
 877              		.loc 1 1396 12 is_stmt 0 view .LVU224
 878 0032 A268     		ldr	r2, [r4, #8]
 879              	.LVL58:
1397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 10;
 880              		.loc 1 1397 3 is_stmt 1 view .LVU225
 881              		.loc 1 1397 7 is_stmt 0 view .LVU226
 882 0034 C2F38222 		ubfx	r2, r2, #10, #3
 883              	.LVL59:
1398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 884              		.loc 1 1398 3 is_stmt 1 view .LVU227
 885              		.loc 1 1398 27 is_stmt 0 view .LVU228
 886 0038 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 887              	.LVL60:
 888              		.loc 1 1398 27 view .LVU229
 889 003a D2B2     		uxtb	r2, r2
 890              	.LVL61:
1399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* PCLK1 clock frequency */
1400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 891              		.loc 1 1400 3 is_stmt 1 view .LVU230
 892              		.loc 1 1400 60 is_stmt 0 view .LVU231
 893 003c 23FA02F2 		lsr	r2, r3, r2
 894              	.LVL62:
 895              		.loc 1 1400 31 view .LVU232
 896 0040 8260     		str	r2, [r0, #8]
1401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get PCLK2 prescaler */
1403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 897              		.loc 1 1403 3 is_stmt 1 view .LVU233
 898              		.loc 1 1403 12 is_stmt 0 view .LVU234
 899 0042 A268     		ldr	r2, [r4, #8]
 900              	.LVL63:
1404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = tmp >> 13;
 901              		.loc 1 1404 3 is_stmt 1 view .LVU235
 902              		.loc 1 1404 7 is_stmt 0 view .LVU236
 903 0044 C2F34232 		ubfx	r2, r2, #13, #3
 904              	.LVL64:
1405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 905              		.loc 1 1405 3 is_stmt 1 view .LVU237
 906              		.loc 1 1405 27 is_stmt 0 view .LVU238
 907 0048 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 908              	.LVL65:
 909              		.loc 1 1405 27 view .LVU239
 910 004a D2B2     		uxtb	r2, r2
 911              	.LVL66:
1406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* PCLK2 clock frequency */
ARM GAS  /tmp/ccKlA27f.s 			page 41


1407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 912              		.loc 1 1407 3 is_stmt 1 view .LVU240
 913              		.loc 1 1407 60 is_stmt 0 view .LVU241
 914 004c D340     		lsrs	r3, r3, r2
 915              		.loc 1 1407 31 view .LVU242
 916 004e C360     		str	r3, [r0, #12]
1408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 917              		.loc 1 1408 1 view .LVU243
 918 0050 5DF8044B 		ldr	r4, [sp], #4
 919              		.cfi_remember_state
 920              		.cfi_restore 4
 921              		.cfi_def_cfa_offset 0
 922 0054 7047     		bx	lr
 923              	.LVL67:
 924              	.L65:
 925              		.cfi_restore_state
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 926              		.loc 1 1333 5 is_stmt 1 view .LVU244
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 927              		.loc 1 1333 34 is_stmt 0 view .LVU245
 928 0056 174B     		ldr	r3, .L73+12
 929              	.LVL68:
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 930              		.loc 1 1333 34 view .LVU246
 931 0058 0360     		str	r3, [r0]
1334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   case 0x08:  /* PLL P used as system clock  source */
 932              		.loc 1 1334 5 is_stmt 1 view .LVU247
 933 005a E0E7     		b	.L68
 934              	.LVL69:
 935              	.L66:
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 936              		.loc 1 1340 5 view .LVU248
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 937              		.loc 1 1340 21 is_stmt 0 view .LVU249
 938 005c 124B     		ldr	r3, .L73
 939              	.LVL70:
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 940              		.loc 1 1340 21 view .LVU250
 941 005e 5968     		ldr	r1, [r3, #4]
 942              	.LVL71:
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
 943              		.loc 1 1341 5 is_stmt 1 view .LVU251
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
 944              		.loc 1 1341 15 is_stmt 0 view .LVU252
 945 0060 5A68     		ldr	r2, [r3, #4]
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
 946              		.loc 1 1341 10 view .LVU253
 947 0062 02F03F02 		and	r2, r2, #63
 948              	.LVL72:
1343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
 949              		.loc 1 1343 5 is_stmt 1 view .LVU254
1343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     {
 950              		.loc 1 1343 8 is_stmt 0 view .LVU255
 951 0066 11F4800F 		tst	r1, #4194304
 952 006a 12D0     		beq	.L69
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 953              		.loc 1 1346 7 is_stmt 1 view .LVU256
ARM GAS  /tmp/ccKlA27f.s 			page 42


1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 954              		.loc 1 1346 27 is_stmt 0 view .LVU257
 955 006c 114B     		ldr	r3, .L73+12
 956 006e B3FBF2F3 		udiv	r3, r3, r2
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 957              		.loc 1 1346 42 view .LVU258
 958 0072 0D4A     		ldr	r2, .L73
 959              	.LVL73:
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 960              		.loc 1 1346 42 view .LVU259
 961 0074 5268     		ldr	r2, [r2, #4]
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 962              		.loc 1 1346 72 view .LVU260
 963 0076 C2F38812 		ubfx	r2, r2, #6, #9
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 964              		.loc 1 1346 14 view .LVU261
 965 007a 02FB03F3 		mul	r3, r2, r3
 966              	.LVL74:
 967              	.L70:
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 968              		.loc 1 1354 5 is_stmt 1 view .LVU262
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 969              		.loc 1 1354 18 is_stmt 0 view .LVU263
 970 007e 0A4A     		ldr	r2, .L73
 971 0080 5268     		ldr	r2, [r2, #4]
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 972              		.loc 1 1354 48 view .LVU264
 973 0082 C2F30142 		ubfx	r2, r2, #16, #2
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 974              		.loc 1 1354 54 view .LVU265
 975 0086 0132     		adds	r2, r2, #1
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC_Clocks->SYSCLK_Frequency = pllvco/pllp;
 976              		.loc 1 1354 10 view .LVU266
 977 0088 5200     		lsls	r2, r2, #1
 978              	.LVL75:
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 979              		.loc 1 1355 5 is_stmt 1 view .LVU267
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 980              		.loc 1 1355 42 is_stmt 0 view .LVU268
 981 008a B3FBF2F3 		udiv	r3, r3, r2
 982              	.LVL76:
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     break;
 983              		.loc 1 1355 34 view .LVU269
 984 008e 0360     		str	r3, [r0]
1356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 985              		.loc 1 1356 5 is_stmt 1 view .LVU270
 986 0090 C5E7     		b	.L68
 987              	.LVL77:
 988              	.L69:
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 989              		.loc 1 1351 7 view .LVU271
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 990              		.loc 1 1351 27 is_stmt 0 view .LVU272
 991 0092 064B     		ldr	r3, .L73+4
 992 0094 B3FBF2F3 		udiv	r3, r3, r2
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 993              		.loc 1 1351 42 view .LVU273
ARM GAS  /tmp/ccKlA27f.s 			page 43


 994 0098 034A     		ldr	r2, .L73
 995              	.LVL78:
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 996              		.loc 1 1351 42 view .LVU274
 997 009a 5268     		ldr	r2, [r2, #4]
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 998              		.loc 1 1351 72 view .LVU275
 999 009c C2F38812 		ubfx	r2, r2, #6, #9
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 1000              		.loc 1 1351 14 view .LVU276
 1001 00a0 02FB03F3 		mul	r3, r2, r3
 1002              	.LVL79:
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     }
 1003              		.loc 1 1351 14 view .LVU277
 1004 00a4 EBE7     		b	.L70
 1005              	.L74:
 1006 00a6 00BF     		.align	2
 1007              	.L73:
 1008 00a8 00380240 		.word	1073887232
 1009 00ac 0024F400 		.word	16000000
 1010 00b0 00000000 		.word	.LANCHOR0
 1011 00b4 00127A00 		.word	8000000
 1012              		.cfi_endproc
 1013              	.LFE144:
 1015              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1016              		.align	1
 1017              		.global	RCC_RTCCLKConfig
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1022              	RCC_RTCCLKConfig:
 1023              	.LVL80:
 1024              	.LFB145:
1409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
1412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
1417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
1418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
1419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****               ##### Peripheral clocks configuration functions #####
1420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
1421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) The RTC clock which is derived from the LSI, LSE or HSE clock divided 
1424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           by 2 to 31.
1425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
1426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) After restart from Reset or wakeup from STANDBY, all peripherals are off
1427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           except internal SRAM, Flash and JTAG. Before to start using a peripheral 
1428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           you have to enable its interface clock. You can do this using 
1429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
1430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) To reset the peripherals configuration (to the default state after device reset)
1432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
ARM GAS  /tmp/ccKlA27f.s 			page 44


1433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_APB1PeriphResetCmd() functions.
1434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      
1435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****       (#) To further reduce power consumption in SLEEP mode the peripheral clocks 
1436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           can be disabled prior to executing the WFI or WFE instructions. 
1437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           You can do this using RCC_AHBPeriphClockLPModeCmd(), 
1438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****           RCC_APB2PeriphClockLPModeCmd() and RCC_APB1PeriphClockLPModeCmd() functions.  
1439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
1441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
1442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   As the RTC clock configuration bits are in the Backup domain and write
1447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         access is denied to this domain after reset, you have to enable write
1448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         access using PWR_BackupAccessCmd(ENABLE) function before to configure
1449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the RTC clock source (to be done once after reset).    
1450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Once the RTC clock is configured it can't be changed unless the  
1451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         Backup domain is reset using RCC_BackupResetCmd() function, or by
1452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         a Power On Reset (POR).
1453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *    
1454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_RTCCLKSource_HSE_Divx: HSE clock divided by x selected
1459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                            as RTC clock, where x:[2,31]
1460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
1461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   If the LSE or LSI is used as RTC clock source, the RTC continues to
1462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         work in STOP and STANDBY modes, and can be used as wakeup source.
1463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         However, when the HSE clock is used as RTC clock source, the RTC
1464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         cannot be used in STOP and STANDBY modes.    
1465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The maximum input clock frequency for RTC is 1MHz (when using HSE as
1466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RTC clock source).
1467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *  
1468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1025              		.loc 1 1471 1 is_stmt 1 view -0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
1472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1030              		.loc 1 1472 3 view .LVU279
1473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 1031              		.loc 1 1475 3 view .LVU280
1476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((RCC_RTCCLKSource & 0x00000300) == 0x00000300)
 1032              		.loc 1 1477 3 view .LVU281
 1033              		.loc 1 1477 25 is_stmt 0 view .LVU282
 1034 0000 00F44073 		and	r3, r0, #768
 1035              		.loc 1 1477 6 view .LVU283
 1036 0004 B3F5407F 		cmp	r3, #768
ARM GAS  /tmp/ccKlA27f.s 			page 45


 1037 0008 06D0     		beq	.L77
 1038              	.LVL81:
 1039              	.L76:
1478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   { /* If HSE is selected as RTC clock source, configure HSE division factor for RTC clock */
1479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg = RCC->CFGR;
1480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear RTCPRE[4:0] bits */
1482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg &= ~RCC_CFGR_RTCPRE;
1483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Configure HSE division factor for RTC clock */
1485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     tmpreg |= (RCC_RTCCLKSource & 0xFFFFCFF);
1486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Store the new value */
1488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CFGR = tmpreg;
1489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     
1491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Select the RTC clock source */
1492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->BDCR |= (RCC_RTCCLKSource & 0x00000FFF);
 1040              		.loc 1 1492 3 is_stmt 1 view .LVU284
 1041              		.loc 1 1492 13 is_stmt 0 view .LVU285
 1042 000a 094A     		ldr	r2, .L78
 1043 000c 136F     		ldr	r3, [r2, #112]
 1044              		.loc 1 1492 34 view .LVU286
 1045 000e C0F30B00 		ubfx	r0, r0, #0, #12
 1046              	.LVL82:
 1047              		.loc 1 1492 13 view .LVU287
 1048 0012 1843     		orrs	r0, r0, r3
 1049 0014 1067     		str	r0, [r2, #112]
1493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1050              		.loc 1 1493 1 view .LVU288
 1051 0016 7047     		bx	lr
 1052              	.LVL83:
 1053              	.L77:
1479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1054              		.loc 1 1479 5 is_stmt 1 view .LVU289
1479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1055              		.loc 1 1479 12 is_stmt 0 view .LVU290
 1056 0018 0549     		ldr	r1, .L78
 1057 001a 8A68     		ldr	r2, [r1, #8]
 1058              	.LVL84:
1482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1059              		.loc 1 1482 5 is_stmt 1 view .LVU291
1482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1060              		.loc 1 1482 12 is_stmt 0 view .LVU292
 1061 001c 22F4F812 		bic	r2, r2, #2031616
 1062              	.LVL85:
1485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1063              		.loc 1 1485 5 is_stmt 1 view .LVU293
1485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1064              		.loc 1 1485 33 is_stmt 0 view .LVU294
 1065 0020 20F07043 		bic	r3, r0, #-268435456
 1066 0024 23F44073 		bic	r3, r3, #768
1485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 1067              		.loc 1 1485 12 view .LVU295
 1068 0028 1343     		orrs	r3, r3, r2
 1069              	.LVL86:
1488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
ARM GAS  /tmp/ccKlA27f.s 			page 46


 1070              		.loc 1 1488 5 is_stmt 1 view .LVU296
1488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 1071              		.loc 1 1488 15 is_stmt 0 view .LVU297
 1072 002a 8B60     		str	r3, [r1, #8]
 1073 002c EDE7     		b	.L76
 1074              	.L79:
 1075 002e 00BF     		.align	2
 1076              	.L78:
 1077 0030 00380240 		.word	1073887232
 1078              		.cfi_endproc
 1079              	.LFE145:
 1081              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1082              		.align	1
 1083              		.global	RCC_RTCCLKCmd
 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	RCC_RTCCLKCmd:
 1089              	.LVL87:
 1090              	.LFB146:
1494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
1500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1091              		.loc 1 1503 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
1504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1096              		.loc 1 1505 3 view .LVU299
1506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 1097              		.loc 1 1507 3 view .LVU300
 1098              		.loc 1 1507 36 is_stmt 0 view .LVU301
 1099 0000 014B     		ldr	r3, .L81
 1100 0002 C3F83C0E 		str	r0, [r3, #3644]
1508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1101              		.loc 1 1508 1 view .LVU302
 1102 0006 7047     		bx	lr
 1103              	.L82:
 1104              		.align	2
 1105              	.L81:
 1106 0008 00004742 		.word	1111949312
 1107              		.cfi_endproc
 1108              	.LFE146:
 1110              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1111              		.align	1
 1112              		.global	RCC_BackupResetCmd
 1113              		.syntax unified
ARM GAS  /tmp/ccKlA27f.s 			page 47


 1114              		.thumb
 1115              		.thumb_func
 1117              	RCC_BackupResetCmd:
 1118              	.LVL88:
 1119              	.LFB147:
1509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         and the RTC clock source selection in RCC_CSR register.
1514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The BKPSRAM is not affected by this reset.    
1515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1120              		.loc 1 1520 1 is_stmt 1 view -0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
1521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1125              		.loc 1 1522 3 view .LVU304
1523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 1126              		.loc 1 1523 3 view .LVU305
 1127              		.loc 1 1523 36 is_stmt 0 view .LVU306
 1128 0000 014B     		ldr	r3, .L84
 1129 0002 C3F8400E 		str	r0, [r3, #3648]
1524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1130              		.loc 1 1524 1 view .LVU307
 1131 0006 7047     		bx	lr
 1132              	.L85:
 1133              		.align	2
 1134              	.L84:
 1135 0008 00004742 		.word	1111949312
 1136              		.cfi_endproc
 1137              	.LFE147:
 1139              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 1140              		.align	1
 1141              		.global	RCC_I2SCLKConfig
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1146              	RCC_I2SCLKConfig:
 1147              	.LVL89:
 1148              	.LFB148:
1525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
1527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SAPBx: specifies the APBx I2S clock source.
1532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB1: I2S peripheral instance is on APB1 Bus
ARM GAS  /tmp/ccKlA27f.s 			page 48


1534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SBus_APB2: I2S peripheral instance is on APB2 Bus
1535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_PLL: PLL clock used as I2S clock source
1542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SCLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as I2S clock source
1543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SAPBx, uint32_t RCC_I2SCLKSource)
1546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2S_APBx(RCC_I2SAPBx));
1550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_I2SAPBx == RCC_I2SBus_APB1)
1552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear APB1 I2Sx clock source selection bits */
1554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S1SRC;
1555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new APB1 I2Sx clock source*/
1556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_I2SCLKSource;
1557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear APB2 I2Sx clock source selection  bits */
1561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_I2S2SRC;
1562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new APB2 I2Sx clock source */
1563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_I2SCLKSource << 2);
1564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAIx clock source (SAIxCLK).
1569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the SAIx APB clock.
1570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIInstance: specifies the SAIx clock source.
1572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI1: SAI1 clock source selection
1574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIInstance_SAI2: SAI2 clock source selections
1575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAICLKSource: specifies the SAI clock source.
1577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLSAI: PLLSAI clock used as SAI clock source
1579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLLI2S: PLLI2S clock used as SAI clock source
1580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_PLL: PLL clock used as SAI clock source
1581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAICLKSource_HSI_HSE: HSI or HSE depends on PLLSRC used as SAI clock source
1582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAICLKConfig(uint32_t RCC_SAIInstance, uint32_t RCC_SAICLKSource)
1585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAICLK_SOURCE(RCC_SAICLKSource));
1588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAI_INSTANCE(RCC_SAIInstance));
1589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_SAIInstance == RCC_SAIInstance_SAI1)
ARM GAS  /tmp/ccKlA27f.s 			page 49


1591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear SAI1 clock source selection bits */
1593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI1SRC;
1594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new SAI1 clock source */
1595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= RCC_SAICLKSource;
1596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Clear SAI2 clock source selection bits */
1600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR &= ~RCC_DCKCFGR_SAI2SRC;
1601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Set new SAI2 clock source */
1602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->DCKCFGR |= (RCC_SAICLKSource << 2);
1603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
1606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
1608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S clock.
1611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *
1612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
1614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLR: PLL VCO output clock divided by PLLR.
1615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_EXT: External clock mapped on the I2S_CKIN pin.
1616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2SAPBCLKSOURCE_PLLSRC: HSI/HSE depends on PLLSRC.
1617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
1621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear I2Sx clock source selection bits */
1625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR &= ~RCC_DCKCFGR_I2SSRC;
1626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new I2Sx clock source*/
1627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR |= RCC_I2SCLKSource;
1628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
1629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
1630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the I2S APB clock.
1635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_PLLI2S: PLLI2S clock used as I2S clock source
1638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as I2S clock source
1640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1149              		.loc 1 1643 1 is_stmt 1 view -0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccKlA27f.s 			page 50


 1153              		@ link register save eliminated.
1644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
 1154              		.loc 1 1645 3 view .LVU309
1646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;  
 1155              		.loc 1 1647 3 view .LVU310
 1156              		.loc 1 1647 37 is_stmt 0 view .LVU311
 1157 0000 014B     		ldr	r3, .L87
 1158 0002 C3F85C01 		str	r0, [r3, #348]
1648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1159              		.loc 1 1648 1 view .LVU312
 1160 0006 7047     		bx	lr
 1161              	.L88:
 1162              		.align	2
 1163              	.L87:
 1164 0008 00004742 		.word	1111949312
 1165              		.cfi_endproc
 1166              	.LFE148:
 1168              		.section	.text.RCC_SAIBlockACLKConfig,"ax",%progbits
 1169              		.align	1
 1170              		.global	RCC_SAIBlockACLKConfig
 1171              		.syntax unified
 1172              		.thumb
 1173              		.thumb_func
 1175              	RCC_SAIBlockACLKConfig:
 1176              	.LVL90:
 1177              	.LFB149:
1649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F401xx || STM32F411xE || STM
1650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockA clock source selection.
1654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
1657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
1659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockACLKSource: specifies the SAI Block A clock source.
1660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block A clock 
1665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIACLKSource_Ext: External clock mapped on the I2S_CKIN pin
1666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block A clock
1667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockACLKConfig(uint32_t RCC_SAIBlockACLKSource)
1670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1178              		.loc 1 1670 1 is_stmt 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              		@ link register save eliminated.
1671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1183              		.loc 1 1671 3 view .LVU314
ARM GAS  /tmp/ccKlA27f.s 			page 51


1672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIACLK_SOURCE(RCC_SAIBlockACLKSource));
 1184              		.loc 1 1674 3 view .LVU315
1675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1185              		.loc 1 1676 3 view .LVU316
 1186              		.loc 1 1676 10 is_stmt 0 view .LVU317
 1187 0000 044A     		ldr	r2, .L90
 1188 0002 D2F88C30 		ldr	r3, [r2, #140]
 1189              	.LVL91:
1677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1ASRC[1:0] bits */
1679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1ASRC;
 1190              		.loc 1 1679 3 is_stmt 1 view .LVU318
 1191              		.loc 1 1679 10 is_stmt 0 view .LVU319
 1192 0006 23F44013 		bic	r3, r3, #3145728
 1193              	.LVL92:
1680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block A source selection value */
1682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockACLKSource;
 1194              		.loc 1 1682 3 is_stmt 1 view .LVU320
 1195              		.loc 1 1682 10 is_stmt 0 view .LVU321
 1196 000a 0343     		orrs	r3, r3, r0
 1197              	.LVL93:
1683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1198              		.loc 1 1685 3 is_stmt 1 view .LVU322
 1199              		.loc 1 1685 16 is_stmt 0 view .LVU323
 1200 000c C2F88C30 		str	r3, [r2, #140]
1686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1201              		.loc 1 1686 1 view .LVU324
 1202 0010 7047     		bx	lr
 1203              	.L91:
 1204 0012 00BF     		.align	2
 1205              	.L90:
 1206 0014 00380240 		.word	1073887232
 1207              		.cfi_endproc
 1208              	.LFE149:
 1210              		.section	.text.RCC_SAIBlockBCLKConfig,"ax",%progbits
 1211              		.align	1
 1212              		.global	RCC_SAIBlockBCLKConfig
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	RCC_SAIBlockBCLKConfig:
 1218              	.LVL94:
 1219              	.LFB150:
1687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures SAI1BlockB clock source selection.
1690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *       
1693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling PLLSAI, PLLI2S and  
1694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         the SAI clock.
ARM GAS  /tmp/ccKlA27f.s 			page 52


1695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_SAIBlockBCLKSource: specifies the SAI Block B clock source.
1696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLI2S: PLLI2S_Q clock divided by PLLI2SDIVQ used 
1698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_PLLSAI: PLLISAI_Q clock divided by PLLSAIDIVQ used 
1700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                           as SAI1 Block B clock 
1701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SAIBCLKSource_Ext: External clock mapped on the I2S_CKIN pin
1702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                                        used as SAI1 Block B clock
1703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIBlockBCLKConfig(uint32_t RCC_SAIBlockBCLKSource)
1706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1220              		.loc 1 1706 1 is_stmt 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
1707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1225              		.loc 1 1707 3 view .LVU326
1708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SAIBCLK_SOURCE(RCC_SAIBlockBCLKSource));
 1226              		.loc 1 1710 3 view .LVU327
1711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1227              		.loc 1 1712 3 view .LVU328
 1228              		.loc 1 1712 10 is_stmt 0 view .LVU329
 1229 0000 044A     		ldr	r2, .L93
 1230 0002 D2F88C30 		ldr	r3, [r2, #140]
 1231              	.LVL95:
1713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear RCC_DCKCFGR_SAI1BSRC[1:0] bits */
1715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_SAI1BSRC;
 1232              		.loc 1 1715 3 is_stmt 1 view .LVU330
 1233              		.loc 1 1715 10 is_stmt 0 view .LVU331
 1234 0006 23F44003 		bic	r3, r3, #12582912
 1235              	.LVL96:
1716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set SAI Block B source selection value */
1718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_SAIBlockBCLKSource;
 1236              		.loc 1 1718 3 is_stmt 1 view .LVU332
 1237              		.loc 1 1718 10 is_stmt 0 view .LVU333
 1238 000a 0343     		orrs	r3, r3, r0
 1239              	.LVL97:
1719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1240              		.loc 1 1721 3 is_stmt 1 view .LVU334
 1241              		.loc 1 1721 16 is_stmt 0 view .LVU335
 1242 000c C2F88C30 		str	r3, [r2, #140]
1722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1243              		.loc 1 1722 1 view .LVU336
 1244 0010 7047     		bx	lr
 1245              	.L94:
 1246 0012 00BF     		.align	2
 1247              	.L93:
 1248 0014 00380240 		.word	1073887232
ARM GAS  /tmp/ccKlA27f.s 			page 53


 1249              		.cfi_endproc
 1250              	.LFE150:
 1252              		.section	.text.RCC_SAIPLLI2SClkDivConfig,"ax",%progbits
 1253              		.align	1
 1254              		.global	RCC_SAIPLLI2SClkDivConfig
 1255              		.syntax unified
 1256              		.thumb
 1257              		.thumb_func
 1259              	RCC_SAIPLLI2SClkDivConfig:
 1260              	.LVL98:
 1261              	.LFB151:
1723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F469_479xx */
1724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLI2S.
1727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLI2S.
1731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLI2SDivQ: specifies the PLLI2S division factor for SAI1 clock .
1733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLI2S_Q) / RCC_PLLI2SDivQ 
1735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLI2SClkDivConfig(uint32_t RCC_PLLI2SDivQ)  
1739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1262              		.loc 1 1739 1 is_stmt 1 view -0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
1740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1267              		.loc 1 1740 3 view .LVU338
1741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(RCC_PLLI2SDivQ));
 1268              		.loc 1 1743 3 view .LVU339
1744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1269              		.loc 1 1745 3 view .LVU340
 1270              		.loc 1 1745 10 is_stmt 0 view .LVU341
 1271 0000 044A     		ldr	r2, .L96
 1272 0002 D2F88C30 		ldr	r3, [r2, #140]
 1273              	.LVL99:
1746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] bits */
1748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLI2SDIVQ);
 1274              		.loc 1 1748 3 is_stmt 1 view .LVU342
 1275              		.loc 1 1748 10 is_stmt 0 view .LVU343
 1276 0006 23F01F03 		bic	r3, r3, #31
 1277              	.LVL100:
1749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLI2SDIVQ values */
1751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= (RCC_PLLI2SDivQ - 1);
 1278              		.loc 1 1751 3 is_stmt 1 view .LVU344
ARM GAS  /tmp/ccKlA27f.s 			page 54


 1279              		.loc 1 1751 29 is_stmt 0 view .LVU345
 1280 000a 0138     		subs	r0, r0, #1
 1281              	.LVL101:
 1282              		.loc 1 1751 10 view .LVU346
 1283 000c 1843     		orrs	r0, r0, r3
 1284              	.LVL102:
1752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1285              		.loc 1 1754 3 is_stmt 1 view .LVU347
 1286              		.loc 1 1754 16 is_stmt 0 view .LVU348
 1287 000e C2F88C00 		str	r0, [r2, #140]
1755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1288              		.loc 1 1755 1 view .LVU349
 1289 0012 7047     		bx	lr
 1290              	.L97:
 1291              		.align	2
 1292              	.L96:
 1293 0014 00380240 		.word	1073887232
 1294              		.cfi_endproc
 1295              	.LFE151:
 1297              		.section	.text.RCC_SAIPLLSAIClkDivConfig,"ax",%progbits
 1298              		.align	1
 1299              		.global	RCC_SAIPLLSAIClkDivConfig
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	RCC_SAIPLLSAIClkDivConfig:
 1305              	.LVL103:
 1306              	.LFB152:
1756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the SAI clock Divider coming from PLLSAI.
1759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx/446xx/469xx/479xx devices.
1761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *        
1762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivQ: specifies the PLLSAI division factor for SAI1 clock .
1765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be a number between 1 and 32.
1766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          SAI1 clock frequency = f(PLLSAI_Q) / RCC_PLLSAIDivQ  
1767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *              
1768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SAIPLLSAIClkDivConfig(uint32_t RCC_PLLSAIDivQ)  
1771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1307              		.loc 1 1771 1 is_stmt 1 view -0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
1772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1312              		.loc 1 1772 3 view .LVU351
1773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(RCC_PLLSAIDivQ));
 1313              		.loc 1 1775 3 view .LVU352
ARM GAS  /tmp/ccKlA27f.s 			page 55


1776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1314              		.loc 1 1777 3 view .LVU353
 1315              		.loc 1 1777 10 is_stmt 0 view .LVU354
 1316 0000 054A     		ldr	r2, .L99
 1317 0002 D2F88C30 		ldr	r3, [r2, #140]
 1318              	.LVL104:
1778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLI2SDIVQ[4:0] and PLLSAIDIVQ[4:0] bits */
1780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~(RCC_DCKCFGR_PLLSAIDIVQ);
 1319              		.loc 1 1780 3 is_stmt 1 view .LVU355
 1320              		.loc 1 1780 10 is_stmt 0 view .LVU356
 1321 0006 23F4F853 		bic	r3, r3, #7936
 1322              	.LVL105:
1781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVQ values */
1783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= ((RCC_PLLSAIDivQ - 1) << 8);
 1323              		.loc 1 1783 3 is_stmt 1 view .LVU357
 1324              		.loc 1 1783 30 is_stmt 0 view .LVU358
 1325 000a 0138     		subs	r0, r0, #1
 1326              	.LVL106:
 1327              		.loc 1 1783 10 view .LVU359
 1328 000c 43EA0023 		orr	r3, r3, r0, lsl #8
 1329              	.LVL107:
1784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1330              		.loc 1 1786 3 is_stmt 1 view .LVU360
 1331              		.loc 1 1786 16 is_stmt 0 view .LVU361
 1332 0010 C2F88C30 		str	r3, [r2, #140]
1787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1333              		.loc 1 1787 1 view .LVU362
 1334 0014 7047     		bx	lr
 1335              	.L100:
 1336 0016 00BF     		.align	2
 1337              	.L99:
 1338 0018 00380240 		.word	1073887232
 1339              		.cfi_endproc
 1340              	.LFE152:
 1342              		.section	.text.RCC_LTDCCLKDivConfig,"ax",%progbits
 1343              		.align	1
 1344              		.global	RCC_LTDCCLKDivConfig
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1349              	RCC_LTDCCLKDivConfig:
 1350              	.LVL108:
 1351              	.LFB153:
1788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the LTDC clock Divider coming from PLLSAI.
1791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   The LTDC peripheral is only available with STM32F42xxx/43xxx/446xx/469xx/479xx Devices.
1793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *      
1794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function must be called before enabling the PLLSAI.
1795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_PLLSAIDivR: specifies the PLLSAI division factor for LTDC clock .
ARM GAS  /tmp/ccKlA27f.s 			page 56


1797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          LTDC clock frequency = f(PLLSAI_R) / RCC_PLLSAIDivR  
1798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
1799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div2: LTDC clock = f(PLLSAI_R)/2
1800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div4: LTDC clock = f(PLLSAI_R)/4
1801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div8: LTDC clock = f(PLLSAI_R)/8
1802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_PLLSAIDivR_Div16: LTDC clock = f(PLLSAI_R)/16
1803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            
1804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LTDCCLKDivConfig(uint32_t RCC_PLLSAIDivR)
1807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1352              		.loc 1 1807 1 is_stmt 1 view -0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
1808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmpreg = 0;
 1357              		.loc 1 1808 3 view .LVU364
1809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_PLLSAI_DIVR_VALUE(RCC_PLLSAIDivR));
 1358              		.loc 1 1811 3 view .LVU365
1812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
1813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg = RCC->DCKCFGR;
 1359              		.loc 1 1813 3 view .LVU366
 1360              		.loc 1 1813 10 is_stmt 0 view .LVU367
 1361 0000 044A     		ldr	r2, .L102
 1362 0002 D2F88C30 		ldr	r3, [r2, #140]
 1363              	.LVL109:
1814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear PLLSAIDIVR[2:0] bits */
1816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg &= ~RCC_DCKCFGR_PLLSAIDIVR;
 1364              		.loc 1 1816 3 is_stmt 1 view .LVU368
 1365              		.loc 1 1816 10 is_stmt 0 view .LVU369
 1366 0006 23F44033 		bic	r3, r3, #196608
 1367              	.LVL110:
1817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set PLLSAIDIVR values */
1819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmpreg |= RCC_PLLSAIDivR;
 1368              		.loc 1 1819 3 is_stmt 1 view .LVU370
 1369              		.loc 1 1819 10 is_stmt 0 view .LVU371
 1370 000a 0343     		orrs	r3, r3, r0
 1371              	.LVL111:
1820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Store the new value */
1822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR = tmpreg;
 1372              		.loc 1 1822 3 is_stmt 1 view .LVU372
 1373              		.loc 1 1822 16 is_stmt 0 view .LVU373
 1374 000c C2F88C30 		str	r3, [r2, #140]
1823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1375              		.loc 1 1823 1 view .LVU374
 1376 0010 7047     		bx	lr
 1377              	.L103:
 1378 0012 00BF     		.align	2
 1379              	.L102:
 1380 0014 00380240 		.word	1073887232
 1381              		.cfi_endproc
ARM GAS  /tmp/ccKlA27f.s 			page 57


 1382              	.LFE153:
 1384              		.section	.text.RCC_TIMCLKPresConfig,"ax",%progbits
 1385              		.align	1
 1386              		.global	RCC_TIMCLKPresConfig
 1387              		.syntax unified
 1388              		.thumb
 1389              		.thumb_func
 1391              	RCC_TIMCLKPresConfig:
 1392              	.LVL112:
 1393              	.LFB154:
1824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Configures the Timers clocks prescalers selection.
1827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * 
1828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   This function can be used only for STM32F42xxx/43xxx and STM32F401xx/411xE devices. 
1829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *   
1830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_TIMCLKPrescaler : specifies the Timers clocks prescalers selection
1831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         This parameter can be one of the following values:
1832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescDesactivated: The Timers kernels clocks prescaler is 
1833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1 or 2, 
1834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 2] if PPREx is corresponding to 
1835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 division by 4 or more.
1836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                   
1837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_TIMPrescActivated: The Timers kernels clocks prescaler is 
1838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 equal to HPRE if PPREx is corresponding to division by 1, 2 or 4, 
1839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 else it is equal to [(HPRE * PPREx) / 4] if PPREx is corresponding 
1840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                 to division by 8 or more.
1841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_TIMCLKPresConfig(uint32_t RCC_TIMCLKPrescaler)
1844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1394              		.loc 1 1844 1 is_stmt 1 view -0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
1845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_TIMCLK_PRESCALER(RCC_TIMCLKPrescaler));
 1399              		.loc 1 1846 3 view .LVU376
1847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) DCKCFGR_TIMPRE_BB = RCC_TIMCLKPrescaler;
 1400              		.loc 1 1848 3 view .LVU377
 1401              		.loc 1 1848 40 is_stmt 0 view .LVU378
 1402 0000 014B     		ldr	r3, .L105
 1403 0002 C3F8E001 		str	r0, [r3, #480]
1849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1404              		.loc 1 1849 1 view .LVU379
 1405 0006 7047     		bx	lr
 1406              	.L106:
 1407              		.align	2
 1408              	.L105:
 1409 0008 00104742 		.word	1111953408
 1410              		.cfi_endproc
 1411              	.LFE154:
 1413              		.section	.text.RCC_AHB1PeriphClockCmd,"ax",%progbits
 1414              		.align	1
 1415              		.global	RCC_AHB1PeriphClockCmd
ARM GAS  /tmp/ccKlA27f.s 			page 58


 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1420              	RCC_AHB1PeriphClockCmd:
 1421              	.LVL113:
 1422              	.LFB155:
1850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock.
1853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it.   
1856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
1857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
1858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
1859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
1860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
1861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
1862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
1863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
1864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
1866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
1867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
1868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)  
1869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
1870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
1871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CCMDATARAMEN CCM data RAM interface clock
1872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
1873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
1874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices)  
1875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
1876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
1877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
1878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
1879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
1880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
1881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
1886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1423              		.loc 1 1886 1 is_stmt 1 view -0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
1887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 1428              		.loc 1 1888 3 view .LVU381
1889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1429              		.loc 1 1890 3 view .LVU382
1891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1430              		.loc 1 1891 3 view .LVU383
 1431              		.loc 1 1891 6 is_stmt 0 view .LVU384
ARM GAS  /tmp/ccKlA27f.s 			page 59


 1432 0000 21B1     		cbz	r1, .L108
1892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR |= RCC_AHB1Periph;
 1433              		.loc 1 1893 5 is_stmt 1 view .LVU385
 1434              		.loc 1 1893 18 is_stmt 0 view .LVU386
 1435 0002 054A     		ldr	r2, .L110
 1436 0004 136B     		ldr	r3, [r2, #48]
 1437 0006 1843     		orrs	r0, r0, r3
 1438              	.LVL114:
 1439              		.loc 1 1893 18 view .LVU387
 1440 0008 1063     		str	r0, [r2, #48]
 1441 000a 7047     		bx	lr
 1442              	.LVL115:
 1443              	.L108:
1894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1ENR &= ~RCC_AHB1Periph;
 1444              		.loc 1 1897 5 is_stmt 1 view .LVU388
 1445              		.loc 1 1897 18 is_stmt 0 view .LVU389
 1446 000c 024A     		ldr	r2, .L110
 1447 000e 136B     		ldr	r3, [r2, #48]
 1448 0010 23EA0000 		bic	r0, r3, r0
 1449              	.LVL116:
 1450              		.loc 1 1897 18 view .LVU390
 1451 0014 1063     		str	r0, [r2, #48]
1898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1452              		.loc 1 1899 1 view .LVU391
 1453 0016 7047     		bx	lr
 1454              	.L111:
 1455              		.align	2
 1456              	.L110:
 1457 0018 00380240 		.word	1073887232
 1458              		.cfi_endproc
 1459              	.LFE155:
 1461              		.section	.text.RCC_AHB2PeriphClockCmd,"ax",%progbits
 1462              		.align	1
 1463              		.global	RCC_AHB2PeriphClockCmd
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1468              	RCC_AHB2PeriphClockCmd:
 1469              	.LVL117:
 1470              	.LFB156:
1900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock.
1903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
1906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
1907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
1908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
1909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
1910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
1911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
ARM GAS  /tmp/ccKlA27f.s 			page 60


1912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
1913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
1918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1471              		.loc 1 1918 1 is_stmt 1 view -0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
1919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1476              		.loc 1 1920 3 view .LVU393
1921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1477              		.loc 1 1921 3 view .LVU394
1922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1478              		.loc 1 1923 3 view .LVU395
 1479              		.loc 1 1923 6 is_stmt 0 view .LVU396
 1480 0000 21B1     		cbz	r1, .L113
1924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR |= RCC_AHB2Periph;
 1481              		.loc 1 1925 5 is_stmt 1 view .LVU397
 1482              		.loc 1 1925 18 is_stmt 0 view .LVU398
 1483 0002 054A     		ldr	r2, .L115
 1484 0004 536B     		ldr	r3, [r2, #52]
 1485 0006 1843     		orrs	r0, r0, r3
 1486              	.LVL118:
 1487              		.loc 1 1925 18 view .LVU399
 1488 0008 5063     		str	r0, [r2, #52]
 1489 000a 7047     		bx	lr
 1490              	.LVL119:
 1491              	.L113:
1926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2ENR &= ~RCC_AHB2Periph;
 1492              		.loc 1 1929 5 is_stmt 1 view .LVU400
 1493              		.loc 1 1929 18 is_stmt 0 view .LVU401
 1494 000c 024A     		ldr	r2, .L115
 1495 000e 536B     		ldr	r3, [r2, #52]
 1496 0010 23EA0000 		bic	r0, r3, r0
 1497              	.LVL120:
 1498              		.loc 1 1929 18 view .LVU402
 1499 0014 5063     		str	r0, [r2, #52]
1930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1500              		.loc 1 1931 1 view .LVU403
 1501 0016 7047     		bx	lr
 1502              	.L116:
 1503              		.align	2
 1504              	.L115:
 1505 0018 00380240 		.word	1073887232
 1506              		.cfi_endproc
 1507              	.LFE156:
ARM GAS  /tmp/ccKlA27f.s 			page 61


 1509              		.section	.text.RCC_AHB3PeriphClockCmd,"ax",%progbits
 1510              		.align	1
 1511              		.global	RCC_AHB3PeriphClockCmd
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1516              	RCC_AHB3PeriphClockCmd:
 1517              	.LVL121:
 1518              	.LFB157:
1932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
1934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock.
1936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
1939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
1940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
1941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F429x/439x devices)
1942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F446xx/STM32F469_479xx devices)
1943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
1945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
1946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
1947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
1948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1519              		.loc 1 1948 1 is_stmt 1 view -0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
1949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
1950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));  
 1524              		.loc 1 1950 3 view .LVU405
1951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1525              		.loc 1 1951 3 view .LVU406
1952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1526              		.loc 1 1953 3 view .LVU407
 1527              		.loc 1 1953 6 is_stmt 0 view .LVU408
 1528 0000 21B1     		cbz	r1, .L118
1954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
1955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR |= RCC_AHB3Periph;
 1529              		.loc 1 1955 5 is_stmt 1 view .LVU409
 1530              		.loc 1 1955 18 is_stmt 0 view .LVU410
 1531 0002 054A     		ldr	r2, .L120
 1532 0004 936B     		ldr	r3, [r2, #56]
 1533 0006 1843     		orrs	r0, r0, r3
 1534              	.LVL122:
 1535              		.loc 1 1955 18 view .LVU411
 1536 0008 9063     		str	r0, [r2, #56]
 1537 000a 7047     		bx	lr
 1538              	.LVL123:
 1539              	.L118:
1956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
1958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
ARM GAS  /tmp/ccKlA27f.s 			page 62


1959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3ENR &= ~RCC_AHB3Periph;
 1540              		.loc 1 1959 5 is_stmt 1 view .LVU412
 1541              		.loc 1 1959 18 is_stmt 0 view .LVU413
 1542 000c 024A     		ldr	r2, .L120
 1543 000e 936B     		ldr	r3, [r2, #56]
 1544 0010 23EA0000 		bic	r0, r3, r0
 1545              	.LVL124:
 1546              		.loc 1 1959 18 view .LVU414
 1547 0014 9063     		str	r0, [r2, #56]
1960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
1961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1548              		.loc 1 1961 1 view .LVU415
 1549 0016 7047     		bx	lr
 1550              	.L121:
 1551              		.align	2
 1552              	.L120:
 1553 0018 00380240 		.word	1073887232
 1554              		.cfi_endproc
 1555              	.LFE157:
 1557              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1558              		.align	1
 1559              		.global	RCC_APB1PeriphClockCmd
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1564              	RCC_APB1PeriphClockCmd:
 1565              	.LVL125:
 1566              	.LFB158:
1962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
1963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
1964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
1965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it. 
1969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
1971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
1972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
1973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
1974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
1975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
1976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
1977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
1978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
1979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
1980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx devices) 
1981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
1982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
1983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
1984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
1985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
1986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
1987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
1988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
1989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
1990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
ARM GAS  /tmp/ccKlA27f.s 			page 63


1991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
1992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
1993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
1994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
1995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
1996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
1997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
1998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
1999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1567              		.loc 1 2005 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
2006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));  
 1572              		.loc 1 2007 3 view .LVU417
2008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1573              		.loc 1 2008 3 view .LVU418
2009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1574              		.loc 1 2010 3 view .LVU419
 1575              		.loc 1 2010 6 is_stmt 0 view .LVU420
 1576 0000 21B1     		cbz	r1, .L123
2011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1577              		.loc 1 2012 5 is_stmt 1 view .LVU421
 1578              		.loc 1 2012 18 is_stmt 0 view .LVU422
 1579 0002 054A     		ldr	r2, .L125
 1580 0004 136C     		ldr	r3, [r2, #64]
 1581 0006 1843     		orrs	r0, r0, r3
 1582              	.LVL126:
 1583              		.loc 1 2012 18 view .LVU423
 1584 0008 1064     		str	r0, [r2, #64]
 1585 000a 7047     		bx	lr
 1586              	.LVL127:
 1587              	.L123:
2013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 1588              		.loc 1 2016 5 is_stmt 1 view .LVU424
 1589              		.loc 1 2016 18 is_stmt 0 view .LVU425
 1590 000c 024A     		ldr	r2, .L125
 1591 000e 136C     		ldr	r3, [r2, #64]
 1592 0010 23EA0000 		bic	r0, r3, r0
 1593              	.LVL128:
 1594              		.loc 1 2016 18 view .LVU426
 1595 0014 1064     		str	r0, [r2, #64]
2017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
ARM GAS  /tmp/ccKlA27f.s 			page 64


 1596              		.loc 1 2018 1 view .LVU427
 1597 0016 7047     		bx	lr
 1598              	.L126:
 1599              		.align	2
 1600              	.L125:
 1601 0018 00380240 		.word	1073887232
 1602              		.cfi_endproc
 1603              	.LFE158:
 1605              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1606              		.align	1
 1607              		.global	RCC_APB2PeriphClockCmd
 1608              		.syntax unified
 1609              		.thumb
 1610              		.thumb_func
 1612              	RCC_APB2PeriphClockCmd:
 1613              	.LVL129:
 1614              	.LFB159:
2019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
2022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
2023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
2024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         using it.
2025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx devices)
2044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices) 
2047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1615              		.loc 1 2052 1 is_stmt 1 view -0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
2053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccKlA27f.s 			page 65


2054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 1620              		.loc 1 2054 3 view .LVU429
2055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1621              		.loc 1 2055 3 view .LVU430
2056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1622              		.loc 1 2057 3 view .LVU431
 1623              		.loc 1 2057 6 is_stmt 0 view .LVU432
 1624 0000 21B1     		cbz	r1, .L128
2058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1625              		.loc 1 2059 5 is_stmt 1 view .LVU433
 1626              		.loc 1 2059 18 is_stmt 0 view .LVU434
 1627 0002 054A     		ldr	r2, .L130
 1628 0004 536C     		ldr	r3, [r2, #68]
 1629 0006 1843     		orrs	r0, r0, r3
 1630              	.LVL130:
 1631              		.loc 1 2059 18 view .LVU435
 1632 0008 5064     		str	r0, [r2, #68]
 1633 000a 7047     		bx	lr
 1634              	.LVL131:
 1635              	.L128:
2060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 1636              		.loc 1 2063 5 is_stmt 1 view .LVU436
 1637              		.loc 1 2063 18 is_stmt 0 view .LVU437
 1638 000c 024A     		ldr	r2, .L130
 1639 000e 536C     		ldr	r3, [r2, #68]
 1640 0010 23EA0000 		bic	r0, r3, r0
 1641              	.LVL132:
 1642              		.loc 1 2063 18 view .LVU438
 1643 0014 5064     		str	r0, [r2, #68]
2064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1644              		.loc 1 2065 1 view .LVU439
 1645 0016 7047     		bx	lr
 1646              	.L131:
 1647              		.align	2
 1648              	.L130:
 1649 0018 00380240 		.word	1073887232
 1650              		.cfi_endproc
 1651              	.LFE159:
 1653              		.section	.text.RCC_AHB1PeriphResetCmd,"ax",%progbits
 1654              		.align	1
 1655              		.global	RCC_AHB1PeriphResetCmd
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1660              	RCC_AHB1PeriphResetCmd:
 1661              	.LVL133:
 1662              	.LFB160:
2066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB1 peripheral reset.
2069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1Periph: specifies the AHB1 peripheral to reset.
ARM GAS  /tmp/ccKlA27f.s 			page 66


2070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:   GPIOA clock
2072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:   GPIOB clock 
2073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:   GPIOC clock
2074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:   GPIOD clock
2075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:   GPIOE clock
2076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:   GPIOF clock
2077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:   GPIOG clock
2079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:   GPIOI clock
2080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:   GPIOJ clock (STM32F42xxx/43xxx devices) 
2081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:   GPIOK clock (STM32F42xxx/43xxxdevices)   
2082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:     CRC clock
2083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:    DMA1 clock
2084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:    DMA2 clock
2085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:   DMA2D clock (STM32F429xx/439xx devices)   
2086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC: Ethernet MAC clock
2087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:  USB OTG HS clock
2088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_RNG:    RNG clock for STM32F410xx devices
2089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *                  
2090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphResetCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1663              		.loc 1 2095 1 is_stmt 1 view -0
 1664              		.cfi_startproc
 1665              		@ args = 0, pretend = 0, frame = 0
 1666              		@ frame_needed = 0, uses_anonymous_args = 0
 1667              		@ link register save eliminated.
2096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_RESET_PERIPH(RCC_AHB1Periph));
 1668              		.loc 1 2097 3 view .LVU441
2098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1669              		.loc 1 2098 3 view .LVU442
2099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1670              		.loc 1 2100 3 view .LVU443
 1671              		.loc 1 2100 6 is_stmt 0 view .LVU444
 1672 0000 21B1     		cbz	r1, .L133
2101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR |= RCC_AHB1Periph;
 1673              		.loc 1 2102 5 is_stmt 1 view .LVU445
 1674              		.loc 1 2102 19 is_stmt 0 view .LVU446
 1675 0002 054A     		ldr	r2, .L135
 1676 0004 1369     		ldr	r3, [r2, #16]
 1677 0006 1843     		orrs	r0, r0, r3
 1678              	.LVL134:
 1679              		.loc 1 2102 19 view .LVU447
 1680 0008 1061     		str	r0, [r2, #16]
 1681 000a 7047     		bx	lr
 1682              	.LVL135:
 1683              	.L133:
2103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
ARM GAS  /tmp/ccKlA27f.s 			page 67


2106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1RSTR &= ~RCC_AHB1Periph;
 1684              		.loc 1 2106 5 is_stmt 1 view .LVU448
 1685              		.loc 1 2106 19 is_stmt 0 view .LVU449
 1686 000c 024A     		ldr	r2, .L135
 1687 000e 1369     		ldr	r3, [r2, #16]
 1688 0010 23EA0000 		bic	r0, r3, r0
 1689              	.LVL136:
 1690              		.loc 1 2106 19 view .LVU450
 1691 0014 1061     		str	r0, [r2, #16]
2107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1692              		.loc 1 2108 1 view .LVU451
 1693 0016 7047     		bx	lr
 1694              	.L136:
 1695              		.align	2
 1696              	.L135:
 1697 0018 00380240 		.word	1073887232
 1698              		.cfi_endproc
 1699              	.LFE160:
 1701              		.section	.text.RCC_AHB2PeriphResetCmd,"ax",%progbits
 1702              		.align	1
 1703              		.global	RCC_AHB2PeriphResetCmd
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1708              	RCC_AHB2PeriphResetCmd:
 1709              	.LVL137:
 1710              	.LFB161:
2109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB2 peripheral reset.
2112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB2Periph: specifies the AHB2 peripheral to reset.
2113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock for STM32F40_41xxx/STM32F427_437xx/STM32F429_4
2118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock
2119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphResetCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1711              		.loc 1 2124 1 is_stmt 1 view -0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              		@ link register save eliminated.
2125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1716              		.loc 1 2126 3 view .LVU453
2127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1717              		.loc 1 2127 3 view .LVU454
2128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1718              		.loc 1 2129 3 view .LVU455
ARM GAS  /tmp/ccKlA27f.s 			page 68


 1719              		.loc 1 2129 6 is_stmt 0 view .LVU456
 1720 0000 21B1     		cbz	r1, .L138
2130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR |= RCC_AHB2Periph;
 1721              		.loc 1 2131 5 is_stmt 1 view .LVU457
 1722              		.loc 1 2131 19 is_stmt 0 view .LVU458
 1723 0002 054A     		ldr	r2, .L140
 1724 0004 5369     		ldr	r3, [r2, #20]
 1725 0006 1843     		orrs	r0, r0, r3
 1726              	.LVL138:
 1727              		.loc 1 2131 19 view .LVU459
 1728 0008 5061     		str	r0, [r2, #20]
 1729 000a 7047     		bx	lr
 1730              	.LVL139:
 1731              	.L138:
2132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2RSTR &= ~RCC_AHB2Periph;
 1732              		.loc 1 2135 5 is_stmt 1 view .LVU460
 1733              		.loc 1 2135 19 is_stmt 0 view .LVU461
 1734 000c 024A     		ldr	r2, .L140
 1735 000e 5369     		ldr	r3, [r2, #20]
 1736 0010 23EA0000 		bic	r0, r3, r0
 1737              	.LVL140:
 1738              		.loc 1 2135 19 view .LVU462
 1739 0014 5061     		str	r0, [r2, #20]
2136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1740              		.loc 1 2137 1 view .LVU463
 1741 0016 7047     		bx	lr
 1742              	.L141:
 1743              		.align	2
 1744              	.L140:
 1745 0018 00380240 		.word	1073887232
 1746              		.cfi_endproc
 1747              	.LFE161:
 1749              		.section	.text.RCC_AHB3PeriphResetCmd,"ax",%progbits
 1750              		.align	1
 1751              		.global	RCC_AHB3PeriphResetCmd
 1752              		.syntax unified
 1753              		.thumb
 1754              		.thumb_func
 1756              	RCC_AHB3PeriphResetCmd:
 1757              	.LVL141:
 1758              	.LFB162:
2138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
2140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases AHB3 peripheral reset.
2142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB3Periph: specifies the AHB3 peripheral to reset.
2143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F429x/439x devices)
2145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F446xx/STM32F469_479xx devices)
2146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
ARM GAS  /tmp/ccKlA27f.s 			page 69


2149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphResetCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1759              		.loc 1 2151 1 is_stmt 1 view -0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 0, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
2152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 1764              		.loc 1 2153 3 view .LVU465
2154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1765              		.loc 1 2154 3 view .LVU466
2155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1766              		.loc 1 2156 3 view .LVU467
 1767              		.loc 1 2156 6 is_stmt 0 view .LVU468
 1768 0000 21B1     		cbz	r1, .L143
2157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR |= RCC_AHB3Periph;
 1769              		.loc 1 2158 5 is_stmt 1 view .LVU469
 1770              		.loc 1 2158 19 is_stmt 0 view .LVU470
 1771 0002 054A     		ldr	r2, .L145
 1772 0004 9369     		ldr	r3, [r2, #24]
 1773 0006 1843     		orrs	r0, r0, r3
 1774              	.LVL142:
 1775              		.loc 1 2158 19 view .LVU471
 1776 0008 9061     		str	r0, [r2, #24]
 1777 000a 7047     		bx	lr
 1778              	.LVL143:
 1779              	.L143:
2159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3RSTR &= ~RCC_AHB3Periph;
 1780              		.loc 1 2162 5 is_stmt 1 view .LVU472
 1781              		.loc 1 2162 19 is_stmt 0 view .LVU473
 1782 000c 024A     		ldr	r2, .L145
 1783 000e 9369     		ldr	r3, [r2, #24]
 1784 0010 23EA0000 		bic	r0, r3, r0
 1785              	.LVL144:
 1786              		.loc 1 2162 19 view .LVU474
 1787 0014 9061     		str	r0, [r2, #24]
2163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1788              		.loc 1 2164 1 view .LVU475
 1789 0016 7047     		bx	lr
 1790              	.L146:
 1791              		.align	2
 1792              	.L145:
 1793 0018 00380240 		.word	1073887232
 1794              		.cfi_endproc
 1795              	.LFE162:
 1797              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1798              		.align	1
 1799              		.global	RCC_APB1PeriphResetCmd
 1800              		.syntax unified
ARM GAS  /tmp/ccKlA27f.s 			page 70


 1801              		.thumb
 1802              		.thumb_func
 1804              	RCC_APB1PeriphResetCmd:
 1805              	.LVL145:
 1806              	.LFB163:
2165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
2166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
2169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
2170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
2175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx devices) 
2181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
2185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
2193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock(STM32F446xx devices)
2196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock  
2200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1807              		.loc 1 2205 1 is_stmt 1 view -0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 0
 1810              		@ frame_needed = 0, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
2206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 1812              		.loc 1 2207 3 view .LVU477
2208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1813              		.loc 1 2208 3 view .LVU478
2209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
ARM GAS  /tmp/ccKlA27f.s 			page 71


 1814              		.loc 1 2209 3 view .LVU479
 1815              		.loc 1 2209 6 is_stmt 0 view .LVU480
 1816 0000 21B1     		cbz	r1, .L148
2210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1817              		.loc 1 2211 5 is_stmt 1 view .LVU481
 1818              		.loc 1 2211 19 is_stmt 0 view .LVU482
 1819 0002 054A     		ldr	r2, .L150
 1820 0004 136A     		ldr	r3, [r2, #32]
 1821 0006 1843     		orrs	r0, r0, r3
 1822              	.LVL146:
 1823              		.loc 1 2211 19 view .LVU483
 1824 0008 1062     		str	r0, [r2, #32]
 1825 000a 7047     		bx	lr
 1826              	.LVL147:
 1827              	.L148:
2212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 1828              		.loc 1 2215 5 is_stmt 1 view .LVU484
 1829              		.loc 1 2215 19 is_stmt 0 view .LVU485
 1830 000c 024A     		ldr	r2, .L150
 1831 000e 136A     		ldr	r3, [r2, #32]
 1832 0010 23EA0000 		bic	r0, r3, r0
 1833              	.LVL148:
 1834              		.loc 1 2215 19 view .LVU486
 1835 0014 1062     		str	r0, [r2, #32]
2216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1836              		.loc 1 2217 1 view .LVU487
 1837 0016 7047     		bx	lr
 1838              	.L151:
 1839              		.align	2
 1840              	.L150:
 1841 0018 00380240 		.word	1073887232
 1842              		.cfi_endproc
 1843              	.LFE163:
 1845              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1846              		.align	1
 1847              		.global	RCC_APB2PeriphResetCmd
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1852              	RCC_APB2PeriphResetCmd:
 1853              	.LVL149:
 1854              	.LFB164:
2218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
2221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
2222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
ARM GAS  /tmp/ccKlA27f.s 			page 72


2228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock  
2233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
2239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx devices)
2240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices) 
2241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices) 
2243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
2244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1855              		.loc 1 2248 1 is_stmt 1 view -0
 1856              		.cfi_startproc
 1857              		@ args = 0, pretend = 0, frame = 0
 1858              		@ frame_needed = 0, uses_anonymous_args = 0
 1859              		@ link register save eliminated.
2249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_RESET_PERIPH(RCC_APB2Periph));
 1860              		.loc 1 2250 3 view .LVU489
2251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1861              		.loc 1 2251 3 view .LVU490
2252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1862              		.loc 1 2252 3 view .LVU491
 1863              		.loc 1 2252 6 is_stmt 0 view .LVU492
 1864 0000 21B1     		cbz	r1, .L153
2253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1865              		.loc 1 2254 5 is_stmt 1 view .LVU493
 1866              		.loc 1 2254 19 is_stmt 0 view .LVU494
 1867 0002 054A     		ldr	r2, .L155
 1868 0004 536A     		ldr	r3, [r2, #36]
 1869 0006 1843     		orrs	r0, r0, r3
 1870              	.LVL150:
 1871              		.loc 1 2254 19 view .LVU495
 1872 0008 5062     		str	r0, [r2, #36]
 1873 000a 7047     		bx	lr
 1874              	.LVL151:
 1875              	.L153:
2255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 1876              		.loc 1 2258 5 is_stmt 1 view .LVU496
 1877              		.loc 1 2258 19 is_stmt 0 view .LVU497
 1878 000c 024A     		ldr	r2, .L155
 1879 000e 536A     		ldr	r3, [r2, #36]
 1880 0010 23EA0000 		bic	r0, r3, r0
ARM GAS  /tmp/ccKlA27f.s 			page 73


 1881              	.LVL152:
 1882              		.loc 1 2258 19 view .LVU498
 1883 0014 5062     		str	r0, [r2, #36]
2259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1884              		.loc 1 2260 1 view .LVU499
 1885 0016 7047     		bx	lr
 1886              	.L156:
 1887              		.align	2
 1888              	.L155:
 1889 0018 00380240 		.word	1073887232
 1890              		.cfi_endproc
 1891              	.LFE164:
 1893              		.section	.text.RCC_AHB1PeriphClockLPModeCmd,"ax",%progbits
 1894              		.align	1
 1895              		.global	RCC_AHB1PeriphClockLPModeCmd
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1900              	RCC_AHB1PeriphClockLPModeCmd:
 1901              	.LVL153:
 1902              	.LFB165:
2261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 peripheral clock during Low Power (Sleep) mode.
2264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB1 peripheral to gates its clock.
2269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOA:       GPIOA clock
2271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOB:       GPIOB clock 
2272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOC:       GPIOC clock
2273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOD:       GPIOD clock
2274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOE:       GPIOE clock
2275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOF:       GPIOF clock
2276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOG:       GPIOG clock
2278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOI:       GPIOI clock
2279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOJ:       GPIOJ clock (STM32F42xxx/43xxx devices) 
2280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_GPIOK:       GPIOK clock (STM32F42xxx/43xxx devices)   
2281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_CRC:         CRC clock
2282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_BKPSRAM:     BKPSRAM interface clock
2283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA1:        DMA1 clock
2284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2:        DMA2 clock
2285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_DMA2D:       DMA2D clock (STM32F429xx/439xx devices) 
2286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC:     Ethernet MAC clock
2287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Tx:  Ethernet Transmission clock
2288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_Rx:  Ethernet Reception clock
2289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_ETH_MAC_PTP: Ethernet PTP clock
2290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS:      USB OTG HS clock
2291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1Periph_OTG_HS_ULPI: USB OTG HS ULPI clock
2292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccKlA27f.s 			page 74


2296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1PeriphClockLPModeCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
2297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1903              		.loc 1 2297 1 is_stmt 1 view -0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 0, uses_anonymous_args = 0
 1907              		@ link register save eliminated.
2298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_LPMODE_PERIPH(RCC_AHB1Periph));
 1908              		.loc 1 2299 3 view .LVU501
2300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1909              		.loc 1 2300 3 view .LVU502
2301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1910              		.loc 1 2301 3 view .LVU503
 1911              		.loc 1 2301 6 is_stmt 0 view .LVU504
 1912 0000 21B1     		cbz	r1, .L158
2302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR |= RCC_AHB1Periph;
 1913              		.loc 1 2303 5 is_stmt 1 view .LVU505
 1914              		.loc 1 2303 20 is_stmt 0 view .LVU506
 1915 0002 054A     		ldr	r2, .L160
 1916 0004 136D     		ldr	r3, [r2, #80]
 1917 0006 1843     		orrs	r0, r0, r3
 1918              	.LVL154:
 1919              		.loc 1 2303 20 view .LVU507
 1920 0008 1065     		str	r0, [r2, #80]
 1921 000a 7047     		bx	lr
 1922              	.LVL155:
 1923              	.L158:
2304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB1LPENR &= ~RCC_AHB1Periph;
 1924              		.loc 1 2307 5 is_stmt 1 view .LVU508
 1925              		.loc 1 2307 20 is_stmt 0 view .LVU509
 1926 000c 024A     		ldr	r2, .L160
 1927 000e 136D     		ldr	r3, [r2, #80]
 1928 0010 23EA0000 		bic	r0, r3, r0
 1929              	.LVL156:
 1930              		.loc 1 2307 20 view .LVU510
 1931 0014 1065     		str	r0, [r2, #80]
2308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1932              		.loc 1 2309 1 view .LVU511
 1933 0016 7047     		bx	lr
 1934              	.L161:
 1935              		.align	2
 1936              	.L160:
 1937 0018 00380240 		.word	1073887232
 1938              		.cfi_endproc
 1939              	.LFE165:
 1941              		.section	.text.RCC_AHB2PeriphClockLPModeCmd,"ax",%progbits
 1942              		.align	1
 1943              		.global	RCC_AHB2PeriphClockLPModeCmd
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
ARM GAS  /tmp/ccKlA27f.s 			page 75


 1948              	RCC_AHB2PeriphClockLPModeCmd:
 1949              	.LVL157:
 1950              	.LFB166:
2310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB2 peripheral clock during Low Power (Sleep) mode.
2313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           power consumption.
2315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB2 peripheral to gates its clock.
2318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_DCMI:   DCMI clock
2320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_CRYP:   CRYP clock
2321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_HASH:   HASH clock
2322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_RNG:    RNG clock
2323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB2Periph_OTG_FS: USB OTG FS clock  
2324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB2PeriphClockLPModeCmd(uint32_t RCC_AHB2Periph, FunctionalState NewState)
2329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1951              		.loc 1 2329 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955              		@ link register save eliminated.
2330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB2_PERIPH(RCC_AHB2Periph));
 1956              		.loc 1 2331 3 view .LVU513
2332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1957              		.loc 1 2332 3 view .LVU514
2333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 1958              		.loc 1 2333 3 view .LVU515
 1959              		.loc 1 2333 6 is_stmt 0 view .LVU516
 1960 0000 21B1     		cbz	r1, .L163
2334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR |= RCC_AHB2Periph;
 1961              		.loc 1 2335 5 is_stmt 1 view .LVU517
 1962              		.loc 1 2335 20 is_stmt 0 view .LVU518
 1963 0002 054A     		ldr	r2, .L165
 1964 0004 536D     		ldr	r3, [r2, #84]
 1965 0006 1843     		orrs	r0, r0, r3
 1966              	.LVL158:
 1967              		.loc 1 2335 20 view .LVU519
 1968 0008 5065     		str	r0, [r2, #84]
 1969 000a 7047     		bx	lr
 1970              	.LVL159:
 1971              	.L163:
2336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB2LPENR &= ~RCC_AHB2Periph;
 1972              		.loc 1 2339 5 is_stmt 1 view .LVU520
 1973              		.loc 1 2339 20 is_stmt 0 view .LVU521
 1974 000c 024A     		ldr	r2, .L165
ARM GAS  /tmp/ccKlA27f.s 			page 76


 1975 000e 536D     		ldr	r3, [r2, #84]
 1976 0010 23EA0000 		bic	r0, r3, r0
 1977              	.LVL160:
 1978              		.loc 1 2339 20 view .LVU522
 1979 0014 5065     		str	r0, [r2, #84]
2340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 1980              		.loc 1 2341 1 view .LVU523
 1981 0016 7047     		bx	lr
 1982              	.L166:
 1983              		.align	2
 1984              	.L165:
 1985 0018 00380240 		.word	1073887232
 1986              		.cfi_endproc
 1987              	.LFE166:
 1989              		.section	.text.RCC_AHB3PeriphClockLPModeCmd,"ax",%progbits
 1990              		.align	1
 1991              		.global	RCC_AHB3PeriphClockLPModeCmd
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1996              	RCC_AHB3PeriphClockLPModeCmd:
 1997              	.LVL161:
 1998              	.LFB167:
2342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F40_41xxx) || defined(STM32F427_437xx) || defined(STM32F429_439xx) || defined(STM3
2344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB3 peripheral clock during Low Power (Sleep) mode.
2346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB3 peripheral to gates its clock.
2351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter must be: 
2352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_FSMC or RCC_AHB3Periph_FMC (STM32F429x/439x devices)
2353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *           - RCC_AHB3Periph_QSPI (STM32F446xx/STM32F469_479xx devices) 
2354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB3PeriphClockLPModeCmd(uint32_t RCC_AHB3Periph, FunctionalState NewState)
2359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 1999              		.loc 1 2359 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
 2003              		@ link register save eliminated.
2360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB3_PERIPH(RCC_AHB3Periph));
 2004              		.loc 1 2361 3 view .LVU525
2362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2005              		.loc 1 2362 3 view .LVU526
2363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2006              		.loc 1 2363 3 view .LVU527
 2007              		.loc 1 2363 6 is_stmt 0 view .LVU528
 2008 0000 21B1     		cbz	r1, .L168
2364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
ARM GAS  /tmp/ccKlA27f.s 			page 77


2365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR |= RCC_AHB3Periph;
 2009              		.loc 1 2365 5 is_stmt 1 view .LVU529
 2010              		.loc 1 2365 20 is_stmt 0 view .LVU530
 2011 0002 054A     		ldr	r2, .L170
 2012 0004 936D     		ldr	r3, [r2, #88]
 2013 0006 1843     		orrs	r0, r0, r3
 2014              	.LVL162:
 2015              		.loc 1 2365 20 view .LVU531
 2016 0008 9065     		str	r0, [r2, #88]
 2017 000a 7047     		bx	lr
 2018              	.LVL163:
 2019              	.L168:
2366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->AHB3LPENR &= ~RCC_AHB3Periph;
 2020              		.loc 1 2369 5 is_stmt 1 view .LVU532
 2021              		.loc 1 2369 20 is_stmt 0 view .LVU533
 2022 000c 024A     		ldr	r2, .L170
 2023 000e 936D     		ldr	r3, [r2, #88]
 2024 0010 23EA0000 		bic	r0, r3, r0
 2025              	.LVL164:
 2026              		.loc 1 2369 20 view .LVU534
 2027 0014 9065     		str	r0, [r2, #88]
2370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2028              		.loc 1 2371 1 view .LVU535
 2029 0016 7047     		bx	lr
 2030              	.L171:
 2031              		.align	2
 2032              	.L170:
 2033 0018 00380240 		.word	1073887232
 2034              		.cfi_endproc
 2035              	.LFE167:
 2037              		.section	.text.RCC_APB1PeriphClockLPModeCmd,"ax",%progbits
 2038              		.align	1
 2039              		.global	RCC_APB1PeriphClockLPModeCmd
 2040              		.syntax unified
 2041              		.thumb
 2042              		.thumb_func
 2044              	RCC_APB1PeriphClockLPModeCmd:
 2045              	.LVL165:
 2046              	.LFB168:
2372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F40_41xxx || STM32F427_437xx || STM32F429_439xx || STM32F446xx || STM32F469_479xx */
2373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB1 peripheral clock during Low Power (Sleep) mode.
2376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
2381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM2:   TIM2 clock
2383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM3:   TIM3 clock
2384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM4:   TIM4 clock
2385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM5:   TIM5 clock
ARM GAS  /tmp/ccKlA27f.s 			page 78


2386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM6:   TIM6 clock
2387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM7:   TIM7 clock
2388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM12:  TIM12 clock
2389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM13:  TIM13 clock
2390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_TIM14:  TIM14 clock
2391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_LPTIM1: LPTIM1 clock (STM32F410xx devices) 
2392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_WWDG:   WWDG clock
2393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI2:   SPI2 clock
2394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPI3:   SPI3 clock
2395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_SPDIF:   SPDIF RX clock (STM32F446xx devices) 
2396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART2: USART2 clock
2397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_USART3: USART3 clock
2398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART4:  UART4 clock
2399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART5:  UART5 clock
2400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C1:   I2C1 clock
2401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C2:   I2C2 clock
2402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_I2C3:   I2C3 clock
2403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_FMPI2C1:   FMPI2C1 clock
2404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN1:   CAN1 clock
2405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CAN2:   CAN2 clock
2406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_CEC:    CEC clock (STM32F446xx devices)
2407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_PWR:    PWR clock
2408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_DAC:    DAC clock
2409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART7:  UART7 clock
2410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB1Periph_UART8:  UART8 clock
2411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB1PeriphClockLPModeCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
2416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2047              		.loc 1 2416 1 is_stmt 1 view -0
 2048              		.cfi_startproc
 2049              		@ args = 0, pretend = 0, frame = 0
 2050              		@ frame_needed = 0, uses_anonymous_args = 0
 2051              		@ link register save eliminated.
2417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 2052              		.loc 1 2418 3 view .LVU537
2419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2053              		.loc 1 2419 3 view .LVU538
2420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2054              		.loc 1 2420 3 view .LVU539
 2055              		.loc 1 2420 6 is_stmt 0 view .LVU540
 2056 0000 21B1     		cbz	r1, .L173
2421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR |= RCC_APB1Periph;
 2057              		.loc 1 2422 5 is_stmt 1 view .LVU541
 2058              		.loc 1 2422 20 is_stmt 0 view .LVU542
 2059 0002 054A     		ldr	r2, .L175
 2060 0004 136E     		ldr	r3, [r2, #96]
 2061 0006 1843     		orrs	r0, r0, r3
 2062              	.LVL166:
 2063              		.loc 1 2422 20 view .LVU543
 2064 0008 1066     		str	r0, [r2, #96]
 2065 000a 7047     		bx	lr
 2066              	.LVL167:
ARM GAS  /tmp/ccKlA27f.s 			page 79


 2067              	.L173:
2423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB1LPENR &= ~RCC_APB1Periph;
 2068              		.loc 1 2426 5 is_stmt 1 view .LVU544
 2069              		.loc 1 2426 20 is_stmt 0 view .LVU545
 2070 000c 024A     		ldr	r2, .L175
 2071 000e 136E     		ldr	r3, [r2, #96]
 2072 0010 23EA0000 		bic	r0, r3, r0
 2073              	.LVL168:
 2074              		.loc 1 2426 20 view .LVU546
 2075 0014 1066     		str	r0, [r2, #96]
2427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2076              		.loc 1 2428 1 view .LVU547
 2077 0016 7047     		bx	lr
 2078              	.L176:
 2079              		.align	2
 2080              	.L175:
 2081 0018 00380240 		.word	1073887232
 2082              		.cfi_endproc
 2083              	.LFE168:
 2085              		.section	.text.RCC_APB2PeriphClockLPModeCmd,"ax",%progbits
 2086              		.align	1
 2087              		.global	RCC_APB2PeriphClockLPModeCmd
 2088              		.syntax unified
 2089              		.thumb
 2090              		.thumb_func
 2092              	RCC_APB2PeriphClockLPModeCmd:
 2093              	.LVL169:
 2094              	.LFB169:
2429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the APB2 peripheral clock during Low Power (Sleep) mode.
2432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   Peripheral clock gating in SLEEP mode can be used to further reduce
2433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         power consumption.
2434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   After wakeup from SLEEP mode, the peripheral clock is enabled again.
2435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note   By default, all peripheral clocks are enabled during SLEEP mode.
2436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
2437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM1:   TIM1 clock
2439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM8:   TIM8 clock
2440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART1: USART1 clock
2441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_USART6: USART6 clock
2442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC1:   ADC1 clock
2443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC2:   ADC2 clock
2444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_ADC3:   ADC3 clock
2445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SDIO:   SDIO clock
2446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI1:   SPI1 clock
2447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI4:   SPI4 clock
2448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SYSCFG: SYSCFG clock
2449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM9:   TIM9 clock
2450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM10:  TIM10 clock
2451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_TIM11:  TIM11 clock
2452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI5:   SPI5 clock
2453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SPI6:   SPI6 clock
ARM GAS  /tmp/ccKlA27f.s 			page 80


2454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI1:   SAI1 clock (STM32F42xxx/43xxx/446xx/469xx/479xx devices)
2455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_SAI2:   SAI2 clock (STM32F446xx devices)
2456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_LTDC:   LTDC clock (STM32F429xx/439xx devices)
2457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_APB2Periph_DSI:    DSI clock (STM32F469_479xx devices) 
2458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_APB2PeriphClockLPModeCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
2463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2095              		.loc 1 2463 1 is_stmt 1 view -0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 0, uses_anonymous_args = 0
 2099              		@ link register save eliminated.
2464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 2100              		.loc 1 2465 3 view .LVU549
2466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2101              		.loc 1 2466 3 view .LVU550
2467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2102              		.loc 1 2467 3 view .LVU551
 2103              		.loc 1 2467 6 is_stmt 0 view .LVU552
 2104 0000 21B1     		cbz	r1, .L178
2468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR |= RCC_APB2Periph;
 2105              		.loc 1 2469 5 is_stmt 1 view .LVU553
 2106              		.loc 1 2469 20 is_stmt 0 view .LVU554
 2107 0002 054A     		ldr	r2, .L180
 2108 0004 536E     		ldr	r3, [r2, #100]
 2109 0006 1843     		orrs	r0, r0, r3
 2110              	.LVL170:
 2111              		.loc 1 2469 20 view .LVU555
 2112 0008 5066     		str	r0, [r2, #100]
 2113 000a 7047     		bx	lr
 2114              	.LVL171:
 2115              	.L178:
2470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->APB2LPENR &= ~RCC_APB2Periph;
 2116              		.loc 1 2473 5 is_stmt 1 view .LVU556
 2117              		.loc 1 2473 20 is_stmt 0 view .LVU557
 2118 000c 024A     		ldr	r2, .L180
 2119 000e 536E     		ldr	r3, [r2, #100]
 2120 0010 23EA0000 		bic	r0, r3, r0
 2121              	.LVL172:
 2122              		.loc 1 2473 20 view .LVU558
 2123 0014 5066     		str	r0, [r2, #100]
2474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2124              		.loc 1 2475 1 view .LVU559
 2125 0016 7047     		bx	lr
 2126              	.L181:
 2127              		.align	2
 2128              	.L180:
 2129 0018 00380240 		.word	1073887232
ARM GAS  /tmp/ccKlA27f.s 			page 81


 2130              		.cfi_endproc
 2131              	.LFE169:
 2133              		.section	.text.RCC_LSEModeConfig,"ax",%progbits
 2134              		.align	1
 2135              		.global	RCC_LSEModeConfig
 2136              		.syntax unified
 2137              		.thumb
 2138              		.thumb_func
 2140              	RCC_LSEModeConfig:
 2141              	.LVL173:
 2142              	.LFB170:
2476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the External Low Speed oscillator mode (LSE mode).
2479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This mode is only available for STM32F410xx/STM32F411xx/STM32F446xx/STM32F469_479xx devic
2480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  Mode: specifies the LSE mode.
2481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_LOWPOWER_MODE:  LSE oscillator in low power mode.
2483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LSE_HIGHDRIVE_MODE: LSE oscillator in High Drive mode.
2484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LSEModeConfig(uint8_t RCC_Mode)
2487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2143              		.loc 1 2487 1 is_stmt 1 view -0
 2144              		.cfi_startproc
 2145              		@ args = 0, pretend = 0, frame = 0
 2146              		@ frame_needed = 0, uses_anonymous_args = 0
 2147              		@ link register save eliminated.
2488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LSE_MODE(RCC_Mode));
 2148              		.loc 1 2489 3 view .LVU561
2490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_Mode == RCC_LSE_HIGHDRIVE_MODE)
 2149              		.loc 1 2491 3 view .LVU562
 2150              		.loc 1 2491 5 is_stmt 0 view .LVU563
 2151 0000 0128     		cmp	r0, #1
 2152 0002 05D0     		beq	.L185
2492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
2494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEMOD);
 2153              		.loc 1 2497 5 is_stmt 1 view .LVU564
 2154 0004 054A     		ldr	r2, .L186
 2155 0006 136F     		ldr	r3, [r2, #112]
 2156 0008 23F00803 		bic	r3, r3, #8
 2157 000c 1367     		str	r3, [r2, #112]
2498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2158              		.loc 1 2499 1 is_stmt 0 view .LVU565
 2159 000e 7047     		bx	lr
 2160              	.L185:
2493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2161              		.loc 1 2493 5 is_stmt 1 view .LVU566
 2162 0010 024A     		ldr	r2, .L186
 2163 0012 136F     		ldr	r3, [r2, #112]
ARM GAS  /tmp/ccKlA27f.s 			page 82


 2164 0014 43F00803 		orr	r3, r3, #8
 2165 0018 1367     		str	r3, [r2, #112]
 2166 001a 7047     		bx	lr
 2167              	.L187:
 2168              		.align	2
 2169              	.L186:
 2170 001c 00380240 		.word	1073887232
 2171              		.cfi_endproc
 2172              	.LFE170:
 2174              		.section	.text.RCC_ITConfig,"ax",%progbits
 2175              		.align	1
 2176              		.global	RCC_ITConfig
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2181              	RCC_ITConfig:
 2182              	.LVL174:
 2183              	.LFB171:
2500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
2502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the LPTIM1 clock Source.
2504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F410xx devices.
2505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the LPTIM1 clock Source.
2506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_PCLK: LPTIM1 clock from APB1 selected.
2508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_HSI:  LPTIM1 clock from HSI selected.
2509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSI:  LPTIM1 clock from LSI selected.
2510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_LPTIM1CLKSOURCE_LSE:  LPTIM1 clock from LSE selected.
2511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_LPTIM1ClockSourceConfig(uint32_t RCC_ClockSource)
2514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_LPTIM1_CLOCKSOURCE(RCC_ClockSource));
2517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear LPTIM1 clock source selection source bits */
2519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_LPTIM1SEL;
2520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new LPTIM1 clock source */
2521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
2524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)
2526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the DSI clock Source.
2528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx devices.
2529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the DSI clock Source.
2530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PHY: DSI-PHY used as DSI byte lane clock source (usual case).
2532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_DSICLKSource_PLLR: PLL_R used as DSI byte lane clock source, used in case D
2533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_DSIClockSourceConfig(uint8_t RCC_ClockSource)
2536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_DSI_CLOCKSOURCE(RCC_ClockSource));
ARM GAS  /tmp/ccKlA27f.s 			page 83


2539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_DSICLKSource_PLLR)
2541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_DSISEL);
2547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /*  STM32F469_479xx */
2550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx) || defined(STM32F469_479xx)
2552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the 48MHz clock Source.
2554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx/STM32F469_479xx devices.
2555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the 48MHz clock Source.
2556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLL: 48MHz from PLL selected.
2558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_48MHZCLKSource_PLLSAI: 48MHz from PLLSAI selected.
2559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_48MHzClockSourceConfig(uint8_t RCC_ClockSource)
2562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_48MHZ_CLOCKSOURCE(RCC_ClockSource));
2565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx) 
2566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_CK48MSEL);
2573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F446xx)
2575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_48MHZCLKSource_PLLSAI)
2576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CK48MSEL);
2582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #else
2584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */  
2585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SDIO clock Source.
2589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F469_479xx/STM32F446xx devices.
2590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SDIO clock Source.
2591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_48MHZ: 48MHz clock selected.
2593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SDIOCLKSource_SYSCLK: system clock selected.
2594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccKlA27f.s 			page 84


2596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SDIOClockSourceConfig(uint8_t RCC_ClockSource)
2597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SDIO_CLOCKSOURCE(RCC_ClockSource));
2600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F469_479xx)   
2601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR, RCC_DCKCFGR_SDIOSEL);
2608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #elif defined(STM32F446xx)
2610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SDIOCLKSource_SYSCLK)
2611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SDIOSEL);
2617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #else
2619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F469_479xx */ 
2620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx || STM32F469_479xx */
2622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F446xx)
2624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the AHB1 clock gating for the specified IPs.
2626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_AHB1ClockGating: specifies the AHB1 clock gating.
2628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB1Bridge: AHB1 to APB1 clock
2630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_APB2Bridge: AHB1 to APB2 clock 
2631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_CM4DBG: Cortex M4 ETM clock
2632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SPARE: Spare clock
2633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_SRAM: SRAM controller clock
2634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_FLITF: Flash interface clock
2635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_AHB1ClockGating_RCC: RCC clock
2636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
2637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_AHB1ClockGatingCmd(uint32_t RCC_AHB1ClockGating, FunctionalState NewState)
2641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_AHB1_CLOCKGATING(RCC_AHB1ClockGating));
2644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
2647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR &= ~RCC_AHB1ClockGating;
2649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     RCC->CKGATENR |= RCC_AHB1ClockGating;
ARM GAS  /tmp/ccKlA27f.s 			page 85


2653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the SPDIFRX clock Source.
2658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the SPDIFRX clock Source.
2660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLR: SPDIFRX clock from PLL_R selected.
2662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_SPDIFRXCLKSource_PLLI2SP: SPDIFRX clock from PLLI2S_P selected.
2663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_SPDIFRXClockSourceConfig(uint8_t RCC_ClockSource)
2666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_SPDIFRX_CLOCKSOURCE(RCC_ClockSource));
2669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_SPDIFRXCLKSource_PLLI2SP)
2671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_SPDIFRXSEL);
2677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the CEC clock Source.
2682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the CEC clock Source.
2684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_HSIDiv488: CEC clock from HSI/488 selected.
2686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_CECCLKSource_LSE: CEC clock from LSE selected.
2687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_CECClockSourceConfig(uint8_t RCC_ClockSource)
2690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CEC_CLOCKSOURCE(RCC_ClockSource));
2693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   
2694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if(RCC_ClockSource == RCC_CECCLKSource_LSE)
2695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     SET_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     CLEAR_BIT(RCC->DCKCFGR2, RCC_DCKCFGR2_CECSEL);
2701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F446xx */
2704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx) || defined(STM32F446xx)
2706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief Configures the FMPI2C1 clock Source.
2708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @note This feature is only available for STM32F446xx devices.
2709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param RCC_ClockSource: specifies the FMPI2C1 clock Source.
ARM GAS  /tmp/ccKlA27f.s 			page 86


2710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_APB1: FMPI2C1 clock from APB1 selected.
2712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_SYSCLK: FMPI2C1 clock from Sytem clock selected.
2713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FMPI2C1CLKSource_HSI: FMPI2C1 clock from HSI selected.
2714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_FMPI2C1ClockSourceConfig(uint32_t RCC_ClockSource)
2717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FMPI2C1_CLOCKSOURCE(RCC_ClockSource));
2720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Clear FMPI2C1 clock source selection source bits */
2722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 &= ~RCC_DCKCFGR2_FMPI2C1SEL;
2723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set new FMPI2C1 clock source */
2724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->DCKCFGR2 |= RCC_ClockSource;
2725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx || STM32F446xx */
2727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @}
2729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #if defined(STM32F410xx)
2732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO1.
2734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO1.
2735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO1Cmd(FunctionalState NewState)
2739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO1EN_BB = (uint32_t)NewState;
2744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the MCO2.
2748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the MCO2.
2749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_MCO2Cmd(FunctionalState NewState)
2753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
2754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint32_t *) RCC_CFGR_MCO2EN_BB = (uint32_t)NewState;
2758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
2759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** #endif /* STM32F410xx */
2760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
2762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
2763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  *
2764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @verbatim   
2765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================
2766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****                 ##### Interrupts and flags management functions #####
ARM GAS  /tmp/ccKlA27f.s 			page 87


2767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****  ===============================================================================  
2768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** @endverbatim
2770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @{
2771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
2775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
2776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
2778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
2779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
2780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
2781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
2782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
2783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
2784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
2785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be: ENABLE or DISABLE.
2786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
2789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2184              		.loc 1 2789 1 view -0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188              		@ link register save eliminated.
2790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 2189              		.loc 1 2791 3 view .LVU568
2792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2190              		.loc 1 2792 3 view .LVU569
2793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (NewState != DISABLE)
 2191              		.loc 1 2793 3 view .LVU570
 2192              		.loc 1 2793 6 is_stmt 0 view .LVU571
 2193 0000 21B1     		cbz	r1, .L189
2794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to enable the selected interrupts */
2796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 2194              		.loc 1 2796 5 is_stmt 1 view .LVU572
 2195              		.loc 1 2796 41 is_stmt 0 view .LVU573
 2196 0002 054A     		ldr	r2, .L191
 2197 0004 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 2198 0006 1843     		orrs	r0, r0, r3
 2199              	.LVL175:
 2200              		.loc 1 2796 41 view .LVU574
 2201 0008 5073     		strb	r0, [r2, #13]
 2202 000a 7047     		bx	lr
 2203              	.LVL176:
 2204              	.L189:
2797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     /* Perform Byte access to RCC_CIR[14:8] bits to disable the selected interrupts */
2801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 2205              		.loc 1 2801 5 is_stmt 1 view .LVU575
ARM GAS  /tmp/ccKlA27f.s 			page 88


 2206              		.loc 1 2801 41 is_stmt 0 view .LVU576
 2207 000c 024A     		ldr	r2, .L191
 2208 000e 537B     		ldrb	r3, [r2, #13]	@ zero_extendqisi2
 2209 0010 23EA0000 		bic	r0, r3, r0
 2210              	.LVL177:
 2211              		.loc 1 2801 41 view .LVU577
 2212 0014 5073     		strb	r0, [r2, #13]
2802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2213              		.loc 1 2803 1 view .LVU578
 2214 0016 7047     		bx	lr
 2215              	.L192:
 2216              		.align	2
 2217              	.L191:
 2218 0018 00380240 		.word	1073887232
 2219              		.cfi_endproc
 2220              	.LFE171:
 2222              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 2223              		.align	1
 2224              		.global	RCC_GetFlagStatus
 2225              		.syntax unified
 2226              		.thumb
 2227              		.thumb_func
 2229              	RCC_GetFlagStatus:
 2230              	.LVL178:
 2231              	.LFB172:
2804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
2807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
2808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
2810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
2811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLRDY: main PLL clock ready
2812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLI2SRDY: PLLI2S clock ready
2813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PLLSAIRDY: PLLSAI clock ready (only for STM32F42xxx/43xxx/446xx/469xx/
2814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
2815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
2816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_BORRST: POR/PDR or BOR reset
2817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PINRST: Pin reset
2818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_PORRST: POR/PDR reset
2819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_SFTRST: Software reset
2820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
2821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_WWDGRST: Window Watchdog reset
2822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_FLAG_LPWRRST: Low Power reset
2823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
2824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
2826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2232              		.loc 1 2826 1 is_stmt 1 view -0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              		@ link register save eliminated.
2827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t tmp = 0;
 2237              		.loc 1 2827 3 view .LVU580
2828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   uint32_t statusreg = 0;
ARM GAS  /tmp/ccKlA27f.s 			page 89


 2238              		.loc 1 2828 3 view .LVU581
2829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   FlagStatus bitstatus = RESET;
 2239              		.loc 1 2829 3 view .LVU582
2830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
 2240              		.loc 1 2832 3 view .LVU583
2833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get the RCC register index */
2835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 2241              		.loc 1 2835 3 view .LVU584
 2242              		.loc 1 2835 18 is_stmt 0 view .LVU585
 2243 0000 4309     		lsrs	r3, r0, #5
 2244              	.LVL179:
2836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 2245              		.loc 1 2836 3 is_stmt 1 view .LVU586
 2246              		.loc 1 2836 6 is_stmt 0 view .LVU587
 2247 0002 012B     		cmp	r3, #1
 2248 0004 0CD0     		beq	.L199
2837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CR;
2839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 2249              		.loc 1 2840 8 is_stmt 1 view .LVU588
 2250              		.loc 1 2840 11 is_stmt 0 view .LVU589
 2251 0006 022B     		cmp	r3, #2
 2252 0008 0DD0     		beq	.L200
2841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->BDCR;
2843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else                       /* The flag to check is in CSR register */
2845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     statusreg = RCC->CSR;
 2253              		.loc 1 2846 5 is_stmt 1 view .LVU590
 2254              		.loc 1 2846 15 is_stmt 0 view .LVU591
 2255 000a 094B     		ldr	r3, .L201
 2256              	.LVL180:
 2257              		.loc 1 2846 15 view .LVU592
 2258 000c 5B6F     		ldr	r3, [r3, #116]
 2259              	.LVL181:
 2260              	.L195:
2847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Get the flag position */
2850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 2261              		.loc 1 2850 3 is_stmt 1 view .LVU593
 2262              		.loc 1 2850 7 is_stmt 0 view .LVU594
 2263 000e 00F01F00 		and	r0, r0, #31
 2264              	.LVL182:
2851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 2265              		.loc 1 2851 3 is_stmt 1 view .LVU595
 2266              		.loc 1 2851 42 is_stmt 0 view .LVU596
 2267 0012 23FA00F0 		lsr	r0, r3, r0
 2268              	.LVL183:
 2269              		.loc 1 2851 6 view .LVU597
 2270 0016 10F0010F 		tst	r0, #1
 2271 001a 07D0     		beq	.L198
ARM GAS  /tmp/ccKlA27f.s 			page 90


2852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2272              		.loc 1 2853 15 view .LVU598
 2273 001c 0120     		movs	r0, #1
 2274 001e 7047     		bx	lr
 2275              	.LVL184:
 2276              	.L199:
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2277              		.loc 1 2838 5 is_stmt 1 view .LVU599
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2278              		.loc 1 2838 15 is_stmt 0 view .LVU600
 2279 0020 034B     		ldr	r3, .L201
 2280              	.LVL185:
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2281              		.loc 1 2838 15 view .LVU601
 2282 0022 1B68     		ldr	r3, [r3]
 2283              	.LVL186:
2838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2284              		.loc 1 2838 15 view .LVU602
 2285 0024 F3E7     		b	.L195
 2286              	.LVL187:
 2287              	.L200:
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2288              		.loc 1 2842 5 is_stmt 1 view .LVU603
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2289              		.loc 1 2842 15 is_stmt 0 view .LVU604
 2290 0026 024B     		ldr	r3, .L201
 2291              	.LVL188:
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2292              		.loc 1 2842 15 view .LVU605
 2293 0028 1B6F     		ldr	r3, [r3, #112]
 2294              	.LVL189:
2842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2295              		.loc 1 2842 15 view .LVU606
 2296 002a F0E7     		b	.L195
 2297              	.LVL190:
 2298              	.L198:
2854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2299              		.loc 1 2857 15 view .LVU607
 2300 002c 0020     		movs	r0, #0
 2301              	.LVL191:
2858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Return the flag status */
2860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return bitstatus;
 2302              		.loc 1 2860 3 is_stmt 1 view .LVU608
2861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2303              		.loc 1 2861 1 is_stmt 0 view .LVU609
 2304 002e 7047     		bx	lr
 2305              	.L202:
 2306              		.align	2
 2307              	.L201:
 2308 0030 00380240 		.word	1073887232
 2309              		.cfi_endproc
 2310              	.LFE172:
ARM GAS  /tmp/ccKlA27f.s 			page 91


 2312              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 2313              		.align	1
 2314              		.global	RCC_WaitForHSEStartUp
 2315              		.syntax unified
 2316              		.thumb
 2317              		.thumb_func
 2319              	RCC_WaitForHSEStartUp:
 2320              	.LFB125:
 309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   __IO uint32_t startupcounter = 0;
 2321              		.loc 1 309 1 is_stmt 1 view -0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 8
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325 0000 00B5     		push	{lr}
 2326              		.cfi_def_cfa_offset 4
 2327              		.cfi_offset 14, -4
 2328 0002 83B0     		sub	sp, sp, #12
 2329              		.cfi_def_cfa_offset 16
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2330              		.loc 1 310 3 view .LVU611
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ErrorStatus status = ERROR;
 2331              		.loc 1 310 17 is_stmt 0 view .LVU612
 2332 0004 0023     		movs	r3, #0
 2333 0006 0193     		str	r3, [sp, #4]
 311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   FlagStatus hsestatus = RESET;
 2334              		.loc 1 311 3 is_stmt 1 view .LVU613
 2335              	.LVL192:
 312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 2336              		.loc 1 312 3 view .LVU614
 2337              	.L205:
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 2338              		.loc 1 314 3 discriminator 2 view .LVU615
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 2339              		.loc 1 316 5 discriminator 2 view .LVU616
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     startupcounter++;
 2340              		.loc 1 316 17 is_stmt 0 discriminator 2 view .LVU617
 2341 0008 3120     		movs	r0, #49
 2342 000a FFF7FEFF 		bl	RCC_GetFlagStatus
 2343              	.LVL193:
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2344              		.loc 1 317 5 is_stmt 1 discriminator 2 view .LVU618
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   } while((startupcounter != HSE_STARTUP_TIMEOUT) && (hsestatus == RESET));
 2345              		.loc 1 317 19 is_stmt 0 discriminator 2 view .LVU619
 2346 000e 019B     		ldr	r3, [sp, #4]
 2347 0010 0133     		adds	r3, r3, #1
 2348 0012 0193     		str	r3, [sp, #4]
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 2349              		.loc 1 318 10 is_stmt 1 discriminator 2 view .LVU620
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 2350              		.loc 1 318 27 is_stmt 0 discriminator 2 view .LVU621
 2351 0014 019B     		ldr	r3, [sp, #4]
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 2352              		.loc 1 318 3 discriminator 2 view .LVU622
 2353 0016 B3F5A04F 		cmp	r3, #20480
 2354 001a 01D0     		beq	.L204
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 2355              		.loc 1 318 51 discriminator 1 view .LVU623
ARM GAS  /tmp/ccKlA27f.s 			page 92


 2356 001c 0028     		cmp	r0, #0
 2357 001e F3D0     		beq	.L205
 2358              	.L204:
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 2359              		.loc 1 320 3 is_stmt 1 view .LVU624
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 2360              		.loc 1 320 7 is_stmt 0 view .LVU625
 2361 0020 3120     		movs	r0, #49
 2362              	.LVL194:
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 2363              		.loc 1 320 7 view .LVU626
 2364 0022 FFF7FEFF 		bl	RCC_GetFlagStatus
 2365              	.LVL195:
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
 2366              		.loc 1 320 6 view .LVU627
 2367 0026 00B1     		cbz	r0, .L206
 322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
 2368              		.loc 1 322 12 view .LVU628
 2369 0028 0120     		movs	r0, #1
 2370              	.L206:
 2371              	.LVL196:
 328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2372              		.loc 1 328 3 is_stmt 1 view .LVU629
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
 2373              		.loc 1 329 1 is_stmt 0 view .LVU630
 2374 002a 03B0     		add	sp, sp, #12
 2375              		.cfi_def_cfa_offset 4
 2376              		@ sp needed
 2377 002c 5DF804FB 		ldr	pc, [sp], #4
 2378              		.cfi_endproc
 2379              	.LFE125:
 2381              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2382              		.align	1
 2383              		.global	RCC_ClearFlag
 2384              		.syntax unified
 2385              		.thumb
 2386              		.thumb_func
 2388              	RCC_ClearFlag:
 2389              	.LFB173:
2862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC reset flags.
2865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST,  RCC_FLAG_SFTRST,
2866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *         RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
2867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  None
2868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClearFlag(void)
2871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2390              		.loc 1 2871 1 is_stmt 1 view -0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
2872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
2873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2395              		.loc 1 2873 3 view .LVU632
ARM GAS  /tmp/ccKlA27f.s 			page 93


 2396              		.loc 1 2873 12 is_stmt 0 view .LVU633
 2397 0000 024A     		ldr	r2, .L209
 2398 0002 536F     		ldr	r3, [r2, #116]
 2399 0004 43F08073 		orr	r3, r3, #16777216
 2400 0008 5367     		str	r3, [r2, #116]
2874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2401              		.loc 1 2874 1 view .LVU634
 2402 000a 7047     		bx	lr
 2403              	.L210:
 2404              		.align	2
 2405              	.L209:
 2406 000c 00380240 		.word	1073887232
 2407              		.cfi_endproc
 2408              	.LFE173:
 2410              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2411              		.align	1
 2412              		.global	RCC_GetITStatus
 2413              		.syntax unified
 2414              		.thumb
 2415              		.thumb_func
 2417              	RCC_GetITStatus:
 2418              	.LVL197:
 2419              	.LFB174:
2875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
2878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
2879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be one of the following values:
2880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
2881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
2882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
2883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
2884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
2885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt
2886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI clock ready interrupt (only for STM32F42xxx/43xxx/446x
2887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
2888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
2889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
2890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
2891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2420              		.loc 1 2891 1 is_stmt 1 view -0
 2421              		.cfi_startproc
 2422              		@ args = 0, pretend = 0, frame = 0
 2423              		@ frame_needed = 0, uses_anonymous_args = 0
 2424              		@ link register save eliminated.
2892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   ITStatus bitstatus = RESET;
 2425              		.loc 1 2892 3 view .LVU636
2893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
 2426              		.loc 1 2895 3 view .LVU637
2896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
2898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2427              		.loc 1 2898 3 view .LVU638
 2428              		.loc 1 2898 11 is_stmt 0 view .LVU639
 2429 0000 034B     		ldr	r3, .L214
ARM GAS  /tmp/ccKlA27f.s 			page 94


 2430 0002 DB68     		ldr	r3, [r3, #12]
 2431              		.loc 1 2898 6 view .LVU640
 2432 0004 1842     		tst	r0, r3
 2433 0006 01D0     		beq	.L213
2899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = SET;
 2434              		.loc 1 2900 15 view .LVU641
 2435 0008 0120     		movs	r0, #1
 2436              	.LVL198:
 2437              		.loc 1 2900 15 view .LVU642
 2438 000a 7047     		bx	lr
 2439              	.LVL199:
 2440              	.L213:
2901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   else
2903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   {
2904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****     bitstatus = RESET;
 2441              		.loc 1 2904 15 view .LVU643
 2442 000c 0020     		movs	r0, #0
 2443              	.LVL200:
2905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   }
2906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Return the RCC_IT status */
2907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   return  bitstatus;
 2444              		.loc 1 2907 3 is_stmt 1 view .LVU644
2908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2445              		.loc 1 2908 1 is_stmt 0 view .LVU645
 2446 000e 7047     		bx	lr
 2447              	.L215:
 2448              		.align	2
 2449              	.L214:
 2450 0010 00380240 		.word	1073887232
 2451              		.cfi_endproc
 2452              	.LFE174:
 2454              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2455              		.align	1
 2456              		.global	RCC_ClearITPendingBit
 2457              		.syntax unified
 2458              		.thumb
 2459              		.thumb_func
 2461              	RCC_ClearITPendingBit:
 2462              	.LVL201:
 2463              	.LFB175:
2909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** /**
2911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
2912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
2913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *          This parameter can be any combination of the following values:
2914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSIRDY: LSI ready interrupt
2915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_LSERDY: LSE ready interrupt
2916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSIRDY: HSI ready interrupt
2917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_HSERDY: HSE ready interrupt
2918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLRDY: main PLL ready interrupt
2919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLI2SRDY: PLLI2S ready interrupt  
2920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_PLLSAIRDY: PLLSAI ready interrupt (only for STM32F42xxx/43xxx/446xx/469x
2921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *            @arg RCC_IT_CSS: Clock Security System interrupt
2922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   * @retval None
2923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   */
ARM GAS  /tmp/ccKlA27f.s 			page 95


2924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
2925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** {
 2464              		.loc 1 2925 1 is_stmt 1 view -0
 2465              		.cfi_startproc
 2466              		@ args = 0, pretend = 0, frame = 0
 2467              		@ frame_needed = 0, uses_anonymous_args = 0
 2468              		@ link register save eliminated.
2926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Check the parameters */
2927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
 2469              		.loc 1 2927 3 view .LVU647
2928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** 
2929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
2930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****      pending bits */
2931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2470              		.loc 1 2931 3 view .LVU648
 2471              		.loc 1 2931 39 is_stmt 0 view .LVU649
 2472 0000 014B     		ldr	r3, .L217
 2473 0002 9873     		strb	r0, [r3, #14]
2932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rcc.c **** }
 2474              		.loc 1 2932 1 view .LVU650
 2475 0004 7047     		bx	lr
 2476              	.L218:
 2477 0006 00BF     		.align	2
 2478              	.L217:
 2479 0008 00380240 		.word	1073887232
 2480              		.cfi_endproc
 2481              	.LFE175:
 2483              		.section	.data.APBAHBPrescTable,"aw"
 2484              		.align	2
 2485              		.set	.LANCHOR0,. + 0
 2488              	APBAHBPrescTable:
 2489 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 2489      01020304 
 2489      01020304 
 2489      06
 2490 000d 070809   		.ascii	"\007\010\011"
 2491              		.text
 2492              	.Letext0:
 2493              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 2494              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 2495              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2496              		.file 5 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccKlA27f.s 			page 96


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_rcc.c
     /tmp/ccKlA27f.s:20     .text.RCC_DeInit:0000000000000000 $t
     /tmp/ccKlA27f.s:26     .text.RCC_DeInit:0000000000000000 RCC_DeInit
     /tmp/ccKlA27f.s:78     .text.RCC_DeInit:000000000000003c $d
     /tmp/ccKlA27f.s:85     .text.RCC_HSEConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:91     .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
     /tmp/ccKlA27f.s:113    .text.RCC_HSEConfig:000000000000000c $d
     /tmp/ccKlA27f.s:118    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
     /tmp/ccKlA27f.s:124    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
     /tmp/ccKlA27f.s:155    .text.RCC_AdjustHSICalibrationValue:0000000000000010 $d
     /tmp/ccKlA27f.s:160    .text.RCC_HSICmd:0000000000000000 $t
     /tmp/ccKlA27f.s:166    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
     /tmp/ccKlA27f.s:184    .text.RCC_HSICmd:0000000000000008 $d
     /tmp/ccKlA27f.s:189    .text.RCC_LSEConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:195    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
     /tmp/ccKlA27f.s:238    .text.RCC_LSEConfig:000000000000002c $d
     /tmp/ccKlA27f.s:243    .text.RCC_LSICmd:0000000000000000 $t
     /tmp/ccKlA27f.s:249    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
     /tmp/ccKlA27f.s:267    .text.RCC_LSICmd:0000000000000008 $d
     /tmp/ccKlA27f.s:272    .text.RCC_PLLConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:278    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
     /tmp/ccKlA27f.s:318    .text.RCC_PLLConfig:000000000000001c $d
     /tmp/ccKlA27f.s:323    .text.RCC_PLLCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:329    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
     /tmp/ccKlA27f.s:347    .text.RCC_PLLCmd:0000000000000008 $d
     /tmp/ccKlA27f.s:352    .text.RCC_PLLI2SConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:358    .text.RCC_PLLI2SConfig:0000000000000000 RCC_PLLI2SConfig
     /tmp/ccKlA27f.s:382    .text.RCC_PLLI2SConfig:0000000000000010 $d
     /tmp/ccKlA27f.s:387    .text.RCC_PLLI2SCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:393    .text.RCC_PLLI2SCmd:0000000000000000 RCC_PLLI2SCmd
     /tmp/ccKlA27f.s:411    .text.RCC_PLLI2SCmd:0000000000000008 $d
     /tmp/ccKlA27f.s:416    .text.RCC_PLLSAIConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:422    .text.RCC_PLLSAIConfig:0000000000000000 RCC_PLLSAIConfig
     /tmp/ccKlA27f.s:449    .text.RCC_PLLSAIConfig:0000000000000014 $d
     /tmp/ccKlA27f.s:454    .text.RCC_PLLSAICmd:0000000000000000 $t
     /tmp/ccKlA27f.s:460    .text.RCC_PLLSAICmd:0000000000000000 RCC_PLLSAICmd
     /tmp/ccKlA27f.s:478    .text.RCC_PLLSAICmd:0000000000000008 $d
     /tmp/ccKlA27f.s:483    .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:489    .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
     /tmp/ccKlA27f.s:507    .text.RCC_ClockSecuritySystemCmd:0000000000000008 $d
     /tmp/ccKlA27f.s:512    .text.RCC_MCO1Config:0000000000000000 $t
     /tmp/ccKlA27f.s:518    .text.RCC_MCO1Config:0000000000000000 RCC_MCO1Config
     /tmp/ccKlA27f.s:553    .text.RCC_MCO1Config:0000000000000010 $d
     /tmp/ccKlA27f.s:558    .text.RCC_MCO2Config:0000000000000000 $t
     /tmp/ccKlA27f.s:564    .text.RCC_MCO2Config:0000000000000000 RCC_MCO2Config
     /tmp/ccKlA27f.s:599    .text.RCC_MCO2Config:0000000000000010 $d
     /tmp/ccKlA27f.s:604    .text.RCC_SYSCLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:610    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
     /tmp/ccKlA27f.s:641    .text.RCC_SYSCLKConfig:0000000000000010 $d
     /tmp/ccKlA27f.s:646    .text.RCC_GetSYSCLKSource:0000000000000000 $t
     /tmp/ccKlA27f.s:652    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
     /tmp/ccKlA27f.s:669    .text.RCC_GetSYSCLKSource:000000000000000c $d
     /tmp/ccKlA27f.s:674    .text.RCC_HCLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:680    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
     /tmp/ccKlA27f.s:711    .text.RCC_HCLKConfig:0000000000000010 $d
     /tmp/ccKlA27f.s:716    .text.RCC_PCLK1Config:0000000000000000 $t
ARM GAS  /tmp/ccKlA27f.s 			page 97


     /tmp/ccKlA27f.s:722    .text.RCC_PCLK1Config:0000000000000000 RCC_PCLK1Config
     /tmp/ccKlA27f.s:753    .text.RCC_PCLK1Config:0000000000000010 $d
     /tmp/ccKlA27f.s:758    .text.RCC_PCLK2Config:0000000000000000 $t
     /tmp/ccKlA27f.s:764    .text.RCC_PCLK2Config:0000000000000000 RCC_PCLK2Config
     /tmp/ccKlA27f.s:795    .text.RCC_PCLK2Config:0000000000000010 $d
     /tmp/ccKlA27f.s:800    .text.RCC_GetClocksFreq:0000000000000000 $t
     /tmp/ccKlA27f.s:806    .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
     /tmp/ccKlA27f.s:1008   .text.RCC_GetClocksFreq:00000000000000a8 $d
     /tmp/ccKlA27f.s:1016   .text.RCC_RTCCLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1022   .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
     /tmp/ccKlA27f.s:1077   .text.RCC_RTCCLKConfig:0000000000000030 $d
     /tmp/ccKlA27f.s:1082   .text.RCC_RTCCLKCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1088   .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
     /tmp/ccKlA27f.s:1106   .text.RCC_RTCCLKCmd:0000000000000008 $d
     /tmp/ccKlA27f.s:1111   .text.RCC_BackupResetCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1117   .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
     /tmp/ccKlA27f.s:1135   .text.RCC_BackupResetCmd:0000000000000008 $d
     /tmp/ccKlA27f.s:1140   .text.RCC_I2SCLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1146   .text.RCC_I2SCLKConfig:0000000000000000 RCC_I2SCLKConfig
     /tmp/ccKlA27f.s:1164   .text.RCC_I2SCLKConfig:0000000000000008 $d
     /tmp/ccKlA27f.s:1169   .text.RCC_SAIBlockACLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1175   .text.RCC_SAIBlockACLKConfig:0000000000000000 RCC_SAIBlockACLKConfig
     /tmp/ccKlA27f.s:1206   .text.RCC_SAIBlockACLKConfig:0000000000000014 $d
     /tmp/ccKlA27f.s:1211   .text.RCC_SAIBlockBCLKConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1217   .text.RCC_SAIBlockBCLKConfig:0000000000000000 RCC_SAIBlockBCLKConfig
     /tmp/ccKlA27f.s:1248   .text.RCC_SAIBlockBCLKConfig:0000000000000014 $d
     /tmp/ccKlA27f.s:1253   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1259   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000000 RCC_SAIPLLI2SClkDivConfig
     /tmp/ccKlA27f.s:1293   .text.RCC_SAIPLLI2SClkDivConfig:0000000000000014 $d
     /tmp/ccKlA27f.s:1298   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1304   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000000 RCC_SAIPLLSAIClkDivConfig
     /tmp/ccKlA27f.s:1338   .text.RCC_SAIPLLSAIClkDivConfig:0000000000000018 $d
     /tmp/ccKlA27f.s:1343   .text.RCC_LTDCCLKDivConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1349   .text.RCC_LTDCCLKDivConfig:0000000000000000 RCC_LTDCCLKDivConfig
     /tmp/ccKlA27f.s:1380   .text.RCC_LTDCCLKDivConfig:0000000000000014 $d
     /tmp/ccKlA27f.s:1385   .text.RCC_TIMCLKPresConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:1391   .text.RCC_TIMCLKPresConfig:0000000000000000 RCC_TIMCLKPresConfig
     /tmp/ccKlA27f.s:1409   .text.RCC_TIMCLKPresConfig:0000000000000008 $d
     /tmp/ccKlA27f.s:1414   .text.RCC_AHB1PeriphClockCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1420   .text.RCC_AHB1PeriphClockCmd:0000000000000000 RCC_AHB1PeriphClockCmd
     /tmp/ccKlA27f.s:1457   .text.RCC_AHB1PeriphClockCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1462   .text.RCC_AHB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1468   .text.RCC_AHB2PeriphClockCmd:0000000000000000 RCC_AHB2PeriphClockCmd
     /tmp/ccKlA27f.s:1505   .text.RCC_AHB2PeriphClockCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1510   .text.RCC_AHB3PeriphClockCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1516   .text.RCC_AHB3PeriphClockCmd:0000000000000000 RCC_AHB3PeriphClockCmd
     /tmp/ccKlA27f.s:1553   .text.RCC_AHB3PeriphClockCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1558   .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1564   .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
     /tmp/ccKlA27f.s:1601   .text.RCC_APB1PeriphClockCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1606   .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1612   .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
     /tmp/ccKlA27f.s:1649   .text.RCC_APB2PeriphClockCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1654   .text.RCC_AHB1PeriphResetCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1660   .text.RCC_AHB1PeriphResetCmd:0000000000000000 RCC_AHB1PeriphResetCmd
     /tmp/ccKlA27f.s:1697   .text.RCC_AHB1PeriphResetCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1702   .text.RCC_AHB2PeriphResetCmd:0000000000000000 $t
ARM GAS  /tmp/ccKlA27f.s 			page 98


     /tmp/ccKlA27f.s:1708   .text.RCC_AHB2PeriphResetCmd:0000000000000000 RCC_AHB2PeriphResetCmd
     /tmp/ccKlA27f.s:1745   .text.RCC_AHB2PeriphResetCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1750   .text.RCC_AHB3PeriphResetCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1756   .text.RCC_AHB3PeriphResetCmd:0000000000000000 RCC_AHB3PeriphResetCmd
     /tmp/ccKlA27f.s:1793   .text.RCC_AHB3PeriphResetCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1798   .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1804   .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
     /tmp/ccKlA27f.s:1841   .text.RCC_APB1PeriphResetCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1846   .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1852   .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
     /tmp/ccKlA27f.s:1889   .text.RCC_APB2PeriphResetCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1894   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1900   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000000 RCC_AHB1PeriphClockLPModeCmd
     /tmp/ccKlA27f.s:1937   .text.RCC_AHB1PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1942   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1948   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000000 RCC_AHB2PeriphClockLPModeCmd
     /tmp/ccKlA27f.s:1985   .text.RCC_AHB2PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:1990   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:1996   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000000 RCC_AHB3PeriphClockLPModeCmd
     /tmp/ccKlA27f.s:2033   .text.RCC_AHB3PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:2038   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:2044   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000000 RCC_APB1PeriphClockLPModeCmd
     /tmp/ccKlA27f.s:2081   .text.RCC_APB1PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:2086   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000000 $t
     /tmp/ccKlA27f.s:2092   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000000 RCC_APB2PeriphClockLPModeCmd
     /tmp/ccKlA27f.s:2129   .text.RCC_APB2PeriphClockLPModeCmd:0000000000000018 $d
     /tmp/ccKlA27f.s:2134   .text.RCC_LSEModeConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:2140   .text.RCC_LSEModeConfig:0000000000000000 RCC_LSEModeConfig
     /tmp/ccKlA27f.s:2170   .text.RCC_LSEModeConfig:000000000000001c $d
     /tmp/ccKlA27f.s:2175   .text.RCC_ITConfig:0000000000000000 $t
     /tmp/ccKlA27f.s:2181   .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
     /tmp/ccKlA27f.s:2218   .text.RCC_ITConfig:0000000000000018 $d
     /tmp/ccKlA27f.s:2223   .text.RCC_GetFlagStatus:0000000000000000 $t
     /tmp/ccKlA27f.s:2229   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
     /tmp/ccKlA27f.s:2308   .text.RCC_GetFlagStatus:0000000000000030 $d
     /tmp/ccKlA27f.s:2313   .text.RCC_WaitForHSEStartUp:0000000000000000 $t
     /tmp/ccKlA27f.s:2319   .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
     /tmp/ccKlA27f.s:2382   .text.RCC_ClearFlag:0000000000000000 $t
     /tmp/ccKlA27f.s:2388   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
     /tmp/ccKlA27f.s:2406   .text.RCC_ClearFlag:000000000000000c $d
     /tmp/ccKlA27f.s:2411   .text.RCC_GetITStatus:0000000000000000 $t
     /tmp/ccKlA27f.s:2417   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
     /tmp/ccKlA27f.s:2450   .text.RCC_GetITStatus:0000000000000010 $d
     /tmp/ccKlA27f.s:2455   .text.RCC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccKlA27f.s:2461   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
     /tmp/ccKlA27f.s:2479   .text.RCC_ClearITPendingBit:0000000000000008 $d
     /tmp/ccKlA27f.s:2484   .data.APBAHBPrescTable:0000000000000000 $d
     /tmp/ccKlA27f.s:2488   .data.APBAHBPrescTable:0000000000000000 APBAHBPrescTable

NO UNDEFINED SYMBOLS
