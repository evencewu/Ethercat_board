ARM GAS  /tmp/ccv37XgC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"esc_eep.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EEP_process,"ax",%progbits
  20              		.align	1
  21              		.global	EEP_process
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	EEP_process:
  27              	.LFB0:
  28              		.file 1 "Lib/soes/src/esc_eep.c"
   1:Lib/soes/src/esc_eep.c **** /*
   2:Lib/soes/src/esc_eep.c ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:Lib/soes/src/esc_eep.c ****  * LICENSE file in the project root for full license information
   4:Lib/soes/src/esc_eep.c ****  */
   5:Lib/soes/src/esc_eep.c **** 
   6:Lib/soes/src/esc_eep.c ****  /** \file
   7:Lib/soes/src/esc_eep.c ****  * \brief
   8:Lib/soes/src/esc_eep.c ****  * ESI EEPROM emulator module.
   9:Lib/soes/src/esc_eep.c ****  */
  10:Lib/soes/src/esc_eep.c **** 
  11:Lib/soes/src/esc_eep.c **** #include "cc.h"
  12:Lib/soes/src/esc_eep.c **** #include "esc.h"
  13:Lib/soes/src/esc_eep.c **** #include "esc_eep.h"
  14:Lib/soes/src/esc_eep.c **** 
  15:Lib/soes/src/esc_eep.c **** #include <string.h>
  16:Lib/soes/src/esc_eep.c **** 
  17:Lib/soes/src/esc_eep.c **** static uint8_t eep_buf[8];
  18:Lib/soes/src/esc_eep.c **** 
  19:Lib/soes/src/esc_eep.c **** /** EPP periodic task of ESC side EEPROM emulation.
  20:Lib/soes/src/esc_eep.c ****  *
  21:Lib/soes/src/esc_eep.c ****  */
  22:Lib/soes/src/esc_eep.c **** void EEP_process (void)
  23:Lib/soes/src/esc_eep.c **** {
  29              		.loc 1 23 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Lib/soes/src/esc_eep.c ****    eep_stat_t stat;
  33              		.loc 1 24 4 view .LVU1
  25:Lib/soes/src/esc_eep.c **** 
ARM GAS  /tmp/ccv37XgC.s 			page 2


  26:Lib/soes/src/esc_eep.c ****    /* check for eeprom event */
  27:Lib/soes/src/esc_eep.c ****    if ((ESCvar.ALevent & ESCREG_ALEVENT_EEP) == 0) {
  34              		.loc 1 27 4 view .LVU2
  35              		.loc 1 27 15 is_stmt 0 view .LVU3
  36 0000 3A4B     		ldr	r3, .L13
  37 0002 D3F8E430 		ldr	r3, [r3, #228]
  38              		.loc 1 27 7 view .LVU4
  39 0006 13F0200F 		tst	r3, #32
  40 000a 6DD0     		beq	.L11
  23:Lib/soes/src/esc_eep.c ****    eep_stat_t stat;
  41              		.loc 1 23 1 view .LVU5
  42 000c 10B5     		push	{r4, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 4, -8
  45              		.cfi_offset 14, -4
  46 000e 82B0     		sub	sp, sp, #8
  47              		.cfi_def_cfa_offset 16
  48 0010 35E0     		b	.L9
  49              	.L4:
  28:Lib/soes/src/esc_eep.c ****      return;
  29:Lib/soes/src/esc_eep.c ****    }
  30:Lib/soes/src/esc_eep.c **** 
  31:Lib/soes/src/esc_eep.c ****    while (1) {
  32:Lib/soes/src/esc_eep.c ****       /* read eeprom status */
  33:Lib/soes/src/esc_eep.c ****       ESC_read (ESCREG_EECONTSTAT, &stat, sizeof (eep_stat_t));
  34:Lib/soes/src/esc_eep.c ****       stat.contstat.reg = etohs(stat.contstat.reg);
  35:Lib/soes/src/esc_eep.c ****       stat.addr = etohl(stat.addr);
  36:Lib/soes/src/esc_eep.c **** 
  37:Lib/soes/src/esc_eep.c ****       /* check busy flag, exit if job finished */
  38:Lib/soes/src/esc_eep.c ****       if (!stat.contstat.bits.busy) {
  39:Lib/soes/src/esc_eep.c ****         return;
  40:Lib/soes/src/esc_eep.c ****       }
  41:Lib/soes/src/esc_eep.c **** 
  42:Lib/soes/src/esc_eep.c ****       /* clear error bits */
  43:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.csumErr = 0;
  44:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.eeLoading = 0;
  45:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.ackErr = 0;
  46:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.wrErr = 0;
  47:Lib/soes/src/esc_eep.c **** 
  48:Lib/soes/src/esc_eep.c ****       /* process commands */
  49:Lib/soes/src/esc_eep.c ****       switch (stat.contstat.bits.cmdReg) {
  50:Lib/soes/src/esc_eep.c ****          case EEP_CMD_IDLE:
  51:Lib/soes/src/esc_eep.c ****             break;
  52:Lib/soes/src/esc_eep.c **** 
  53:Lib/soes/src/esc_eep.c ****          case EEP_CMD_READ:
  54:Lib/soes/src/esc_eep.c ****          case EEP_CMD_RELOAD:
  55:Lib/soes/src/esc_eep.c ****             /* handle read request */
  56:Lib/soes/src/esc_eep.c ****             if (EEP_read (stat.addr * 2U /* sizeof(uint16_t) */, eep_buf, EEP_READ_SIZE) != 0) {
  50              		.loc 1 56 13 is_stmt 1 view .LVU6
  51              		.loc 1 56 17 is_stmt 0 view .LVU7
  52 0012 0822     		movs	r2, #8
  53 0014 3649     		ldr	r1, .L13+4
  54 0016 4000     		lsls	r0, r0, #1
  55 0018 FFF7FEFF 		bl	EEP_read
  56              	.LVL0:
  57              		.loc 1 56 16 view .LVU8
  58 001c 30B1     		cbz	r0, .L8
ARM GAS  /tmp/ccv37XgC.s 			page 3


  57:Lib/soes/src/esc_eep.c ****                stat.contstat.bits.ackErr = 1;
  59              		.loc 1 57 16 is_stmt 1 view .LVU9
  60              		.loc 1 57 42 is_stmt 0 view .LVU10
  61 001e 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
  62 0022 43F02003 		orr	r3, r3, #32
  63 0026 8DF80130 		strb	r3, [sp, #1]
  64 002a 22E0     		b	.L7
  65              	.L8:
  58:Lib/soes/src/esc_eep.c ****             } else {
  59:Lib/soes/src/esc_eep.c ****                ESC_write (ESCREG_EEDATA, eep_buf, EEP_READ_SIZE);
  66              		.loc 1 59 16 is_stmt 1 view .LVU11
  67 002c 0822     		movs	r2, #8
  68 002e 3049     		ldr	r1, .L13+4
  69 0030 4FF4A160 		mov	r0, #1288
  70 0034 FFF7FEFF 		bl	ESC_write
  71              	.LVL1:
  72 0038 1BE0     		b	.L7
  73              	.L6:
  60:Lib/soes/src/esc_eep.c ****             }
  61:Lib/soes/src/esc_eep.c ****             break;
  62:Lib/soes/src/esc_eep.c **** 
  63:Lib/soes/src/esc_eep.c ****          case EEP_CMD_WRITE:
  64:Lib/soes/src/esc_eep.c ****             /* handle write request */
  65:Lib/soes/src/esc_eep.c ****             ESC_read (ESCREG_EEDATA, eep_buf, EEP_WRITE_SIZE);
  74              		.loc 1 65 13 view .LVU12
  75 003a 2D4C     		ldr	r4, .L13+4
  76 003c 0222     		movs	r2, #2
  77 003e 2146     		mov	r1, r4
  78 0040 4FF4A160 		mov	r0, #1288
  79 0044 FFF7FEFF 		bl	ESC_read
  80              	.LVL2:
  66:Lib/soes/src/esc_eep.c ****             if (EEP_write (stat.addr * 2U /* sizeof(uint16_t) */, eep_buf, EEP_WRITE_SIZE) != 0) {
  81              		.loc 1 66 13 view .LVU13
  82              		.loc 1 66 32 is_stmt 0 view .LVU14
  83 0048 DDF80200 		ldr	r0, [sp, #2]	@ unaligned
  84              		.loc 1 66 17 view .LVU15
  85 004c 0222     		movs	r2, #2
  86 004e 2146     		mov	r1, r4
  87 0050 4000     		lsls	r0, r0, #1
  88 0052 FFF7FEFF 		bl	EEP_write
  89              	.LVL3:
  90              		.loc 1 66 16 view .LVU16
  91 0056 60B1     		cbz	r0, .L7
  67:Lib/soes/src/esc_eep.c ****                stat.contstat.bits.ackErr = 1;
  92              		.loc 1 67 16 is_stmt 1 view .LVU17
  93              		.loc 1 67 42 is_stmt 0 view .LVU18
  94 0058 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
  95 005c 43F02003 		orr	r3, r3, #32
  96 0060 8DF80130 		strb	r3, [sp, #1]
  97 0064 05E0     		b	.L7
  98              	.L3:
  68:Lib/soes/src/esc_eep.c ****             }
  69:Lib/soes/src/esc_eep.c ****             break;
  70:Lib/soes/src/esc_eep.c **** 
  71:Lib/soes/src/esc_eep.c ****          default:
  72:Lib/soes/src/esc_eep.c ****             stat.contstat.bits.ackErr = 1;
  99              		.loc 1 72 13 is_stmt 1 view .LVU19
ARM GAS  /tmp/ccv37XgC.s 			page 4


 100              		.loc 1 72 39 is_stmt 0 view .LVU20
 101 0066 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 102 006a 43F02003 		orr	r3, r3, #32
 103 006e 8DF80130 		strb	r3, [sp, #1]
 104              	.L7:
  73:Lib/soes/src/esc_eep.c ****       }
  74:Lib/soes/src/esc_eep.c **** 
  75:Lib/soes/src/esc_eep.c ****       /* acknowledge command */
  76:Lib/soes/src/esc_eep.c ****       stat.contstat.reg = htoes(stat.contstat.reg);
 105              		.loc 1 76 7 is_stmt 1 view .LVU21
  77:Lib/soes/src/esc_eep.c ****       ESC_write (ESCREG_EECONTSTAT, &stat.contstat.reg, sizeof(uint16_t));
 106              		.loc 1 77 7 view .LVU22
 107 0072 0222     		movs	r2, #2
 108 0074 6946     		mov	r1, sp
 109 0076 40F20250 		movw	r0, #1282
 110 007a FFF7FEFF 		bl	ESC_write
 111              	.LVL4:
  31:Lib/soes/src/esc_eep.c ****       /* read eeprom status */
 112              		.loc 1 31 10 view .LVU23
 113              	.L9:
  31:Lib/soes/src/esc_eep.c ****       /* read eeprom status */
 114              		.loc 1 31 4 view .LVU24
  33:Lib/soes/src/esc_eep.c ****       stat.contstat.reg = etohs(stat.contstat.reg);
 115              		.loc 1 33 7 view .LVU25
 116 007e 0622     		movs	r2, #6
 117 0080 6946     		mov	r1, sp
 118 0082 40F20250 		movw	r0, #1282
 119 0086 FFF7FEFF 		bl	ESC_read
 120              	.LVL5:
  34:Lib/soes/src/esc_eep.c ****       stat.addr = etohl(stat.addr);
 121              		.loc 1 34 7 view .LVU26
  35:Lib/soes/src/esc_eep.c **** 
 122              		.loc 1 35 7 view .LVU27
  35:Lib/soes/src/esc_eep.c **** 
 123              		.loc 1 35 19 is_stmt 0 view .LVU28
 124 008a DDF80200 		ldr	r0, [sp, #2]	@ unaligned
  38:Lib/soes/src/esc_eep.c ****         return;
 125              		.loc 1 38 7 is_stmt 1 view .LVU29
  38:Lib/soes/src/esc_eep.c ****         return;
 126              		.loc 1 38 10 is_stmt 0 view .LVU30
 127 008e 9DF90130 		ldrsb	r3, [sp, #1]
 128 0092 002B     		cmp	r3, #0
 129 0094 26DA     		bge	.L1
  43:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.eeLoading = 0;
 130              		.loc 1 43 7 is_stmt 1 view .LVU31
  43:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.eeLoading = 0;
 131              		.loc 1 43 34 is_stmt 0 view .LVU32
 132 0096 9DF80130 		ldrb	r3, [sp, #1]	@ zero_extendqisi2
 133 009a 6FF3C303 		bfc	r3, #3, #1
 134 009e 8DF80130 		strb	r3, [sp, #1]
  44:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.ackErr = 0;
 135              		.loc 1 44 7 is_stmt 1 view .LVU33
  44:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.ackErr = 0;
 136              		.loc 1 44 36 is_stmt 0 view .LVU34
 137 00a2 DBB2     		uxtb	r3, r3
 138 00a4 6FF30413 		bfc	r3, #4, #1
 139 00a8 8DF80130 		strb	r3, [sp, #1]
ARM GAS  /tmp/ccv37XgC.s 			page 5


  45:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.wrErr = 0;
 140              		.loc 1 45 7 is_stmt 1 view .LVU35
  45:Lib/soes/src/esc_eep.c ****       stat.contstat.bits.wrErr = 0;
 141              		.loc 1 45 33 is_stmt 0 view .LVU36
 142 00ac DBB2     		uxtb	r3, r3
 143 00ae 6FF34513 		bfc	r3, #5, #1
 144 00b2 8DF80130 		strb	r3, [sp, #1]
  46:Lib/soes/src/esc_eep.c **** 
 145              		.loc 1 46 7 is_stmt 1 view .LVU37
  46:Lib/soes/src/esc_eep.c **** 
 146              		.loc 1 46 32 is_stmt 0 view .LVU38
 147 00b6 DBB2     		uxtb	r3, r3
 148 00b8 6FF38613 		bfc	r3, #6, #1
 149 00bc 8DF80130 		strb	r3, [sp, #1]
  49:Lib/soes/src/esc_eep.c ****          case EEP_CMD_IDLE:
 150              		.loc 1 49 7 is_stmt 1 view .LVU39
  49:Lib/soes/src/esc_eep.c ****          case EEP_CMD_IDLE:
 151              		.loc 1 49 33 is_stmt 0 view .LVU40
 152 00c0 DBB2     		uxtb	r3, r3
 153 00c2 03F00703 		and	r3, r3, #7
  49:Lib/soes/src/esc_eep.c ****          case EEP_CMD_IDLE:
 154              		.loc 1 49 7 view .LVU41
 155 00c6 042B     		cmp	r3, #4
 156 00c8 CDD8     		bhi	.L3
 157 00ca 01A2     		adr	r2, .L5
 158 00cc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 159              		.p2align 2
 160              	.L5:
 161 00d0 73000000 		.word	.L7+1
 162 00d4 13000000 		.word	.L4+1
 163 00d8 3B000000 		.word	.L6+1
 164 00dc 67000000 		.word	.L3+1
 165 00e0 13000000 		.word	.L4+1
 166              		.p2align 1
 167              	.L1:
  78:Lib/soes/src/esc_eep.c ****    }
  79:Lib/soes/src/esc_eep.c **** }
 168              		.loc 1 79 1 view .LVU42
 169 00e4 02B0     		add	sp, sp, #8
 170              		.cfi_def_cfa_offset 8
 171              		@ sp needed
 172 00e6 10BD     		pop	{r4, pc}
 173              	.L11:
 174              		.cfi_def_cfa_offset 0
 175              		.cfi_restore 4
 176              		.cfi_restore 14
 177 00e8 7047     		bx	lr
 178              	.L14:
 179 00ea 00BF     		.align	2
 180              	.L13:
 181 00ec 00000000 		.word	ESCvar
 182 00f0 00000000 		.word	.LANCHOR0
 183              		.cfi_endproc
 184              	.LFE0:
 186              		.section	.bss.eep_buf,"aw",%nobits
 187              		.align	2
 188              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccv37XgC.s 			page 6


 191              	eep_buf:
 192 0000 00000000 		.space	8
 192      00000000 
 193              		.text
 194              	.Letext0:
 195              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 196              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 197              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 198              		.file 5 "Lib/soes/inc/esc.h"
 199              		.file 6 "Lib/soes/inc/esc_eep.h"
ARM GAS  /tmp/ccv37XgC.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 esc_eep.c
     /tmp/ccv37XgC.s:20     .text.EEP_process:0000000000000000 $t
     /tmp/ccv37XgC.s:26     .text.EEP_process:0000000000000000 EEP_process
     /tmp/ccv37XgC.s:161    .text.EEP_process:00000000000000d0 $d
     /tmp/ccv37XgC.s:166    .text.EEP_process:00000000000000e4 $t
     /tmp/ccv37XgC.s:181    .text.EEP_process:00000000000000ec $d
     /tmp/ccv37XgC.s:187    .bss.eep_buf:0000000000000000 $d
     /tmp/ccv37XgC.s:191    .bss.eep_buf:0000000000000000 eep_buf

UNDEFINED SYMBOLS
EEP_read
ESC_write
ESC_read
EEP_write
ESCvar
