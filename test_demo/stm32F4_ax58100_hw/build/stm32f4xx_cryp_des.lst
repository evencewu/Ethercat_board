ARM GAS  /tmp/ccINcvPx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_cryp_des.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRYP_DES_ECB,"ax",%progbits
  20              		.align	1
  21              		.global	CRYP_DES_ECB
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CRYP_DES_ECB:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @file    stm32f4xx_cryp_des.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @version V1.6.1
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @date    21-October-2015
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          input message using DES in ECB/CBC modes.
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          peripheral.
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===================================================================
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                   ##### How to use this driver #####
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===================================================================
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  [..] 
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Enable The CRYP controller clock using 
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Encrypt and decrypt using DES in ECB Mode using CRYP_DES_ECB() function.
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    (#) Encrypt and decrypt using DES in CBC Mode using CRYP_DES_CBC() function.
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @attention
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
ARM GAS  /tmp/ccINcvPx.s 			page 2


  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may not use this file except in compliance with the License.
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may obtain a copy of the License at:
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Unless required by applicable law or agreed to in writing, software 
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * See the License for the specific language governing permissions and
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * limitations under the License.
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Includes ------------------------------------------------------------------*/
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #include "stm32f4xx_cryp.h"
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP 
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief CRYP driver modules
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private typedef -----------------------------------------------------------*/
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private define ------------------------------------------------------------*/
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #define DESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private macro -------------------------------------------------------------*/
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private variables ---------------------------------------------------------*/
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private function prototypes -----------------------------------------------*/
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private functions ---------------------------------------------------------*/
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Private_Functions
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */ 
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Group8 High Level DES functions
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *  @brief   High Level DES functions 
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim   
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                        ##### High Level DES functions #####
  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in ECB Mode
ARM GAS  /tmp/ccINcvPx.s 			page 3


  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *           This parameter can be one of the following values:
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_ECB(uint8_t Mode, uint8_t Key[8], uint8_t *Input, 
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint32_t Ilength, uint8_t *Output)
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
  30              		.loc 1 101 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 56
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 101 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 4, -24
  38              		.cfi_offset 5, -20
  39              		.cfi_offset 6, -16
  40              		.cfi_offset 7, -12
  41              		.cfi_offset 8, -8
  42              		.cfi_offset 14, -4
  43 0004 8EB0     		sub	sp, sp, #56
  44              		.cfi_def_cfa_offset 80
  45 0006 0646     		mov	r6, r0
  46 0008 0D46     		mov	r5, r1
  47 000a 1F46     		mov	r7, r3
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
  48              		.loc 1 102 3 is_stmt 1 view .LVU2
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
  49              		.loc 1 103 3 view .LVU3
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
  50              		.loc 1 104 3 view .LVU4
  51              		.loc 1 104 17 is_stmt 0 view .LVU5
  52 000c 0023     		movs	r3, #0
  53              	.LVL1:
  54              		.loc 1 104 17 view .LVU6
  55 000e 0193     		str	r3, [sp, #4]
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
  56              		.loc 1 105 3 is_stmt 1 view .LVU7
  57              	.LVL2:
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
  58              		.loc 1 106 3 view .LVU8
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
  59              		.loc 1 107 3 view .LVU9
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
  60              		.loc 1 108 3 view .LVU10
  61              		.loc 1 108 12 is_stmt 0 view .LVU11
  62 0010 1446     		mov	r4, r2
  63              	.LVL3:
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
ARM GAS  /tmp/ccINcvPx.s 			page 4


  64              		.loc 1 109 3 is_stmt 1 view .LVU12
  65              		.loc 1 109 12 is_stmt 0 view .LVU13
  66 0012 DDF85080 		ldr	r8, [sp, #80]
  67              	.LVL4:
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
  68              		.loc 1 110 3 is_stmt 1 view .LVU14
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
  69              		.loc 1 113 3 view .LVU15
  70 0016 02A8     		add	r0, sp, #8
  71              	.LVL5:
  72              		.loc 1 113 3 is_stmt 0 view .LVU16
  73 0018 FFF7FEFF 		bl	CRYP_KeyStructInit
  74              	.LVL6:
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if( Mode == MODE_ENCRYPT ) /* DES encryption */
  75              		.loc 1 116 3 is_stmt 1 view .LVU17
  76              		.loc 1 116 5 is_stmt 0 view .LVU18
  77 001c 012E     		cmp	r6, #1
  78 001e 1DD0     		beq	.L13
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else/* if( Mode == MODE_DECRYPT )*/ /* DES decryption */
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {      
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
  79              		.loc 1 122 6 is_stmt 1 view .LVU19
  80              		.loc 1 122 43 is_stmt 0 view .LVU20
  81 0020 0423     		movs	r3, #4
  82 0022 0A93     		str	r3, [sp, #40]
  83              	.L3:
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
  84              		.loc 1 125 3 is_stmt 1 view .LVU21
  85              		.loc 1 125 40 is_stmt 0 view .LVU22
  86 0024 1023     		movs	r3, #16
  87 0026 0B93     		str	r3, [sp, #44]
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
  88              		.loc 1 126 3 is_stmt 1 view .LVU23
  89              		.loc 1 126 40 is_stmt 0 view .LVU24
  90 0028 8023     		movs	r3, #128
  91 002a 0C93     		str	r3, [sp, #48]
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
  92              		.loc 1 127 3 is_stmt 1 view .LVU25
  93 002c 0AA8     		add	r0, sp, #40
  94 002e FFF7FEFF 		bl	CRYP_Init
  95              	.LVL7:
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
  96              		.loc 1 130 3 view .LVU26
  97              		.loc 1 130 45 is_stmt 0 view .LVU27
  98 0032 2B68     		ldr	r3, [r5]
  99              	.LVL8:
ARM GAS  /tmp/ccINcvPx.s 			page 5


 100              	.LBB14:
 101              	.LBI14:
 102              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccINcvPx.s 			page 6


  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
ARM GAS  /tmp/ccINcvPx.s 			page 7


 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  /tmp/ccINcvPx.s 			page 8


 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
ARM GAS  /tmp/ccINcvPx.s 			page 9


 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
ARM GAS  /tmp/ccINcvPx.s 			page 10


 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccINcvPx.s 			page 11


 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccINcvPx.s 			page 12


 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccINcvPx.s 			page 13


 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 474:Drivers/CMSIS/Include/core_cmInstr.h **** }
 475:Drivers/CMSIS/Include/core_cmInstr.h **** 
 476:Drivers/CMSIS/Include/core_cmInstr.h **** 
 477:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 478:Drivers/CMSIS/Include/core_cmInstr.h **** 
 479:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 480:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 481:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 482:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 483:Drivers/CMSIS/Include/core_cmInstr.h **** {
 484:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb 0xF":::"memory");
 485:Drivers/CMSIS/Include/core_cmInstr.h **** }
 486:Drivers/CMSIS/Include/core_cmInstr.h **** 
 487:Drivers/CMSIS/Include/core_cmInstr.h **** 
 488:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 489:Drivers/CMSIS/Include/core_cmInstr.h **** 
 490:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 491:Drivers/CMSIS/Include/core_cmInstr.h **** 
 492:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 493:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 494:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 495:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 103              		.loc 2 495 57 is_stmt 1 view .LVU28
 104              	.LBB15:
 496:Drivers/CMSIS/Include/core_cmInstr.h **** {
 497:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 498:Drivers/CMSIS/Include/core_cmInstr.h ****   return __builtin_bswap32(value);
 105              		.loc 2 498 3 view .LVU29
 106              		.loc 2 498 10 is_stmt 0 view .LVU30
 107 0034 1BBA     		rev	r3, r3
 108              	.LVL9:
 109              		.loc 2 498 10 view .LVU31
 110              	.LBE15:
 111              	.LBE14:
 112              		.loc 1 130 43 view .LVU32
 113 0036 0493     		str	r3, [sp, #16]
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
ARM GAS  /tmp/ccINcvPx.s 			page 14


 114              		.loc 1 131 3 is_stmt 1 view .LVU33
 115              	.LVL10:
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 116              		.loc 1 132 3 view .LVU34
 117              		.loc 1 132 45 is_stmt 0 view .LVU35
 118 0038 6B68     		ldr	r3, [r5, #4]
 119              	.LVL11:
 120              	.LBB16:
 121              	.LBI16:
 495:Drivers/CMSIS/Include/core_cmInstr.h **** {
 122              		.loc 2 495 57 is_stmt 1 view .LVU36
 123              	.LBB17:
 124              		.loc 2 498 3 view .LVU37
 125              		.loc 2 498 10 is_stmt 0 view .LVU38
 126 003a 1BBA     		rev	r3, r3
 127              	.LVL12:
 128              		.loc 2 498 10 view .LVU39
 129              	.LBE17:
 130              	.LBE16:
 131              		.loc 1 132 43 view .LVU40
 132 003c 0593     		str	r3, [sp, #20]
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 133              		.loc 1 133 3 is_stmt 1 view .LVU41
 134 003e 02A8     		add	r0, sp, #8
 135 0040 FFF7FEFF 		bl	CRYP_KeyInit
 136              	.LVL13:
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 137              		.loc 1 136 3 view .LVU42
 138 0044 FFF7FEFF 		bl	CRYP_FIFOFlush
 139              	.LVL14:
 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 140              		.loc 1 139 3 view .LVU43
 141 0048 0120     		movs	r0, #1
 142 004a FFF7FEFF 		bl	CRYP_Cmd
 143              	.LVL15:
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 144              		.loc 1 141 3 view .LVU44
 145              		.loc 1 141 6 is_stmt 0 view .LVU45
 146 004e FFF7FEFF 		bl	CRYP_GetCmdStatus
 147              	.LVL16:
 148              		.loc 1 141 5 view .LVU46
 149 0052 0646     		mov	r6, r0
 150 0054 78B3     		cbz	r0, .L4
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        the CRYP peripheral (please check the device sales type. */
 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     return(ERROR);
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 151              		.loc 1 147 8 view .LVU47
 152 0056 0025     		movs	r5, #0
 153              	.LVL17:
ARM GAS  /tmp/ccINcvPx.s 			page 15


 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 154              		.loc 1 106 15 view .LVU48
 155 0058 0126     		movs	r6, #1
 156 005a 05E0     		b	.L5
 157              	.LVL18:
 158              	.L13:
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 159              		.loc 1 118 6 is_stmt 1 view .LVU49
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 160              		.loc 1 118 43 is_stmt 0 view .LVU50
 161 005c 0023     		movs	r3, #0
 162 005e 0A93     		str	r3, [sp, #40]
 163 0060 E0E7     		b	.L3
 164              	.LVL19:
 165              	.L6:
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Wait until the complete message has been processed */
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 166              		.loc 1 164 5 is_stmt 1 view .LVU51
 167              		.loc 1 164 8 is_stmt 0 view .LVU52
 168 0062 D0B1     		cbz	r0, .L14
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 169              		.loc 1 166 15 view .LVU53
 170 0064 0026     		movs	r6, #0
 171              	.LVL20:
 172              	.L8:
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 173              		.loc 1 147 48 is_stmt 1 discriminator 2 view .LVU54
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 174              		.loc 1 147 49 is_stmt 0 discriminator 2 view .LVU55
 175 0066 0835     		adds	r5, r5, #8
 176              	.LVL21:
 177              	.L5:
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 178              		.loc 1 147 12 is_stmt 1 discriminator 1 view .LVU56
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 179              		.loc 1 147 3 is_stmt 0 discriminator 1 view .LVU57
 180 0068 BD42     		cmp	r5, r7
 181 006a 21D2     		bcs	.L9
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 182              		.loc 1 147 25 discriminator 3 view .LVU58
 183 006c 06B3     		cbz	r6, .L9
ARM GAS  /tmp/ccINcvPx.s 			page 16


 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 184              		.loc 1 151 5 is_stmt 1 view .LVU59
 185 006e 2068     		ldr	r0, [r4]
 186 0070 FFF7FEFF 		bl	CRYP_DataIn
 187              	.LVL22:
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 188              		.loc 1 152 5 view .LVU60
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 189              		.loc 1 153 5 view .LVU61
 190 0074 6068     		ldr	r0, [r4, #4]
 191 0076 FFF7FEFF 		bl	CRYP_DataIn
 192              	.LVL23:
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 193              		.loc 1 154 5 view .LVU62
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 194              		.loc 1 154 14 is_stmt 0 view .LVU63
 195 007a 0834     		adds	r4, r4, #8
 196              	.LVL24:
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 197              		.loc 1 157 5 is_stmt 1 view .LVU64
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 198              		.loc 1 157 13 is_stmt 0 view .LVU65
 199 007c 0023     		movs	r3, #0
 200 007e 0193     		str	r3, [sp, #4]
 201              	.L7:
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 202              		.loc 1 158 5 is_stmt 1 discriminator 2 view .LVU66
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 203              		.loc 1 160 7 discriminator 2 view .LVU67
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 204              		.loc 1 160 20 is_stmt 0 discriminator 2 view .LVU68
 205 0080 1020     		movs	r0, #16
 206 0082 FFF7FEFF 		bl	CRYP_GetFlagStatus
 207              	.LVL25:
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 208              		.loc 1 161 7 is_stmt 1 discriminator 2 view .LVU69
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 209              		.loc 1 161 14 is_stmt 0 discriminator 2 view .LVU70
 210 0086 0199     		ldr	r1, [sp, #4]
 211 0088 0131     		adds	r1, r1, #1
 212 008a 0191     		str	r1, [sp, #4]
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 213              		.loc 1 162 12 is_stmt 1 discriminator 2 view .LVU71
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 214              		.loc 1 162 22 is_stmt 0 discriminator 2 view .LVU72
 215 008c 019B     		ldr	r3, [sp, #4]
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 216              		.loc 1 162 5 discriminator 2 view .LVU73
 217 008e B3F5803F 		cmp	r3, #65536
 218 0092 E6D0     		beq	.L6
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 219              		.loc 1 162 42 discriminator 1 view .LVU74
 220 0094 0028     		cmp	r0, #0
 221 0096 F3D1     		bne	.L7
 222 0098 E3E7     		b	.L6
 223              	.L14:
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
ARM GAS  /tmp/ccINcvPx.s 			page 17


 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 224              		.loc 1 172 7 is_stmt 1 view .LVU75
 225              		.loc 1 172 34 is_stmt 0 view .LVU76
 226 009a FFF7FEFF 		bl	CRYP_DataOut
 227              	.LVL26:
 228              		.loc 1 172 32 view .LVU77
 229 009e C8F80000 		str	r0, [r8]
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 230              		.loc 1 173 7 is_stmt 1 view .LVU78
 231              	.LVL27:
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 232              		.loc 1 174 7 view .LVU79
 233              		.loc 1 174 34 is_stmt 0 view .LVU80
 234 00a2 FFF7FEFF 		bl	CRYP_DataOut
 235              	.LVL28:
 236              		.loc 1 174 32 view .LVU81
 237 00a6 C8F80400 		str	r0, [r8, #4]
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 238              		.loc 1 175 7 is_stmt 1 view .LVU82
 239              		.loc 1 175 17 is_stmt 0 view .LVU83
 240 00aa 08F10808 		add	r8, r8, #8
 241              	.LVL29:
 242              		.loc 1 175 17 view .LVU84
 243 00ae DAE7     		b	.L8
 244              	.L9:
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 245              		.loc 1 180 3 is_stmt 1 view .LVU85
 246 00b0 0020     		movs	r0, #0
 247 00b2 FFF7FEFF 		bl	CRYP_Cmd
 248              	.LVL30:
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 249              		.loc 1 182 3 view .LVU86
 250              	.L4:
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 251              		.loc 1 183 1 is_stmt 0 view .LVU87
 252 00b6 3046     		mov	r0, r6
 253 00b8 0EB0     		add	sp, sp, #56
 254              		.cfi_def_cfa_offset 24
 255              		@ sp needed
 256 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 257              		.loc 1 183 1 view .LVU88
 258              		.cfi_endproc
 259              	.LFE123:
 261              		.section	.text.CRYP_DES_CBC,"ax",%progbits
 262              		.align	1
 263              		.global	CRYP_DES_CBC
 264              		.syntax unified
 265              		.thumb
ARM GAS  /tmp/ccINcvPx.s 			page 18


 266              		.thumb_func
 268              	CRYP_DES_CBC:
 269              	.LVL31:
 270              	.LFB124:
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in CBC Mode
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          This parameter can be one of the following values:
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  InitVectors: Initialisation Vectors used for DES algorithm.
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_CBC(uint8_t Mode, uint8_t Key[8], uint8_t InitVectors[8],
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 271              		.loc 1 202 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 8, pretend = 0, frame = 72
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		.loc 1 202 1 is_stmt 0 view .LVU90
 276 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 277              		.cfi_def_cfa_offset 28
 278              		.cfi_offset 4, -28
 279              		.cfi_offset 5, -24
 280              		.cfi_offset 6, -20
 281              		.cfi_offset 7, -16
 282              		.cfi_offset 8, -12
 283              		.cfi_offset 9, -8
 284              		.cfi_offset 14, -4
 285 0004 93B0     		sub	sp, sp, #76
 286              		.cfi_def_cfa_offset 104
 287 0006 8146     		mov	r9, r0
 288 0008 0E46     		mov	r6, r1
 289 000a 1546     		mov	r5, r2
 290 000c DDF86880 		ldr	r8, [sp, #104]
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 291              		.loc 1 203 3 is_stmt 1 view .LVU91
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 292              		.loc 1 204 3 view .LVU92
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
 293              		.loc 1 205 3 view .LVU93
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
 294              		.loc 1 206 3 view .LVU94
 295              		.loc 1 206 17 is_stmt 0 view .LVU95
 296 0010 0022     		movs	r2, #0
 297              	.LVL32:
 298              		.loc 1 206 17 view .LVU96
 299 0012 0192     		str	r2, [sp, #4]
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
ARM GAS  /tmp/ccINcvPx.s 			page 19


 300              		.loc 1 207 3 is_stmt 1 view .LVU97
 301              	.LVL33:
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 302              		.loc 1 208 3 view .LVU98
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 303              		.loc 1 209 3 view .LVU99
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 304              		.loc 1 210 3 view .LVU100
 305              		.loc 1 210 12 is_stmt 0 view .LVU101
 306 0014 1C46     		mov	r4, r3
 307              	.LVL34:
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 308              		.loc 1 211 3 is_stmt 1 view .LVU102
 309              		.loc 1 211 12 is_stmt 0 view .LVU103
 310 0016 1B9F     		ldr	r7, [sp, #108]
 311              	.LVL35:
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 312              		.loc 1 212 3 is_stmt 1 view .LVU104
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 313              		.loc 1 213 3 view .LVU105
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 314              		.loc 1 216 3 view .LVU106
 315 0018 06A8     		add	r0, sp, #24
 316              	.LVL36:
 317              		.loc 1 216 3 is_stmt 0 view .LVU107
 318 001a FFF7FEFF 		bl	CRYP_KeyStructInit
 319              	.LVL37:
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(Mode == MODE_ENCRYPT) /* DES encryption */
 320              		.loc 1 219 3 is_stmt 1 view .LVU108
 321              		.loc 1 219 5 is_stmt 0 view .LVU109
 322 001e B9F1010F 		cmp	r9, #1
 323 0022 26D0     		beq	.L27
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* DES decryption */
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 324              		.loc 1 225 6 is_stmt 1 view .LVU110
 325              		.loc 1 225 43 is_stmt 0 view .LVU111
 326 0024 0423     		movs	r3, #4
 327 0026 0E93     		str	r3, [sp, #56]
 328              	.L17:
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
 329              		.loc 1 228 3 is_stmt 1 view .LVU112
 330              		.loc 1 228 40 is_stmt 0 view .LVU113
 331 0028 1823     		movs	r3, #24
 332 002a 0F93     		str	r3, [sp, #60]
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 333              		.loc 1 229 3 is_stmt 1 view .LVU114
 334              		.loc 1 229 40 is_stmt 0 view .LVU115
ARM GAS  /tmp/ccINcvPx.s 			page 20


 335 002c 8023     		movs	r3, #128
 336 002e 1093     		str	r3, [sp, #64]
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 337              		.loc 1 230 3 is_stmt 1 view .LVU116
 338 0030 0EA8     		add	r0, sp, #56
 339 0032 FFF7FEFF 		bl	CRYP_Init
 340              	.LVL38:
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 341              		.loc 1 233 3 view .LVU117
 342              		.loc 1 233 45 is_stmt 0 view .LVU118
 343 0036 3368     		ldr	r3, [r6]
 344              	.LVL39:
 345              	.LBB18:
 346              	.LBI18:
 495:Drivers/CMSIS/Include/core_cmInstr.h **** {
 347              		.loc 2 495 57 is_stmt 1 view .LVU119
 348              	.LBB19:
 349              		.loc 2 498 3 view .LVU120
 350              		.loc 2 498 10 is_stmt 0 view .LVU121
 351 0038 1BBA     		rev	r3, r3
 352              	.LVL40:
 353              		.loc 2 498 10 view .LVU122
 354              	.LBE19:
 355              	.LBE18:
 356              		.loc 1 233 43 view .LVU123
 357 003a 0893     		str	r3, [sp, #32]
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 358              		.loc 1 234 3 is_stmt 1 view .LVU124
 359              	.LVL41:
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 360              		.loc 1 235 3 view .LVU125
 361              		.loc 1 235 45 is_stmt 0 view .LVU126
 362 003c 7368     		ldr	r3, [r6, #4]
 363              	.LVL42:
 364              	.LBB20:
 365              	.LBI20:
 495:Drivers/CMSIS/Include/core_cmInstr.h **** {
 366              		.loc 2 495 57 is_stmt 1 view .LVU127
 367              	.LBB21:
 368              		.loc 2 498 3 view .LVU128
 369              		.loc 2 498 10 is_stmt 0 view .LVU129
 370 003e 1BBA     		rev	r3, r3
 371              	.LVL43:
 372              		.loc 2 498 10 view .LVU130
 373              	.LBE21:
 374              	.LBE20:
 375              		.loc 1 235 43 view .LVU131
 376 0040 0993     		str	r3, [sp, #36]
 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 377              		.loc 1 236 3 is_stmt 1 view .LVU132
 378 0042 06A8     		add	r0, sp, #24
 379 0044 FFF7FEFF 		bl	CRYP_KeyInit
 380              	.LVL44:
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Initialization Vectors */
ARM GAS  /tmp/ccINcvPx.s 			page 21


 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 381              		.loc 1 239 3 view .LVU133
 382              		.loc 1 239 43 is_stmt 0 view .LVU134
 383 0048 2B68     		ldr	r3, [r5]
 384              	.LVL45:
 385              	.LBB22:
 386              	.LBI22:
 495:Drivers/CMSIS/Include/core_cmInstr.h **** {
 387              		.loc 2 495 57 is_stmt 1 view .LVU135
 388              	.LBB23:
 389              		.loc 2 498 3 view .LVU136
 390              		.loc 2 498 10 is_stmt 0 view .LVU137
 391 004a 1BBA     		rev	r3, r3
 392              	.LVL46:
 393              		.loc 2 498 10 view .LVU138
 394              	.LBE23:
 395              	.LBE22:
 396              		.loc 1 239 41 view .LVU139
 397 004c 0293     		str	r3, [sp, #8]
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ivaddr+=4;
 398              		.loc 1 240 3 is_stmt 1 view .LVU140
 399              	.LVL47:
 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 400              		.loc 1 241 3 view .LVU141
 401              		.loc 1 241 43 is_stmt 0 view .LVU142
 402 004e 6B68     		ldr	r3, [r5, #4]
 403              	.LVL48:
 404              	.LBB24:
 405              	.LBI24:
 495:Drivers/CMSIS/Include/core_cmInstr.h **** {
 406              		.loc 2 495 57 is_stmt 1 view .LVU143
 407              	.LBB25:
 408              		.loc 2 498 3 view .LVU144
 409              		.loc 2 498 10 is_stmt 0 view .LVU145
 410 0050 1BBA     		rev	r3, r3
 411              	.LVL49:
 412              		.loc 2 498 10 view .LVU146
 413              	.LBE25:
 414              	.LBE24:
 415              		.loc 1 241 41 view .LVU147
 416 0052 0393     		str	r3, [sp, #12]
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInit(&DES_CRYP_IVInitStructure);
 417              		.loc 1 242 3 is_stmt 1 view .LVU148
 418 0054 02A8     		add	r0, sp, #8
 419 0056 FFF7FEFF 		bl	CRYP_IVInit
 420              	.LVL50:
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 421              		.loc 1 245 3 view .LVU149
 422 005a FFF7FEFF 		bl	CRYP_FIFOFlush
 423              	.LVL51:
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 424              		.loc 1 248 3 view .LVU150
 425 005e 0120     		movs	r0, #1
ARM GAS  /tmp/ccINcvPx.s 			page 22


 426 0060 FFF7FEFF 		bl	CRYP_Cmd
 427              	.LVL52:
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(CRYP_GetCmdStatus() == DISABLE)
 428              		.loc 1 250 3 view .LVU151
 429              		.loc 1 250 6 is_stmt 0 view .LVU152
 430 0064 FFF7FEFF 		bl	CRYP_GetCmdStatus
 431              	.LVL53:
 432              		.loc 1 250 5 view .LVU153
 433 0068 0646     		mov	r6, r0
 434              	.LVL54:
 435              		.loc 1 250 5 view .LVU154
 436 006a 60B3     		cbz	r0, .L18
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* The CRYP peripheral clock is not enabled or the device doesn't embed 
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        the CRYP peripheral (please check the device sales type. */
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     return(ERROR);
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 437              		.loc 1 256 8 view .LVU155
 438 006c 0025     		movs	r5, #0
 439              	.LVL55:
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 440              		.loc 1 208 15 view .LVU156
 441 006e 0126     		movs	r6, #1
 442 0070 05E0     		b	.L19
 443              	.LVL56:
 444              	.L27:
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 445              		.loc 1 221 6 is_stmt 1 view .LVU157
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 446              		.loc 1 221 43 is_stmt 0 view .LVU158
 447 0072 0023     		movs	r3, #0
 448 0074 0E93     		str	r3, [sp, #56]
 449 0076 D7E7     		b	.L17
 450              	.LVL57:
 451              	.L20:
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Wait until the complete message has been processed */
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 452              		.loc 1 272 5 is_stmt 1 view .LVU159
 453              		.loc 1 272 8 is_stmt 0 view .LVU160
 454 0078 D0B1     		cbz	r0, .L28
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
ARM GAS  /tmp/ccINcvPx.s 			page 23


 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 455              		.loc 1 274 15 view .LVU161
 456 007a 0026     		movs	r6, #0
 457              	.LVL58:
 458              	.L22:
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 459              		.loc 1 256 48 is_stmt 1 discriminator 2 view .LVU162
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 460              		.loc 1 256 49 is_stmt 0 discriminator 2 view .LVU163
 461 007c 0835     		adds	r5, r5, #8
 462              	.LVL59:
 463              	.L19:
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 464              		.loc 1 256 12 is_stmt 1 discriminator 1 view .LVU164
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 465              		.loc 1 256 3 is_stmt 0 discriminator 1 view .LVU165
 466 007e 4545     		cmp	r5, r8
 467 0080 1ED2     		bcs	.L23
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 468              		.loc 1 256 25 discriminator 3 view .LVU166
 469 0082 EEB1     		cbz	r6, .L23
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 470              		.loc 1 259 5 is_stmt 1 view .LVU167
 471 0084 2068     		ldr	r0, [r4]
 472 0086 FFF7FEFF 		bl	CRYP_DataIn
 473              	.LVL60:
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 474              		.loc 1 260 5 view .LVU168
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 475              		.loc 1 261 5 view .LVU169
 476 008a 6068     		ldr	r0, [r4, #4]
 477 008c FFF7FEFF 		bl	CRYP_DataIn
 478              	.LVL61:
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 479              		.loc 1 262 5 view .LVU170
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 480              		.loc 1 262 14 is_stmt 0 view .LVU171
 481 0090 0834     		adds	r4, r4, #8
 482              	.LVL62:
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 483              		.loc 1 265 5 is_stmt 1 view .LVU172
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 484              		.loc 1 265 13 is_stmt 0 view .LVU173
 485 0092 0023     		movs	r3, #0
 486 0094 0193     		str	r3, [sp, #4]
 487              	.L21:
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 488              		.loc 1 266 5 is_stmt 1 discriminator 2 view .LVU174
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 489              		.loc 1 268 7 discriminator 2 view .LVU175
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 490              		.loc 1 268 20 is_stmt 0 discriminator 2 view .LVU176
 491 0096 1020     		movs	r0, #16
 492 0098 FFF7FEFF 		bl	CRYP_GetFlagStatus
 493              	.LVL63:
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 494              		.loc 1 269 7 is_stmt 1 discriminator 2 view .LVU177
ARM GAS  /tmp/ccINcvPx.s 			page 24


 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 495              		.loc 1 269 14 is_stmt 0 discriminator 2 view .LVU178
 496 009c 019A     		ldr	r2, [sp, #4]
 497 009e 0132     		adds	r2, r2, #1
 498 00a0 0192     		str	r2, [sp, #4]
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 499              		.loc 1 270 12 is_stmt 1 discriminator 2 view .LVU179
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 500              		.loc 1 270 22 is_stmt 0 discriminator 2 view .LVU180
 501 00a2 019B     		ldr	r3, [sp, #4]
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 502              		.loc 1 270 5 discriminator 2 view .LVU181
 503 00a4 B3F5803F 		cmp	r3, #65536
 504 00a8 E6D0     		beq	.L20
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 505              		.loc 1 270 42 discriminator 1 view .LVU182
 506 00aa 0028     		cmp	r0, #0
 507 00ac F3D1     		bne	.L21
 508 00ae E3E7     		b	.L20
 509              	.L28:
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 510              		.loc 1 279 7 is_stmt 1 view .LVU183
 511              		.loc 1 279 34 is_stmt 0 view .LVU184
 512 00b0 FFF7FEFF 		bl	CRYP_DataOut
 513              	.LVL64:
 514              		.loc 1 279 32 view .LVU185
 515 00b4 3860     		str	r0, [r7]
 280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 516              		.loc 1 280 7 is_stmt 1 view .LVU186
 517              	.LVL65:
 281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 518              		.loc 1 281 7 view .LVU187
 519              		.loc 1 281 34 is_stmt 0 view .LVU188
 520 00b6 FFF7FEFF 		bl	CRYP_DataOut
 521              	.LVL66:
 522              		.loc 1 281 32 view .LVU189
 523 00ba 7860     		str	r0, [r7, #4]
 282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 524              		.loc 1 282 7 is_stmt 1 view .LVU190
 525              		.loc 1 282 17 is_stmt 0 view .LVU191
 526 00bc 0837     		adds	r7, r7, #8
 527              	.LVL67:
 528              		.loc 1 282 17 view .LVU192
 529 00be DDE7     		b	.L22
 530              	.L23:
 283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 531              		.loc 1 287 3 is_stmt 1 view .LVU193
 532 00c0 0020     		movs	r0, #0
 533 00c2 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  /tmp/ccINcvPx.s 			page 25


 534              	.LVL68:
 288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 535              		.loc 1 289 3 view .LVU194
 536              	.L18:
 290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 537              		.loc 1 290 1 is_stmt 0 view .LVU195
 538 00c6 3046     		mov	r0, r6
 539 00c8 13B0     		add	sp, sp, #76
 540              		.cfi_def_cfa_offset 28
 541              		@ sp needed
 542 00ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 543              		.loc 1 290 1 view .LVU196
 544              		.cfi_endproc
 545              	.LFE124:
 547              		.text
 548              	.Letext0:
 549              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 550              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 551              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 552              		.file 6 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
ARM GAS  /tmp/ccINcvPx.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp_des.c
     /tmp/ccINcvPx.s:20     .text.CRYP_DES_ECB:0000000000000000 $t
     /tmp/ccINcvPx.s:26     .text.CRYP_DES_ECB:0000000000000000 CRYP_DES_ECB
     /tmp/ccINcvPx.s:262    .text.CRYP_DES_CBC:0000000000000000 $t
     /tmp/ccINcvPx.s:268    .text.CRYP_DES_CBC:0000000000000000 CRYP_DES_CBC

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_GetCmdStatus
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
