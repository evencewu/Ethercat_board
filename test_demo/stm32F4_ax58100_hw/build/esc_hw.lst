ARM GAS  /tmp/cc06wAZU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"esc_hw.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.esc_address,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	esc_address:
  26              	.LVL0:
  27              	.LFB123:
  28              		.file 1 "Lib/soes/hal/ax58100/esc_hw.c"
   1:Lib/soes/hal/ax58100/esc_hw.c **** /*
   2:Lib/soes/hal/ax58100/esc_hw.c ****  * Licensed under the GNU General Public License version 2 with exceptions. See
   3:Lib/soes/hal/ax58100/esc_hw.c ****  * LICENSE file in the project root for full license information
   4:Lib/soes/hal/ax58100/esc_hw.c ****  */
   5:Lib/soes/hal/ax58100/esc_hw.c **** 
   6:Lib/soes/hal/ax58100/esc_hw.c ****  /** \file
   7:Lib/soes/hal/ax58100/esc_hw.c ****  * \brief
   8:Lib/soes/hal/ax58100/esc_hw.c ****  * ESC hardware layer functions.
   9:Lib/soes/hal/ax58100/esc_hw.c ****  *
  10:Lib/soes/hal/ax58100/esc_hw.c ****  * Function to read and write commands to the ESC. Used to read/write ESC
  11:Lib/soes/hal/ax58100/esc_hw.c ****  * registers and memory.
  12:Lib/soes/hal/ax58100/esc_hw.c ****  */
  13:Lib/soes/hal/ax58100/esc_hw.c **** 
  14:Lib/soes/hal/ax58100/esc_hw.c **** #include <string.h>
  15:Lib/soes/hal/ax58100/esc_hw.c **** #include "esc.h"
  16:Lib/soes/hal/ax58100/esc_hw.c **** #include "esc_irq.h"
  17:Lib/soes/hal/ax58100/esc_hw.c **** #include "spi.h"
  18:Lib/soes/hal/ax58100/esc_hw.c **** #include "rst.h"
  19:Lib/soes/hal/ax58100/esc_hw.c **** 
  20:Lib/soes/hal/ax58100/esc_hw.c **** #define MAX_READ_SIZE   128
  21:Lib/soes/hal/ax58100/esc_hw.c **** 
  22:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_CMD_READ    0x02
  23:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_CMD_READWS  0x03
  24:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_CMD_WRITE   0x04
  25:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_CMD_NOP     0x00
  26:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_TERM        0xff
  27:Lib/soes/hal/ax58100/esc_hw.c **** #define ESC_NEXT        0x00
  28:Lib/soes/hal/ax58100/esc_hw.c **** 
  29:Lib/soes/hal/ax58100/esc_hw.c **** #define ESCREG_PDI_CONTROL         0x0140
  30:Lib/soes/hal/ax58100/esc_hw.c **** #define ESCREG_ESC_CONFIG          0x0141
ARM GAS  /tmp/cc06wAZU.s 			page 2


  31:Lib/soes/hal/ax58100/esc_hw.c **** #define DC_SYNC_OUT                0x04 
  32:Lib/soes/hal/ax58100/esc_hw.c **** #define ESCREG_CYCLIC_UNIT_CONTROL 0x0980
  33:Lib/soes/hal/ax58100/esc_hw.c **** #define SYNC_OUT_UNIT_CONTROL_MASK 0x01
  34:Lib/soes/hal/ax58100/esc_hw.c **** #define SYNC_OUT_ECAT_CONTROL      0x00
  35:Lib/soes/hal/ax58100/esc_hw.c **** #define SYNC_OUT_PDI_CONTROL       0x01
  36:Lib/soes/hal/ax58100/esc_hw.c **** #define ESCREG_SYNC0_CYCLE_TIME    0x09A0
  37:Lib/soes/hal/ax58100/esc_hw.c **** #define ESCREG_SYNC_START_TIME     0x0990
  38:Lib/soes/hal/ax58100/esc_hw.c **** // measured with 21MHz SPI PDI
  39:Lib/soes/hal/ax58100/esc_hw.c **** #define SYNC_START_OFFSET     2342840 
  40:Lib/soes/hal/ax58100/esc_hw.c ****    
  41:Lib/soes/hal/ax58100/esc_hw.c **** 
  42:Lib/soes/hal/ax58100/esc_hw.c **** static int et1100 = -1;
  43:Lib/soes/hal/ax58100/esc_hw.c **** static uint8_t read_termination[MAX_READ_SIZE] = { 0 };
  44:Lib/soes/hal/ax58100/esc_hw.c **** 
  45:Lib/soes/hal/ax58100/esc_hw.c **** #define GPIO_ECAT_RESET    1 /* specific function to hold ESC reset on startup
  46:Lib/soes/hal/ax58100/esc_hw.c ****                               * when emulating EEPROM
  47:Lib/soes/hal/ax58100/esc_hw.c ****                               */
  48:Lib/soes/hal/ax58100/esc_hw.c **** 
  49:Lib/soes/hal/ax58100/esc_hw.c **** static void esc_address (uint16_t address, uint8_t command)
  50:Lib/soes/hal/ax58100/esc_hw.c **** {
  29              		.loc 1 50 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 50 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              		.cfi_def_cfa_offset 16
  51:Lib/soes/hal/ax58100/esc_hw.c ****    /* Device is selected already.
  52:Lib/soes/hal/ax58100/esc_hw.c ****     * We use 2 bytes addressing.
  53:Lib/soes/hal/ax58100/esc_hw.c ****     */
  54:Lib/soes/hal/ax58100/esc_hw.c ****    uint8_t data[2];
  40              		.loc 1 54 4 is_stmt 1 view .LVU2
  55:Lib/soes/hal/ax58100/esc_hw.c **** 
  56:Lib/soes/hal/ax58100/esc_hw.c ****    /* address 12:5 */
  57:Lib/soes/hal/ax58100/esc_hw.c ****    data[0] = (address >> 5);
  41              		.loc 1 57 4 view .LVU3
  42              		.loc 1 57 12 is_stmt 0 view .LVU4
  43 0004 4309     		lsrs	r3, r0, #5
  44 0006 8DF80430 		strb	r3, [sp, #4]
  58:Lib/soes/hal/ax58100/esc_hw.c ****    /* address 4:0 and cmd 2:0 */
  59:Lib/soes/hal/ax58100/esc_hw.c ****    data[1] = ((address & 0x1F) << 3) | command;
  45              		.loc 1 59 4 is_stmt 1 view .LVU5
  46              		.loc 1 59 38 is_stmt 0 view .LVU6
  47 000a 41EAC000 		orr	r0, r1, r0, lsl #3
  48              	.LVL1:
  49              		.loc 1 59 12 view .LVU7
  50 000e 8DF80500 		strb	r0, [sp, #5]
  60:Lib/soes/hal/ax58100/esc_hw.c **** 
  61:Lib/soes/hal/ax58100/esc_hw.c ****    /* Write (and read AL interrupt register) */
  62:Lib/soes/hal/ax58100/esc_hw.c ****    spi_bidirectionally_transfer (et1100, (uint8_t *) &ESCvar.ALevent,
  51              		.loc 1 62 4 is_stmt 1 view .LVU8
  52 0012 084C     		ldr	r4, .L3
  53 0014 0223     		movs	r3, #2
ARM GAS  /tmp/cc06wAZU.s 			page 3


  54 0016 01AA     		add	r2, sp, #4
  55 0018 2146     		mov	r1, r4
  56              	.LVL2:
  57              		.loc 1 62 4 is_stmt 0 view .LVU9
  58 001a 0748     		ldr	r0, .L3+4
  59 001c 90F90000 		ldrsb	r0, [r0]
  60 0020 FFF7FEFF 		bl	spi_bidirectionally_transfer
  61              	.LVL3:
  63:Lib/soes/hal/ax58100/esc_hw.c ****                                  data, sizeof (data));
  64:Lib/soes/hal/ax58100/esc_hw.c ****    ESCvar.ALevent = etohs (ESCvar.ALevent);
  62              		.loc 1 64 4 is_stmt 1 view .LVU10
  63              		.loc 1 64 21 is_stmt 0 view .LVU11
  64 0024 2146     		mov	r1, r4
  65 0026 51F8E439 		ldr	r3, [r1], #-228
  66 002a 9BB2     		uxth	r3, r3
  67              		.loc 1 64 19 view .LVU12
  68 002c C1F8E430 		str	r3, [r1, #228]
  65:Lib/soes/hal/ax58100/esc_hw.c **** }
  69              		.loc 1 65 1 view .LVU13
  70 0030 02B0     		add	sp, sp, #8
  71              		.cfi_def_cfa_offset 8
  72              		@ sp needed
  73 0032 10BD     		pop	{r4, pc}
  74              	.L4:
  75              		.align	2
  76              	.L3:
  77 0034 E4000000 		.word	ESCvar+228
  78 0038 00000000 		.word	.LANCHOR0
  79              		.cfi_endproc
  80              	.LFE123:
  82              		.section	.text.ESC_read,"ax",%progbits
  83              		.align	1
  84              		.global	ESC_read
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	ESC_read:
  91              	.LVL4:
  92              	.LFB124:
  66:Lib/soes/hal/ax58100/esc_hw.c **** 
  67:Lib/soes/hal/ax58100/esc_hw.c **** /** ESC read function used by the Slave stack.
  68:Lib/soes/hal/ax58100/esc_hw.c ****  *
  69:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   address     = address of ESC register to read
  70:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[out]  buf         = pointer to buffer to read in
  71:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   len         = number of bytes to read
  72:Lib/soes/hal/ax58100/esc_hw.c ****  */
  73:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_read (uint16_t address, void *buf, uint16_t len)
  74:Lib/soes/hal/ax58100/esc_hw.c **** {
  93              		.loc 1 74 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Lib/soes/hal/ax58100/esc_hw.c ****    if (len > MAX_READ_SIZE) { return; }
  97              		.loc 1 75 4 view .LVU15
  98              		.loc 1 75 7 is_stmt 0 view .LVU16
  99 0000 802A     		cmp	r2, #128
ARM GAS  /tmp/cc06wAZU.s 			page 4


 100 0002 00D9     		bls	.L11
 101 0004 7047     		bx	lr
 102              	.L11:
  74:Lib/soes/hal/ax58100/esc_hw.c ****    if (len > MAX_READ_SIZE) { return; }
 103              		.loc 1 74 1 view .LVU17
 104 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 105              		.cfi_def_cfa_offset 24
 106              		.cfi_offset 3, -24
 107              		.cfi_offset 4, -20
 108              		.cfi_offset 5, -16
 109              		.cfi_offset 6, -12
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0008 0646     		mov	r6, r0
 113 000a 0D46     		mov	r5, r1
 114 000c 1446     		mov	r4, r2
  76:Lib/soes/hal/ax58100/esc_hw.c **** 
  77:Lib/soes/hal/ax58100/esc_hw.c ****    /* Select device. */
  78:Lib/soes/hal/ax58100/esc_hw.c ****    spi_select (et1100);
 115              		.loc 1 78 4 is_stmt 1 view .LVU18
 116 000e 0C4F     		ldr	r7, .L12
 117 0010 97F90000 		ldrsb	r0, [r7]
 118              	.LVL5:
 119              		.loc 1 78 4 is_stmt 0 view .LVU19
 120 0014 FFF7FEFF 		bl	spi_select
 121              	.LVL6:
  79:Lib/soes/hal/ax58100/esc_hw.c **** 
  80:Lib/soes/hal/ax58100/esc_hw.c ****    /* Write address and command to device. */
  81:Lib/soes/hal/ax58100/esc_hw.c ****    esc_address (address, ESC_CMD_READ);
 122              		.loc 1 81 4 is_stmt 1 view .LVU20
 123 0018 0221     		movs	r1, #2
 124 001a 3046     		mov	r0, r6
 125 001c FFF7FEFF 		bl	esc_address
 126              	.LVL7:
  82:Lib/soes/hal/ax58100/esc_hw.c **** 
  83:Lib/soes/hal/ax58100/esc_hw.c ****    /* Here we want to read data and keep MOSI low (0x00) during
  84:Lib/soes/hal/ax58100/esc_hw.c ****     * all bytes except the last one where we want to pull it high (0xFF).
  85:Lib/soes/hal/ax58100/esc_hw.c ****     * Read (and write termination bytes).
  86:Lib/soes/hal/ax58100/esc_hw.c ****     */
  87:Lib/soes/hal/ax58100/esc_hw.c ****    spi_bidirectionally_transfer (et1100, buf, read_termination +
 127              		.loc 1 87 4 view .LVU21
  88:Lib/soes/hal/ax58100/esc_hw.c ****                                  (MAX_READ_SIZE - len), len);
 128              		.loc 1 88 49 is_stmt 0 view .LVU22
 129 0020 C4F18002 		rsb	r2, r4, #128
  87:Lib/soes/hal/ax58100/esc_hw.c ****                                  (MAX_READ_SIZE - len), len);
 130              		.loc 1 87 4 view .LVU23
 131 0024 E3B2     		uxtb	r3, r4
 132 0026 0749     		ldr	r1, .L12+4
 133 0028 0A44     		add	r2, r2, r1
 134 002a 2946     		mov	r1, r5
 135 002c 97F90000 		ldrsb	r0, [r7]
 136 0030 FFF7FEFF 		bl	spi_bidirectionally_transfer
 137              	.LVL8:
  89:Lib/soes/hal/ax58100/esc_hw.c **** 
  90:Lib/soes/hal/ax58100/esc_hw.c ****    /* Un-select device. */
  91:Lib/soes/hal/ax58100/esc_hw.c ****    spi_unselect (et1100);
 138              		.loc 1 91 4 is_stmt 1 view .LVU24
ARM GAS  /tmp/cc06wAZU.s 			page 5


 139 0034 97F90000 		ldrsb	r0, [r7]
 140 0038 FFF7FEFF 		bl	spi_unselect
 141              	.LVL9:
  92:Lib/soes/hal/ax58100/esc_hw.c **** }
 142              		.loc 1 92 1 is_stmt 0 view .LVU25
 143 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 144              	.LVL10:
 145              	.L13:
 146              		.loc 1 92 1 view .LVU26
 147 003e 00BF     		.align	2
 148              	.L12:
 149 0040 00000000 		.word	.LANCHOR0
 150 0044 00000000 		.word	.LANCHOR1
 151              		.cfi_endproc
 152              	.LFE124:
 154              		.section	.text.ESC_write,"ax",%progbits
 155              		.align	1
 156              		.global	ESC_write
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	ESC_write:
 163              	.LVL11:
 164              	.LFB125:
  93:Lib/soes/hal/ax58100/esc_hw.c **** 
  94:Lib/soes/hal/ax58100/esc_hw.c **** /** ESC write function used by the Slave stack.
  95:Lib/soes/hal/ax58100/esc_hw.c ****  *
  96:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   address     = address of ESC register to write
  97:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[out]  buf         = pointer to buffer to write from
  98:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   len         = number of bytes to write
  99:Lib/soes/hal/ax58100/esc_hw.c ****  */
 100:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_write (uint16_t address, void *buf, uint16_t len)
 101:Lib/soes/hal/ax58100/esc_hw.c **** {
 165              		.loc 1 101 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		.loc 1 101 1 is_stmt 0 view .LVU28
 170 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 171              		.cfi_def_cfa_offset 24
 172              		.cfi_offset 3, -24
 173              		.cfi_offset 4, -20
 174              		.cfi_offset 5, -16
 175              		.cfi_offset 6, -12
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 0746     		mov	r7, r0
 179 0004 0D46     		mov	r5, r1
 180 0006 1646     		mov	r6, r2
 102:Lib/soes/hal/ax58100/esc_hw.c ****    /* Select device. */
 103:Lib/soes/hal/ax58100/esc_hw.c ****    spi_select (et1100);
 181              		.loc 1 103 4 is_stmt 1 view .LVU29
 182 0008 094C     		ldr	r4, .L16
 183 000a 94F90000 		ldrsb	r0, [r4]
 184              	.LVL12:
 185              		.loc 1 103 4 is_stmt 0 view .LVU30
ARM GAS  /tmp/cc06wAZU.s 			page 6


 186 000e FFF7FEFF 		bl	spi_select
 187              	.LVL13:
 104:Lib/soes/hal/ax58100/esc_hw.c ****    /* Write address and command to device. */
 105:Lib/soes/hal/ax58100/esc_hw.c ****    esc_address (address, ESC_CMD_WRITE);
 188              		.loc 1 105 4 is_stmt 1 view .LVU31
 189 0012 0421     		movs	r1, #4
 190 0014 3846     		mov	r0, r7
 191 0016 FFF7FEFF 		bl	esc_address
 192              	.LVL14:
 106:Lib/soes/hal/ax58100/esc_hw.c ****    /* Write data. */
 107:Lib/soes/hal/ax58100/esc_hw.c ****    spi_write (et1100, buf, len);
 193              		.loc 1 107 4 view .LVU32
 194 001a F2B2     		uxtb	r2, r6
 195 001c 2946     		mov	r1, r5
 196 001e 94F90000 		ldrsb	r0, [r4]
 197 0022 FFF7FEFF 		bl	spi_write
 198              	.LVL15:
 108:Lib/soes/hal/ax58100/esc_hw.c ****    /* Un-select device. */
 109:Lib/soes/hal/ax58100/esc_hw.c ****    spi_unselect (et1100);
 199              		.loc 1 109 4 view .LVU33
 200 0026 94F90000 		ldrsb	r0, [r4]
 201 002a FFF7FEFF 		bl	spi_unselect
 202              	.LVL16:
 110:Lib/soes/hal/ax58100/esc_hw.c **** }
 203              		.loc 1 110 1 is_stmt 0 view .LVU34
 204 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 205              	.LVL17:
 206              	.L17:
 207              		.loc 1 110 1 view .LVU35
 208              		.align	2
 209              	.L16:
 210 0030 00000000 		.word	.LANCHOR0
 211              		.cfi_endproc
 212              	.LFE125:
 214              		.section	.text.ESC_reset,"ax",%progbits
 215              		.align	1
 216              		.global	ESC_reset
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	ESC_reset:
 223              	.LFB127:
 111:Lib/soes/hal/ax58100/esc_hw.c **** 
 112:Lib/soes/hal/ax58100/esc_hw.c **** static void task_delay(uint32_t time_us)
 113:Lib/soes/hal/ax58100/esc_hw.c **** {
 114:Lib/soes/hal/ax58100/esc_hw.c ****    #define DELAY_1_uS      84   // todo tweak to used clock speed
 115:Lib/soes/hal/ax58100/esc_hw.c ****    uint32_t delay_ticks = DELAY_1_uS * time_us;
 116:Lib/soes/hal/ax58100/esc_hw.c **** 
 117:Lib/soes/hal/ax58100/esc_hw.c ****    for (int32_t i = 0; i < delay_ticks; ++i)
 118:Lib/soes/hal/ax58100/esc_hw.c ****    {
 119:Lib/soes/hal/ax58100/esc_hw.c ****       // do nothing
 120:Lib/soes/hal/ax58100/esc_hw.c ****    }
 121:Lib/soes/hal/ax58100/esc_hw.c **** }
 122:Lib/soes/hal/ax58100/esc_hw.c **** 
 123:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_reset (void)
 124:Lib/soes/hal/ax58100/esc_hw.c **** {
ARM GAS  /tmp/cc06wAZU.s 			page 7


 224              		.loc 1 124 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 00B5     		push	{lr}
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 14, -4
 231 0002 83B0     		sub	sp, sp, #12
 232              		.cfi_def_cfa_offset 16
 125:Lib/soes/hal/ax58100/esc_hw.c ****    volatile uint32_t timeout;
 233              		.loc 1 125 4 view .LVU37
 126:Lib/soes/hal/ax58100/esc_hw.c **** 
 127:Lib/soes/hal/ax58100/esc_hw.c ****    DPRINT("esc_reset_started\n");
 234              		.loc 1 127 33 view .LVU38
 128:Lib/soes/hal/ax58100/esc_hw.c ****    
 129:Lib/soes/hal/ax58100/esc_hw.c ****    rst_low();
 235              		.loc 1 129 4 view .LVU39
 236 0004 FFF7FEFF 		bl	rst_low
 237              	.LVL18:
 130:Lib/soes/hal/ax58100/esc_hw.c ****    task_delay(1000);
 238              		.loc 1 130 4 view .LVU40
 131:Lib/soes/hal/ax58100/esc_hw.c **** 
 132:Lib/soes/hal/ax58100/esc_hw.c ****    rst_check_start();
 239              		.loc 1 132 4 view .LVU41
 240 0008 FFF7FEFF 		bl	rst_check_start
 241              	.LVL19:
 133:Lib/soes/hal/ax58100/esc_hw.c **** 
 134:Lib/soes/hal/ax58100/esc_hw.c ****    while(timeout < 10000000)
 242              		.loc 1 134 4 view .LVU42
 243              		.loc 1 134 9 is_stmt 0 view .LVU43
 244 000c 02E0     		b	.L19
 245              	.L20:
 135:Lib/soes/hal/ax58100/esc_hw.c ****    {
 136:Lib/soes/hal/ax58100/esc_hw.c ****       /* ECAT releases resetpin, typically takes 40 us
 137:Lib/soes/hal/ax58100/esc_hw.c ****          Reset to operational PDI is max 70 ms */
 138:Lib/soes/hal/ax58100/esc_hw.c ****       if (is_esc_reset())
 139:Lib/soes/hal/ax58100/esc_hw.c ****       {
 140:Lib/soes/hal/ax58100/esc_hw.c ****          rst_high();
 141:Lib/soes/hal/ax58100/esc_hw.c ****          break; // OK
 142:Lib/soes/hal/ax58100/esc_hw.c ****       }
 143:Lib/soes/hal/ax58100/esc_hw.c ****       timeout++;
 246              		.loc 1 143 7 is_stmt 1 view .LVU44
 247              		.loc 1 143 14 is_stmt 0 view .LVU45
 248 000e 019B     		ldr	r3, [sp, #4]
 249 0010 0133     		adds	r3, r3, #1
 250 0012 0193     		str	r3, [sp, #4]
 144:Lib/soes/hal/ax58100/esc_hw.c ****       task_delay (30);
 251              		.loc 1 144 7 is_stmt 1 view .LVU46
 252              	.L19:
 134:Lib/soes/hal/ax58100/esc_hw.c ****    {
 253              		.loc 1 134 9 view .LVU47
 134:Lib/soes/hal/ax58100/esc_hw.c ****    {
 254              		.loc 1 134 18 is_stmt 0 view .LVU48
 255 0014 019A     		ldr	r2, [sp, #4]
 134:Lib/soes/hal/ax58100/esc_hw.c ****    {
 256              		.loc 1 134 9 view .LVU49
 257 0016 064B     		ldr	r3, .L24
ARM GAS  /tmp/cc06wAZU.s 			page 8


 258 0018 9A42     		cmp	r2, r3
 259 001a 05D2     		bcs	.L18
 138:Lib/soes/hal/ax58100/esc_hw.c ****       {
 260              		.loc 1 138 7 is_stmt 1 view .LVU50
 138:Lib/soes/hal/ax58100/esc_hw.c ****       {
 261              		.loc 1 138 11 is_stmt 0 view .LVU51
 262 001c FFF7FEFF 		bl	is_esc_reset
 263              	.LVL20:
 138:Lib/soes/hal/ax58100/esc_hw.c ****       {
 264              		.loc 1 138 10 view .LVU52
 265 0020 0028     		cmp	r0, #0
 266 0022 F4D0     		beq	.L20
 140:Lib/soes/hal/ax58100/esc_hw.c ****          break; // OK
 267              		.loc 1 140 10 is_stmt 1 view .LVU53
 268 0024 FFF7FEFF 		bl	rst_high
 269              	.LVL21:
 141:Lib/soes/hal/ax58100/esc_hw.c ****       }
 270              		.loc 1 141 10 view .LVU54
 271              	.L18:
 145:Lib/soes/hal/ax58100/esc_hw.c ****    }
 146:Lib/soes/hal/ax58100/esc_hw.c ****    DPRINT("esc_reset_ended\n");
 147:Lib/soes/hal/ax58100/esc_hw.c **** }
 272              		.loc 1 147 1 is_stmt 0 view .LVU55
 273 0028 03B0     		add	sp, sp, #12
 274              		.cfi_def_cfa_offset 4
 275              		@ sp needed
 276 002a 5DF804FB 		ldr	pc, [sp], #4
 277              	.L25:
 278 002e 00BF     		.align	2
 279              	.L24:
 280 0030 80969800 		.word	10000000
 281              		.cfi_endproc
 282              	.LFE127:
 284              		.section	.text.ESC_init,"ax",%progbits
 285              		.align	1
 286              		.global	ESC_init
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu fpv4-sp-d16
 292              	ESC_init:
 293              	.LVL22:
 294              	.LFB128:
 148:Lib/soes/hal/ax58100/esc_hw.c **** 
 149:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_init (const esc_cfg_t * config)
 150:Lib/soes/hal/ax58100/esc_hw.c **** {
 295              		.loc 1 150 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		.loc 1 150 1 is_stmt 0 view .LVU57
 300 0000 08B5     		push	{r3, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 151:Lib/soes/hal/ax58100/esc_hw.c ****    rst_setup();
 304              		.loc 1 151 4 is_stmt 1 view .LVU58
ARM GAS  /tmp/cc06wAZU.s 			page 9


 305 0002 FFF7FEFF 		bl	rst_setup
 306              	.LVL23:
 152:Lib/soes/hal/ax58100/esc_hw.c ****    rst_high();
 307              		.loc 1 152 4 view .LVU59
 308 0006 FFF7FEFF 		bl	rst_high
 309              	.LVL24:
 153:Lib/soes/hal/ax58100/esc_hw.c ****    spi_setup();
 310              		.loc 1 153 4 view .LVU60
 311 000a FFF7FEFF 		bl	spi_setup
 312              	.LVL25:
 154:Lib/soes/hal/ax58100/esc_hw.c ****    et1100 = 1;
 313              		.loc 1 154 4 view .LVU61
 314              		.loc 1 154 11 is_stmt 0 view .LVU62
 315 000e 044B     		ldr	r3, .L28
 316 0010 0122     		movs	r2, #1
 317 0012 1A60     		str	r2, [r3]
 155:Lib/soes/hal/ax58100/esc_hw.c ****    read_termination[MAX_READ_SIZE - 1] = 0xFF;
 318              		.loc 1 155 4 is_stmt 1 view .LVU63
 319              		.loc 1 155 40 is_stmt 0 view .LVU64
 320 0014 034B     		ldr	r3, .L28+4
 321 0016 FF22     		movs	r2, #255
 322 0018 83F87F20 		strb	r2, [r3, #127]
 156:Lib/soes/hal/ax58100/esc_hw.c **** 
 157:Lib/soes/hal/ax58100/esc_hw.c ****    // uint8_t device_symbol = 0;
 158:Lib/soes/hal/ax58100/esc_hw.c ****    // while (device_symbol == 0)
 159:Lib/soes/hal/ax58100/esc_hw.c ****    // {
 160:Lib/soes/hal/ax58100/esc_hw.c ****    //    ESC_read(et1100, (void *)&device_symbol, sizeof(uint8_t));
 161:Lib/soes/hal/ax58100/esc_hw.c ****    //    if ((device_symbol != 0) || (device_symbol != 0xFF)) 
 162:Lib/soes/hal/ax58100/esc_hw.c ****    //    {
 163:Lib/soes/hal/ax58100/esc_hw.c ****    //       DPRINT("ESC init successful");
 164:Lib/soes/hal/ax58100/esc_hw.c ****    //    }
 165:Lib/soes/hal/ax58100/esc_hw.c ****    // }
 166:Lib/soes/hal/ax58100/esc_hw.c ****    // task_delay(1000); // allow ESC to load EEPROM, or if EEP_DONE can be read
 167:Lib/soes/hal/ax58100/esc_hw.c ****    // then wait while EEP_DONE is low.
 168:Lib/soes/hal/ax58100/esc_hw.c **** }
 323              		.loc 1 168 1 view .LVU65
 324 001c 08BD     		pop	{r3, pc}
 325              	.L29:
 326 001e 00BF     		.align	2
 327              	.L28:
 328 0020 00000000 		.word	.LANCHOR0
 329 0024 00000000 		.word	.LANCHOR1
 330              		.cfi_endproc
 331              	.LFE128:
 333              		.section	.text.ESC_interrupt_enable,"ax",%progbits
 334              		.align	1
 335              		.global	ESC_interrupt_enable
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	ESC_interrupt_enable:
 342              	.LVL26:
 343              	.LFB129:
 169:Lib/soes/hal/ax58100/esc_hw.c **** 
 170:Lib/soes/hal/ax58100/esc_hw.c **** /** ESC interrupt enable function by the Slave stack in IRQ mode.
 171:Lib/soes/hal/ax58100/esc_hw.c ****  *
ARM GAS  /tmp/cc06wAZU.s 			page 10


 172:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   mask     = of interrupts to enable
 173:Lib/soes/hal/ax58100/esc_hw.c ****  */
 174:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_interrupt_enable (uint32_t mask)
 175:Lib/soes/hal/ax58100/esc_hw.c **** {
 344              		.loc 1 175 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		.loc 1 175 1 is_stmt 0 view .LVU67
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 353 0002 0446     		mov	r4, r0
 176:Lib/soes/hal/ax58100/esc_hw.c ****    // PDI interrupt
 177:Lib/soes/hal/ax58100/esc_hw.c ****    EXTILine5_Config();
 354              		.loc 1 177 4 is_stmt 1 view .LVU68
 355 0004 FFF7FEFF 		bl	EXTILine5_Config
 356              	.LVL27:
 178:Lib/soes/hal/ax58100/esc_hw.c **** 
 179:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_SYNC0 & mask)
 357              		.loc 1 179 4 view .LVU69
 358              		.loc 1 179 7 is_stmt 0 view .LVU70
 359 0008 14F0040F 		tst	r4, #4
 360 000c 05D1     		bne	.L33
 361              	.L31:
 180:Lib/soes/hal/ax58100/esc_hw.c ****    {
 181:Lib/soes/hal/ax58100/esc_hw.c ****       EXTILine0_Config();
 182:Lib/soes/hal/ax58100/esc_hw.c ****       mask &= ~ESCREG_ALEVENT_DC_SYNC0;
 183:Lib/soes/hal/ax58100/esc_hw.c ****    }
 184:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_SYNC1 & mask)
 362              		.loc 1 184 4 is_stmt 1 view .LVU71
 185:Lib/soes/hal/ax58100/esc_hw.c ****    {
 186:Lib/soes/hal/ax58100/esc_hw.c ****    //    mask &= ~ESCREG_ALEVENT_DC_SYNC1;
 187:Lib/soes/hal/ax58100/esc_hw.c ****    }
 363              		.loc 1 187 4 view .LVU72
 188:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_LATCH & mask)
 364              		.loc 1 188 4 view .LVU73
 189:Lib/soes/hal/ax58100/esc_hw.c ****    {
 190:Lib/soes/hal/ax58100/esc_hw.c ****       // mask &= ~ESCREG_ALEVENT_DC_LATCH;
 191:Lib/soes/hal/ax58100/esc_hw.c ****    }
 365              		.loc 1 191 4 view .LVU74
 192:Lib/soes/hal/ax58100/esc_hw.c ****    
 193:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_ALeventmaskwrite(ESC_ALeventmaskread() | mask);
 366              		.loc 1 193 4 view .LVU75
 367              		.loc 1 193 25 is_stmt 0 view .LVU76
 368 000e FFF7FEFF 		bl	ESC_ALeventmaskread
 369              	.LVL28:
 370              		.loc 1 193 4 view .LVU77
 371 0012 2043     		orrs	r0, r0, r4
 372 0014 FFF7FEFF 		bl	ESC_ALeventmaskwrite
 373              	.LVL29:
 194:Lib/soes/hal/ax58100/esc_hw.c **** }
 374              		.loc 1 194 1 view .LVU78
 375 0018 10BD     		pop	{r4, pc}
 376              	.LVL30:
 377              	.L33:
ARM GAS  /tmp/cc06wAZU.s 			page 11


 181:Lib/soes/hal/ax58100/esc_hw.c ****       mask &= ~ESCREG_ALEVENT_DC_SYNC0;
 378              		.loc 1 181 7 is_stmt 1 view .LVU79
 379 001a FFF7FEFF 		bl	EXTILine0_Config
 380              	.LVL31:
 182:Lib/soes/hal/ax58100/esc_hw.c ****    }
 381              		.loc 1 182 7 view .LVU80
 182:Lib/soes/hal/ax58100/esc_hw.c ****    }
 382              		.loc 1 182 12 is_stmt 0 view .LVU81
 383 001e 24F00404 		bic	r4, r4, #4
 384              	.LVL32:
 182:Lib/soes/hal/ax58100/esc_hw.c ****    }
 385              		.loc 1 182 12 view .LVU82
 386 0022 F4E7     		b	.L31
 387              		.cfi_endproc
 388              	.LFE129:
 390              		.section	.text.ESC_interrupt_disable,"ax",%progbits
 391              		.align	1
 392              		.global	ESC_interrupt_disable
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	ESC_interrupt_disable:
 399              	.LVL33:
 400              	.LFB130:
 195:Lib/soes/hal/ax58100/esc_hw.c **** 
 196:Lib/soes/hal/ax58100/esc_hw.c **** /** ESC interrupt disable function by the Slave stack in IRQ mode.
 197:Lib/soes/hal/ax58100/esc_hw.c ****  *
 198:Lib/soes/hal/ax58100/esc_hw.c ****  * @param[in]   mask     = interrupts to disable
 199:Lib/soes/hal/ax58100/esc_hw.c ****  */
 200:Lib/soes/hal/ax58100/esc_hw.c **** void ESC_interrupt_disable (uint32_t mask)
 201:Lib/soes/hal/ax58100/esc_hw.c **** {
 401              		.loc 1 201 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		.loc 1 201 1 is_stmt 0 view .LVU84
 406 0000 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 410 0002 0446     		mov	r4, r0
 202:Lib/soes/hal/ax58100/esc_hw.c ****    EXTILine5_Disable();
 411              		.loc 1 202 4 is_stmt 1 view .LVU85
 412 0004 FFF7FEFF 		bl	EXTILine5_Disable
 413              	.LVL34:
 203:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_SYNC0 & mask)
 414              		.loc 1 203 4 view .LVU86
 415              		.loc 1 203 7 is_stmt 0 view .LVU87
 416 0008 14F0040F 		tst	r4, #4
 417 000c 06D1     		bne	.L37
 418              	.L35:
 204:Lib/soes/hal/ax58100/esc_hw.c ****    {
 205:Lib/soes/hal/ax58100/esc_hw.c ****       EXTILine0_Disable();
 206:Lib/soes/hal/ax58100/esc_hw.c ****       mask &= ~ESCREG_ALEVENT_DC_SYNC0;
 207:Lib/soes/hal/ax58100/esc_hw.c ****    }
 208:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_SYNC1 & mask)
ARM GAS  /tmp/cc06wAZU.s 			page 12


 419              		.loc 1 208 4 is_stmt 1 view .LVU88
 209:Lib/soes/hal/ax58100/esc_hw.c ****    {
 210:Lib/soes/hal/ax58100/esc_hw.c ****    //    mask &= ~ESCREG_ALEVENT_DC_SYNC1;
 211:Lib/soes/hal/ax58100/esc_hw.c ****    }
 420              		.loc 1 211 4 view .LVU89
 212:Lib/soes/hal/ax58100/esc_hw.c ****    if (ESCREG_ALEVENT_DC_LATCH & mask)
 421              		.loc 1 212 4 view .LVU90
 213:Lib/soes/hal/ax58100/esc_hw.c ****    {
 214:Lib/soes/hal/ax58100/esc_hw.c ****    //    mask &= ~ESCREG_ALEVENT_DC_LATCH;
 215:Lib/soes/hal/ax58100/esc_hw.c ****    }
 422              		.loc 1 215 4 view .LVU91
 216:Lib/soes/hal/ax58100/esc_hw.c **** 
 217:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_ALeventmaskwrite(~mask & ESC_ALeventmaskread());
 423              		.loc 1 217 4 view .LVU92
 424              		.loc 1 217 25 is_stmt 0 view .LVU93
 425 000e E443     		mvns	r4, r4
 426              	.LVL35:
 427              		.loc 1 217 33 view .LVU94
 428 0010 FFF7FEFF 		bl	ESC_ALeventmaskread
 429              	.LVL36:
 430              		.loc 1 217 4 view .LVU95
 431 0014 2040     		ands	r0, r0, r4
 432 0016 FFF7FEFF 		bl	ESC_ALeventmaskwrite
 433              	.LVL37:
 218:Lib/soes/hal/ax58100/esc_hw.c **** }
 434              		.loc 1 218 1 view .LVU96
 435 001a 10BD     		pop	{r4, pc}
 436              	.LVL38:
 437              	.L37:
 205:Lib/soes/hal/ax58100/esc_hw.c ****       mask &= ~ESCREG_ALEVENT_DC_SYNC0;
 438              		.loc 1 205 7 is_stmt 1 view .LVU97
 439 001c FFF7FEFF 		bl	EXTILine0_Disable
 440              	.LVL39:
 206:Lib/soes/hal/ax58100/esc_hw.c ****    }
 441              		.loc 1 206 7 view .LVU98
 206:Lib/soes/hal/ax58100/esc_hw.c ****    }
 442              		.loc 1 206 12 is_stmt 0 view .LVU99
 443 0020 24F00404 		bic	r4, r4, #4
 444              	.LVL40:
 206:Lib/soes/hal/ax58100/esc_hw.c ****    }
 445              		.loc 1 206 12 view .LVU100
 446 0024 F3E7     		b	.L35
 447              		.cfi_endproc
 448              	.LFE130:
 450              		.section	.text.ESC_enable_DC,"ax",%progbits
 451              		.align	1
 452              		.global	ESC_enable_DC
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	ESC_enable_DC:
 459              	.LFB131:
 219:Lib/soes/hal/ax58100/esc_hw.c **** 
 220:Lib/soes/hal/ax58100/esc_hw.c **** /** ESC enable Distributed Clocks (DC)
 221:Lib/soes/hal/ax58100/esc_hw.c ****  *
 222:Lib/soes/hal/ax58100/esc_hw.c ****  * @return  SYNC0 cycle time
ARM GAS  /tmp/cc06wAZU.s 			page 13


 223:Lib/soes/hal/ax58100/esc_hw.c ****  */
 224:Lib/soes/hal/ax58100/esc_hw.c **** uint32_t ESC_enable_DC ()
 225:Lib/soes/hal/ax58100/esc_hw.c **** {
 460              		.loc 1 225 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 16
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 10B5     		push	{r4, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 84B0     		sub	sp, sp, #16
 469              		.cfi_def_cfa_offset 24
 226:Lib/soes/hal/ax58100/esc_hw.c ****    uint8_t data = 0x00;
 470              		.loc 1 226 4 view .LVU102
 471              		.loc 1 226 12 is_stmt 0 view .LVU103
 472 0004 0023     		movs	r3, #0
 473 0006 8DF80F30 		strb	r3, [sp, #15]
 227:Lib/soes/hal/ax58100/esc_hw.c ****    
 228:Lib/soes/hal/ax58100/esc_hw.c ****    // check DC Sync Out bit: 0x140:10
 229:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_read (ESCREG_ESC_CONFIG, &data, sizeof(data));
 474              		.loc 1 229 4 is_stmt 1 view .LVU104
 475 000a 0122     		movs	r2, #1
 476 000c 0DF10F01 		add	r1, sp, #15
 477 0010 40F24110 		movw	r0, #321
 478 0014 FFF7FEFF 		bl	ESC_read
 479              	.LVL41:
 230:Lib/soes/hal/ax58100/esc_hw.c ****    if (!(data & DC_SYNC_OUT)) {
 480              		.loc 1 230 4 view .LVU105
 481              		.loc 1 230 15 is_stmt 0 view .LVU106
 482 0018 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 483              		.loc 1 230 7 view .LVU107
 484 001c 13F0040F 		tst	r3, #4
 485 0020 02D1     		bne	.L45
 231:Lib/soes/hal/ax58100/esc_hw.c ****       return 0; // DC sync is not enabled in ESI
 486              		.loc 1 231 14 view .LVU108
 487 0022 0020     		movs	r0, #0
 488              	.L38:
 232:Lib/soes/hal/ax58100/esc_hw.c ****    }
 233:Lib/soes/hal/ax58100/esc_hw.c **** 
 234:Lib/soes/hal/ax58100/esc_hw.c ****    // read set SYNC0 Cycle Time from 0x09A0
 235:Lib/soes/hal/ax58100/esc_hw.c ****    uint32_t setsync0cycleTime = 0;
 236:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_read (ESCREG_SYNC0_CYCLE_TIME, &setsync0cycleTime, sizeof(uint32_t));
 237:Lib/soes/hal/ax58100/esc_hw.c ****    setsync0cycleTime = etohl (setsync0cycleTime);
 238:Lib/soes/hal/ax58100/esc_hw.c **** 
 239:Lib/soes/hal/ax58100/esc_hw.c ****    // check Sync Unit assign 0x0980:0 ( 0 for ECAT, 1 for PDI )
 240:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_read (ESCREG_CYCLIC_UNIT_CONTROL, &data, sizeof(data));
 241:Lib/soes/hal/ax58100/esc_hw.c ****    if (data == SYNC_OUT_PDI_CONTROL) {
 242:Lib/soes/hal/ax58100/esc_hw.c ****       // Sync Unit assigned to PDI, configuration needs to be finished by slave
 243:Lib/soes/hal/ax58100/esc_hw.c ****    
 244:Lib/soes/hal/ax58100/esc_hw.c ****       // set sync start time: read system time, add offset for writing start time and activation
 245:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_read (ESCREG_LOCALTIME, (void *) &ESCvar.Time, sizeof (ESCvar.Time));
 246:Lib/soes/hal/ax58100/esc_hw.c ****       ESCvar.Time = etohl (ESCvar.Time);
 247:Lib/soes/hal/ax58100/esc_hw.c ****       uint32_t startTime = ESCvar.Time + SYNC_START_OFFSET;
 248:Lib/soes/hal/ax58100/esc_hw.c **** 
 249:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_write (ESCREG_SYNC_START_TIME, &startTime, sizeof(startTime)); 
 250:Lib/soes/hal/ax58100/esc_hw.c **** 
ARM GAS  /tmp/cc06wAZU.s 			page 14


 251:Lib/soes/hal/ax58100/esc_hw.c ****       // activate cyclic operation and SYNC0
 252:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 253:Lib/soes/hal/ax58100/esc_hw.c ****       data = data | ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_SYNC0_EN;
 254:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_write (ESCREG_SYNC_ACT, &data, sizeof(data));
 255:Lib/soes/hal/ax58100/esc_hw.c ****       data = 0x00;
 256:Lib/soes/hal/ax58100/esc_hw.c ****       while (! (data & (ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_SYNC0_EN))) {
 257:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 258:Lib/soes/hal/ax58100/esc_hw.c ****       }
 259:Lib/soes/hal/ax58100/esc_hw.c ****    }
 260:Lib/soes/hal/ax58100/esc_hw.c **** 
 261:Lib/soes/hal/ax58100/esc_hw.c ****    return setsync0cycleTime;
 262:Lib/soes/hal/ax58100/esc_hw.c **** }
 489              		.loc 1 262 1 view .LVU109
 490 0024 04B0     		add	sp, sp, #16
 491              		.cfi_remember_state
 492              		.cfi_def_cfa_offset 8
 493              		@ sp needed
 494 0026 10BD     		pop	{r4, pc}
 495              	.L45:
 496              		.cfi_restore_state
 235:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_read (ESCREG_SYNC0_CYCLE_TIME, &setsync0cycleTime, sizeof(uint32_t));
 497              		.loc 1 235 4 is_stmt 1 view .LVU110
 235:Lib/soes/hal/ax58100/esc_hw.c ****    ESC_read (ESCREG_SYNC0_CYCLE_TIME, &setsync0cycleTime, sizeof(uint32_t));
 498              		.loc 1 235 13 is_stmt 0 view .LVU111
 499 0028 0023     		movs	r3, #0
 500 002a 0293     		str	r3, [sp, #8]
 236:Lib/soes/hal/ax58100/esc_hw.c ****    setsync0cycleTime = etohl (setsync0cycleTime);
 501              		.loc 1 236 4 is_stmt 1 view .LVU112
 502 002c 0422     		movs	r2, #4
 503 002e 02A9     		add	r1, sp, #8
 504 0030 4FF41A60 		mov	r0, #2464
 505 0034 FFF7FEFF 		bl	ESC_read
 506              	.LVL42:
 237:Lib/soes/hal/ax58100/esc_hw.c **** 
 507              		.loc 1 237 4 view .LVU113
 240:Lib/soes/hal/ax58100/esc_hw.c ****    if (data == SYNC_OUT_PDI_CONTROL) {
 508              		.loc 1 240 4 view .LVU114
 509 0038 0122     		movs	r2, #1
 510 003a 0DF10F01 		add	r1, sp, #15
 511 003e 4FF41860 		mov	r0, #2432
 512 0042 FFF7FEFF 		bl	ESC_read
 513              	.LVL43:
 241:Lib/soes/hal/ax58100/esc_hw.c ****       // Sync Unit assigned to PDI, configuration needs to be finished by slave
 514              		.loc 1 241 4 view .LVU115
 241:Lib/soes/hal/ax58100/esc_hw.c ****       // Sync Unit assigned to PDI, configuration needs to be finished by slave
 515              		.loc 1 241 13 is_stmt 0 view .LVU116
 516 0046 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 241:Lib/soes/hal/ax58100/esc_hw.c ****       // Sync Unit assigned to PDI, configuration needs to be finished by slave
 517              		.loc 1 241 7 view .LVU117
 518 004a 012B     		cmp	r3, #1
 519 004c 01D0     		beq	.L46
 520              	.L40:
 261:Lib/soes/hal/ax58100/esc_hw.c **** }
 521              		.loc 1 261 4 is_stmt 1 view .LVU118
 261:Lib/soes/hal/ax58100/esc_hw.c **** }
 522              		.loc 1 261 11 is_stmt 0 view .LVU119
 523 004e 0298     		ldr	r0, [sp, #8]
ARM GAS  /tmp/cc06wAZU.s 			page 15


 524 0050 E8E7     		b	.L38
 525              	.L46:
 526              	.LBB2:
 245:Lib/soes/hal/ax58100/esc_hw.c ****       ESCvar.Time = etohl (ESCvar.Time);
 527              		.loc 1 245 7 is_stmt 1 view .LVU120
 528 0052 1E4C     		ldr	r4, .L47
 529 0054 0422     		movs	r2, #4
 530 0056 2146     		mov	r1, r4
 531 0058 4FF41160 		mov	r0, #2320
 532 005c FFF7FEFF 		bl	ESC_read
 533              	.LVL44:
 246:Lib/soes/hal/ax58100/esc_hw.c ****       uint32_t startTime = ESCvar.Time + SYNC_START_OFFSET;
 534              		.loc 1 246 7 view .LVU121
 246:Lib/soes/hal/ax58100/esc_hw.c ****       uint32_t startTime = ESCvar.Time + SYNC_START_OFFSET;
 535              		.loc 1 246 21 is_stmt 0 view .LVU122
 536 0060 2146     		mov	r1, r4
 537 0062 51F8E039 		ldr	r3, [r1], #-224
 246:Lib/soes/hal/ax58100/esc_hw.c ****       uint32_t startTime = ESCvar.Time + SYNC_START_OFFSET;
 538              		.loc 1 246 19 view .LVU123
 539 0066 C1F8E030 		str	r3, [r1, #224]
 247:Lib/soes/hal/ax58100/esc_hw.c **** 
 540              		.loc 1 247 7 is_stmt 1 view .LVU124
 247:Lib/soes/hal/ax58100/esc_hw.c **** 
 541              		.loc 1 247 34 is_stmt 0 view .LVU125
 542 006a D1F8E020 		ldr	r2, [r1, #224]
 247:Lib/soes/hal/ax58100/esc_hw.c **** 
 543              		.loc 1 247 40 view .LVU126
 544 006e 184B     		ldr	r3, .L47+4
 545 0070 1344     		add	r3, r3, r2
 247:Lib/soes/hal/ax58100/esc_hw.c **** 
 546              		.loc 1 247 16 view .LVU127
 547 0072 0193     		str	r3, [sp, #4]
 249:Lib/soes/hal/ax58100/esc_hw.c **** 
 548              		.loc 1 249 7 is_stmt 1 view .LVU128
 549 0074 0422     		movs	r2, #4
 550 0076 0DEB0201 		add	r1, sp, r2
 551 007a 4FF41960 		mov	r0, #2448
 552 007e FFF7FEFF 		bl	ESC_write
 553              	.LVL45:
 252:Lib/soes/hal/ax58100/esc_hw.c ****       data = data | ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_SYNC0_EN;
 554              		.loc 1 252 7 view .LVU129
 555 0082 0122     		movs	r2, #1
 556 0084 0DF10F01 		add	r1, sp, #15
 557 0088 40F68110 		movw	r0, #2433
 558 008c FFF7FEFF 		bl	ESC_read
 559              	.LVL46:
 253:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_write (ESCREG_SYNC_ACT, &data, sizeof(data));
 560              		.loc 1 253 7 view .LVU130
 253:Lib/soes/hal/ax58100/esc_hw.c ****       ESC_write (ESCREG_SYNC_ACT, &data, sizeof(data));
 561              		.loc 1 253 12 is_stmt 0 view .LVU131
 562 0090 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 563 0094 43F00303 		orr	r3, r3, #3
 564 0098 8DF80F30 		strb	r3, [sp, #15]
 254:Lib/soes/hal/ax58100/esc_hw.c ****       data = 0x00;
 565              		.loc 1 254 7 is_stmt 1 view .LVU132
 566 009c 0122     		movs	r2, #1
 567 009e 0DF10F01 		add	r1, sp, #15
ARM GAS  /tmp/cc06wAZU.s 			page 16


 568 00a2 40F68110 		movw	r0, #2433
 569 00a6 FFF7FEFF 		bl	ESC_write
 570              	.LVL47:
 255:Lib/soes/hal/ax58100/esc_hw.c ****       while (! (data & (ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_SYNC0_EN))) {
 571              		.loc 1 255 7 view .LVU133
 255:Lib/soes/hal/ax58100/esc_hw.c ****       while (! (data & (ESCREG_SYNC_ACT_ACTIVATED | ESCREG_SYNC_SYNC0_EN))) {
 572              		.loc 1 255 12 is_stmt 0 view .LVU134
 573 00aa 0023     		movs	r3, #0
 574 00ac 8DF80F30 		strb	r3, [sp, #15]
 256:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 575              		.loc 1 256 7 is_stmt 1 view .LVU135
 256:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 576              		.loc 1 256 13 is_stmt 0 view .LVU136
 577 00b0 06E0     		b	.L41
 578              	.L42:
 257:Lib/soes/hal/ax58100/esc_hw.c ****       }
 579              		.loc 1 257 10 is_stmt 1 view .LVU137
 580 00b2 0122     		movs	r2, #1
 581 00b4 0DF10F01 		add	r1, sp, #15
 582 00b8 40F68110 		movw	r0, #2433
 583 00bc FFF7FEFF 		bl	ESC_read
 584              	.LVL48:
 585              	.L41:
 256:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 586              		.loc 1 256 13 view .LVU138
 256:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 587              		.loc 1 256 22 is_stmt 0 view .LVU139
 588 00c0 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 256:Lib/soes/hal/ax58100/esc_hw.c ****          ESC_read (ESCREG_SYNC_ACT, &data, sizeof(data));
 589              		.loc 1 256 13 view .LVU140
 590 00c4 13F0030F 		tst	r3, #3
 591 00c8 F3D0     		beq	.L42
 592 00ca C0E7     		b	.L40
 593              	.L48:
 594              		.align	2
 595              	.L47:
 596 00cc E0000000 		.word	ESCvar+224
 597 00d0 B8BF2300 		.word	2342840
 598              	.LBE2:
 599              		.cfi_endproc
 600              	.LFE131:
 602              		.section	.bss.read_termination,"aw",%nobits
 603              		.align	2
 604              		.set	.LANCHOR1,. + 0
 607              	read_termination:
 608 0000 00000000 		.space	128
 608      00000000 
 608      00000000 
 608      00000000 
 608      00000000 
 609              		.section	.data.et1100,"aw"
 610              		.align	2
 611              		.set	.LANCHOR0,. + 0
 614              	et1100:
 615 0000 FFFFFFFF 		.word	-1
 616              		.text
 617              	.Letext0:
ARM GAS  /tmp/cc06wAZU.s 			page 17


 618              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 619              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 620              		.file 4 "Lib/soes/inc/esc.h"
 621              		.file 5 "Lib/soes_hal_bsp/inc/esc_irq.h"
 622              		.file 6 "Lib/soes_hal_bsp/inc/rst.h"
 623              		.file 7 "Lib/soes_hal_bsp/inc/spi.h"
ARM GAS  /tmp/cc06wAZU.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 esc_hw.c
     /tmp/cc06wAZU.s:18     .text.esc_address:0000000000000000 $t
     /tmp/cc06wAZU.s:25     .text.esc_address:0000000000000000 esc_address
     /tmp/cc06wAZU.s:77     .text.esc_address:0000000000000034 $d
     /tmp/cc06wAZU.s:83     .text.ESC_read:0000000000000000 $t
     /tmp/cc06wAZU.s:90     .text.ESC_read:0000000000000000 ESC_read
     /tmp/cc06wAZU.s:149    .text.ESC_read:0000000000000040 $d
     /tmp/cc06wAZU.s:155    .text.ESC_write:0000000000000000 $t
     /tmp/cc06wAZU.s:162    .text.ESC_write:0000000000000000 ESC_write
     /tmp/cc06wAZU.s:210    .text.ESC_write:0000000000000030 $d
     /tmp/cc06wAZU.s:215    .text.ESC_reset:0000000000000000 $t
     /tmp/cc06wAZU.s:222    .text.ESC_reset:0000000000000000 ESC_reset
     /tmp/cc06wAZU.s:280    .text.ESC_reset:0000000000000030 $d
     /tmp/cc06wAZU.s:285    .text.ESC_init:0000000000000000 $t
     /tmp/cc06wAZU.s:292    .text.ESC_init:0000000000000000 ESC_init
     /tmp/cc06wAZU.s:328    .text.ESC_init:0000000000000020 $d
     /tmp/cc06wAZU.s:334    .text.ESC_interrupt_enable:0000000000000000 $t
     /tmp/cc06wAZU.s:341    .text.ESC_interrupt_enable:0000000000000000 ESC_interrupt_enable
     /tmp/cc06wAZU.s:391    .text.ESC_interrupt_disable:0000000000000000 $t
     /tmp/cc06wAZU.s:398    .text.ESC_interrupt_disable:0000000000000000 ESC_interrupt_disable
     /tmp/cc06wAZU.s:451    .text.ESC_enable_DC:0000000000000000 $t
     /tmp/cc06wAZU.s:458    .text.ESC_enable_DC:0000000000000000 ESC_enable_DC
     /tmp/cc06wAZU.s:596    .text.ESC_enable_DC:00000000000000cc $d
     /tmp/cc06wAZU.s:603    .bss.read_termination:0000000000000000 $d
     /tmp/cc06wAZU.s:607    .bss.read_termination:0000000000000000 read_termination
     /tmp/cc06wAZU.s:610    .data.et1100:0000000000000000 $d
     /tmp/cc06wAZU.s:614    .data.et1100:0000000000000000 et1100

UNDEFINED SYMBOLS
spi_bidirectionally_transfer
ESCvar
spi_select
spi_unselect
spi_write
rst_low
rst_check_start
is_esc_reset
rst_high
rst_setup
spi_setup
EXTILine5_Config
ESC_ALeventmaskread
ESC_ALeventmaskwrite
EXTILine0_Config
EXTILine5_Disable
EXTILine0_Disable
