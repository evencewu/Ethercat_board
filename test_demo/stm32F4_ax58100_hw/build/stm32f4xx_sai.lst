ARM GAS  /tmp/ccyvNgzT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_sai.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SAI_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	SAI_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	SAI_DeInit:
  27              	.LVL0:
  28              	.LFB123:
  29              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @file    stm32f4xx_sai.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @version V1.6.1
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @date    21-October-2015  
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          functionalities of the Serial Audio Interface (SAI):
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           + Initialization and Configuration
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           + Data transfers functions
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           + DMA transfers management
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           + Interrupts and flags management 
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   @verbatim
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                      ##### How to use this driver #####
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     [..] 
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****        (#) Enable peripheral clock using the following functions 
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SAI1, ENABLE) for SAI1
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****        (#) For each SAI Block A/B enable SCK, SD, FS and MCLK GPIO clocks 
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            using RCC_AHB1PeriphClockCmd() function.
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****        (#) Peripherals alternate function: 
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            (++) Connect the pin to the desired peripherals' Alternate 
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 Function (AF) using GPIO_PinAFConfig() function.
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            (++) Configure the desired pin in alternate function by:
ARM GAS  /tmp/ccyvNgzT.s 			page 2


  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            (++) Select the type, pull-up/pull-down and output speed via 
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            (++) Call GPIO_Init() function
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****            -@@- If an external clock source is used then the I2S CKIN pin should be 
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                also configured in Alternate function Push-pull pull-up mode.
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) The SAI clock can be generated from different clock source :
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           PLL I2S, PLL SAI or external clock source.
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) The PLL I2S is configured using the following functions RCC_PLLI2SConfig(), 
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                RCC_PLLI2SCmd(ENABLE), RCC_GetFlagStatus(RCC_FLAG_PLLI2SRDY) and 
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                RCC_SAIPLLI2SClkDivConfig() or;
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****               
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) The PLL SAI is configured using the following functions RCC_PLLSAIConfig(), 
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                RCC_PLLSAICmd(ENABLE), RCC_GetFlagStatus(RCC_FLAG_PLLSAIRDY) and 
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                RCC_SAIPLLSAIClkDivConfig()or;          
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****               
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) External clock source is configured using the function 
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                RCC_I2SCLKConfig(RCC_I2S2CLKSource_Ext) and after setting correctly the 
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                define constant I2S_EXTERNAL_CLOCK_VAL in the stm32f4xx_conf.h file.      
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) Each SAI Block A or B has its own clock generator to make these two blocks 
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           completely independent. The Clock generator is configured using RCC_SAIBlockACLKConfig() 
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           RCC_SAIBlockBCLKConfig() functions.
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                   
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) Each SAI Block A or B can be configured separately : 
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Program the Master clock divider, Audio mode, Protocol, Data Length, Clock Strobing 
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                Synchronous mode, Output drive and FIFO Thresold using SAI_Init() function.   
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                In case of master mode, program the Master clock divider (MCKDIV) using 
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                the following formula :  
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                (+++) MCLK_x = SAI_CK_x / (MCKDIV * 2) with MCLK_x = 256 * FS
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                (+++) FS = SAI_CK_x / (MCKDIV * 2) * 256
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                (+++) MCKDIV = SAI_CK_x / FS * 512
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****          (++) Program the Frame Length, Frame active Length, FS Definition, FS Polarity, 
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****               FS Offset using SAI_FrameInit() function.    
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****          (++) Program the Slot First Bit Offset, Slot Size, Slot Number, Slot Active 
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****               using SAI_SlotInit() function. 
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                    
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) Enable the NVIC and the corresponding interrupt using the function 
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           SAI_ITConfig() if you need to use interrupt mode. 
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) When using the DMA mode 
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Configure the DMA using DMA_Init() function
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Active the needed channel Request using SAI_DMACmd() function
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) Enable the SAI using the SAI_Cmd() function.
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) Enable the DMA using the DMA_Cmd() function when using DMA mode. 
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       (#) The SAI has some specific functions which can be useful depending 
  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           on the audio protocol selected.  
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Enable Mute mode when the audio block is a transmitter using SAI_MuteModeCmd()
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                function and configure the value transmitted during mute using SAI_MuteValueConfig()
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Detect the Mute mode when audio block is a receiver using SAI_MuteFrameCounterConfig
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Enable the MONO mode without any data preprocessing in memory when the number
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                of slot is equal to 2 using SAI_MonoModeConfig() function.
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Enable data companding algorithm (U law and A law) using SAI_CompandingModeConfig().
ARM GAS  /tmp/ccyvNgzT.s 			page 3


  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           (++) Choose the behavior of the SD line in output when an inactive slot is sent 
  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                on the data line using SAI_TRIStateConfig() function.   
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]               
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    (@)    In master TX mode: enabling the audio block immediately generates the bit clock 
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           for the external slaves even if there is no data in the FIFO, However FS signal 
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           generation is conditioned by the presence of data in the FIFO.
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                  
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    (@)    In master RX mode: enabling the audio block immediately generates the bit clock 
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****           and FS signal for the external slaves. 
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                 
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    (@)    It is mandatory to respect the following conditions in order to avoid bad SAI behavior: 
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             (+@)  First bit Offset <= (SLOT size - Data size)
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             (+@)  Data size <= SLOT size
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             (+@)  Number of SLOT x SLOT size = Frame length
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             (+@)  The number of slots should be even when bit FSDEF in the SAI_xFRCR is set.    
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     @endverbatim  
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ******************************************************************************
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @attention
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * You may not use this file except in compliance with the License.
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * You may obtain a copy of the License at:
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * Unless required by applicable law or agreed to in writing, software 
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * See the License for the specific language governing permissions and
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * limitations under the License.
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ******************************************************************************
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */ 
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Includes ------------------------------------------------------------------*/
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #include "stm32f4xx_sai.h"
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #include "stm32f4xx_rcc.h"
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI 
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief SAI driver modules
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */ 
 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #if defined (STM32F40_41xxx) || defined (STM32F427_437xx) || defined (STM32F429_439xx) || \
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     defined (STM32F401xx) || defined (STM32F411xE) || defined (STM32F446xx) || defined (STM32F469_4
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private typedef -----------------------------------------------------------*/
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private define ------------------------------------------------------------*/
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* *SAI registers Masks */
ARM GAS  /tmp/ccyvNgzT.s 			page 4


 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFF07C010)
 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #define FRCR_CLEAR_MASK           ((uint32_t)0xFFF88000)
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #define SLOTR_CLEAR_MASK          ((uint32_t)0x0000F020)
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private macro -------------------------------------------------------------*/
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private variables ---------------------------------------------------------*/
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private function prototypes -----------------------------------------------*/
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /* Private functions ---------------------------------------------------------*/
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI_Private_Functions
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI_Group1 Initialization and Configuration functions
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *  @brief   Initialization and Configuration functions 
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @verbatim   
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             ##### Initialization and Configuration functions #####
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================  
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   This section provides a set of functions allowing to initialize the SAI Audio 
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   Block Mode, Audio Protocol, Data size, Synchronization between audio block, 
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   Master clock Divider, Fifo threshold, Frame configuration, slot configuration,
 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   Tristate mode, Companding mode and Mute mode.  
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..] 
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   The SAI_Init(), SAI_FrameInit() and SAI_SlotInit() functions follows the SAI Block
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   configuration procedures for Master mode and Slave mode (details for these procedures 
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   are available in reference manual(RM0090).
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @endverbatim
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Deinitialize the SAIx peripheral registers to their default reset values.
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAIx: To select the SAIx peripheral, where x can be the different instances 
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *                     
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_DeInit(SAI_TypeDef* SAIx)
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
  30              		.loc 1 185 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 185 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_PERIPH(SAIx));
  39              		.loc 1 187 3 is_stmt 1 view .LVU2
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if(SAIx == SAI1)
  40              		.loc 1 189 3 view .LVU3
ARM GAS  /tmp/ccyvNgzT.s 			page 5


  41              		.loc 1 189 5 is_stmt 0 view .LVU4
  42 0002 074B     		ldr	r3, .L5
  43 0004 9842     		cmp	r0, r3
  44 0006 00D0     		beq	.L4
  45              	.LVL1:
  46              	.L1:
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Enable SAI1 reset state */
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI1, ENABLE);
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI1, DISABLE); 
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #if defined(STM32F446xx)
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if(SAIx == SAI2)
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     {
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       /* Enable SAI2 reset state */
 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI2, ENABLE);
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       /* Release SAI2 from reset state */
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_SAI2, DISABLE);   
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     }
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** #endif /* STM32F446xx */
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
  47              		.loc 1 208 1 view .LVU5
  48 0008 08BD     		pop	{r3, pc}
  49              	.LVL2:
  50              	.L4:
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
  51              		.loc 1 192 5 is_stmt 1 view .LVU6
  52 000a 0121     		movs	r1, #1
  53 000c 4FF48000 		mov	r0, #4194304
  54              	.LVL3:
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Release SAI1 from reset state */
  55              		.loc 1 192 5 is_stmt 0 view .LVU7
  56 0010 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57              	.LVL4:
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
  58              		.loc 1 194 5 is_stmt 1 view .LVU8
  59 0014 0021     		movs	r1, #0
  60 0016 4FF48000 		mov	r0, #4194304
  61 001a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  62              	.LVL5:
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
  63              		.loc 1 207 3 view .LVU9
  64              		.loc 1 208 1 is_stmt 0 view .LVU10
  65 001e F3E7     		b	.L1
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 0020 00580140 		.word	1073829888
  70              		.cfi_endproc
  71              	.LFE123:
  73              		.section	.text.SAI_Init,"ax",%progbits
  74              		.align	1
  75              		.global	SAI_Init
ARM GAS  /tmp/ccyvNgzT.s 			page 6


  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	SAI_Init:
  81              	.LVL6:
  82              	.LFB124:
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block x peripheral according to the specified 
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         parameters in the SAI_InitStruct.
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   SAI clock is generated from a specific output of the PLLSAI or a specific  
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         output of the PLLI2S or from an alternate function bypassing the PLL I2S.
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *        
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_InitStruct: pointer to a SAI_InitTypeDef structure that
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         contains the configuration information for the specified SAI Block peripheral.         
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_Init(SAI_Block_TypeDef* SAI_Block_x, SAI_InitTypeDef* SAI_InitStruct)
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
  83              		.loc 1 223 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              		.loc 1 223 1 is_stmt 0 view .LVU12
  89 0000 10B4     		push	{r4}
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 4, -4
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
  92              		.loc 1 224 3 is_stmt 1 view .LVU13
  93              	.LVL7:
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
  94              		.loc 1 227 3 view .LVU14
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the SAI Block parameters */
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MODE(SAI_InitStruct->SAI_AudioMode));
  95              		.loc 1 230 3 view .LVU15
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PROTOCOL(SAI_InitStruct->SAI_Protocol));
  96              		.loc 1 231 3 view .LVU16
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_DATASIZE(SAI_InitStruct->SAI_DataSize));
  97              		.loc 1 232 3 view .LVU17
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIRST_BIT(SAI_InitStruct->SAI_FirstBit));
  98              		.loc 1 233 3 view .LVU18
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CLOCK_STROBING(SAI_InitStruct->SAI_ClockStrobing));
  99              		.loc 1 234 3 view .LVU19
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SYNCHRO(SAI_InitStruct->SAI_Synchro));
 100              		.loc 1 235 3 view .LVU20
 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_OUTPUT_DRIVE(SAI_InitStruct->SAI_OUTDRIV));
 101              		.loc 1 236 3 view .LVU21
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_NODIVIDER(SAI_InitStruct->SAI_NoDivider));
 102              		.loc 1 237 3 view .LVU22
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MASTER_DIVIDER(SAI_InitStruct->SAI_MasterDivider));
 103              		.loc 1 238 3 view .LVU23
ARM GAS  /tmp/ccyvNgzT.s 			page 7


 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIFO_THRESHOLD(SAI_InitStruct->SAI_FIFOThreshold));
 104              		.loc 1 239 3 view .LVU24
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* SAI Block_x CR1 Configuration */
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the SAI Block_x CR1 value */
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->CR1;
 105              		.loc 1 243 3 view .LVU25
 106              		.loc 1 243 10 is_stmt 0 view .LVU26
 107 0002 0368     		ldr	r3, [r0]
 108              	.LVL8:
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear MODE, PRTCFG, DS, LSBFIRST, CKSTR, SYNCEN, OUTDRIV, NODIV, and MCKDIV bits */
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg &= CR1_CLEAR_MASK;
 109              		.loc 1 245 3 is_stmt 1 view .LVU27
 110              		.loc 1 245 10 is_stmt 0 view .LVU28
 111 0004 0F4A     		ldr	r2, .L9
 112 0006 1A40     		ands	r2, r2, r3
 113              	.LVL9:
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Configure SAI_Block_x: Audio mode, Protocol, Data Size, first transmitted bit, Clock strobing 
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      edge, Synchronization mode, Output drive, Master Divider and FIFO level */  
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set MODE bits according to SAI_AudioMode value       */
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set PRTCFG bits according to SAI_Protocol value      */
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set DS bits according to SAI_DataSize value          */
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set LSBFIRST bit according to SAI_FirstBit value     */
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set CKSTR bit according to SAI_ClockStrobing value   */
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set SYNCEN bit according to SAI_Synchro value        */
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set OUTDRIV bit according to SAI_OUTDRIV value       */
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set NODIV bit according to SAI_NoDivider value       */
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set MCKDIV bits according to SAI_MasterDivider value */
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_InitStruct->SAI_AudioMode     | SAI_InitStruct->SAI_Protocol  |
 114              		.loc 1 257 3 is_stmt 1 view .LVU29
 115              		.loc 1 257 38 is_stmt 0 view .LVU30
 116 0008 0B68     		ldr	r3, [r1]
 117              		.loc 1 257 58 view .LVU31
 118 000a 4C68     		ldr	r4, [r1, #4]
 119 000c 2343     		orrs	r3, r3, r4
 120              		.loc 1 257 90 view .LVU32
 121 000e 8C68     		ldr	r4, [r1, #8]
 122 0010 2343     		orrs	r3, r3, r4
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
 123              		.loc 1 258 58 view .LVU33
 124 0012 CC68     		ldr	r4, [r1, #12]
 125 0014 2343     		orrs	r3, r3, r4
 126              		.loc 1 258 90 view .LVU34
 127 0016 0C69     		ldr	r4, [r1, #16]
 128 0018 2343     		orrs	r3, r3, r4
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_ClockStrobing | SAI_InitStruct->SAI_Synchro   |  
 129              		.loc 1 259 58 view .LVU35
 130 001a 4C69     		ldr	r4, [r1, #20]
 131 001c 2343     		orrs	r3, r3, r4
 132              		.loc 1 259 90 view .LVU36
 133 001e 8C69     		ldr	r4, [r1, #24]
 134 0020 2343     		orrs	r3, r3, r4
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_OUTDRIV       | SAI_InitStruct->SAI_NoDivider | 
 135              		.loc 1 260 58 view .LVU37
 136 0022 CC69     		ldr	r4, [r1, #28]
 137 0024 2343     		orrs	r3, r3, r4
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
ARM GAS  /tmp/ccyvNgzT.s 			page 8


 138              		.loc 1 257 13 view .LVU38
 139 0026 0C6A     		ldr	r4, [r1, #32]
 140 0028 43EA0453 		orr	r3, r3, r4, lsl #20
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_InitStruct->SAI_DataSize      | SAI_InitStruct->SAI_FirstBit  |  
 141              		.loc 1 257 10 view .LVU39
 142 002c 1343     		orrs	r3, r3, r2
 143              	.LVL10:
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        (uint32_t)((SAI_InitStruct->SAI_MasterDivider) << 20));
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Write to SAI_Block_x CR1 */
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR1 = tmpreg;
 144              		.loc 1 263 3 is_stmt 1 view .LVU40
 145              		.loc 1 263 20 is_stmt 0 view .LVU41
 146 002e 0360     		str	r3, [r0]
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* SAI Block_x CR2 Configuration */
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the SAIBlock_x CR2 value */
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->CR2;
 147              		.loc 1 267 3 is_stmt 1 view .LVU42
 148              		.loc 1 267 10 is_stmt 0 view .LVU43
 149 0030 4268     		ldr	r2, [r0, #4]
 150              	.LVL11:
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear FTH bits */
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg &= ~(SAI_xCR2_FTH);
 151              		.loc 1 269 3 is_stmt 1 view .LVU44
 152              		.loc 1 269 10 is_stmt 0 view .LVU45
 153 0032 22F00302 		bic	r2, r2, #3
 154              	.LVL12:
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Configure the FIFO Level */
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FTH bits according to SAI_FIFOThreshold value */ 
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_InitStruct->SAI_FIFOThreshold);
 155              		.loc 1 272 3 is_stmt 1 view .LVU46
 156              		.loc 1 272 38 is_stmt 0 view .LVU47
 157 0036 4B6A     		ldr	r3, [r1, #36]
 158              		.loc 1 272 10 view .LVU48
 159 0038 1343     		orrs	r3, r3, r2
 160              	.LVL13:
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Write to SAI_Block_x CR2 */
 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 = tmpreg;
 161              		.loc 1 274 3 is_stmt 1 view .LVU49
 162              		.loc 1 274 20 is_stmt 0 view .LVU50
 163 003a 4360     		str	r3, [r0, #4]
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 164              		.loc 1 275 1 view .LVU51
 165 003c 5DF8044B 		ldr	r4, [sp], #4
 166              		.cfi_restore 4
 167              		.cfi_def_cfa_offset 0
 168 0040 7047     		bx	lr
 169              	.L10:
 170 0042 00BF     		.align	2
 171              	.L9:
 172 0044 10C007FF 		.word	-16269296
 173              		.cfi_endproc
 174              	.LFE124:
 176              		.section	.text.SAI_FrameInit,"ax",%progbits
 177              		.align	1
 178              		.global	SAI_FrameInit
 179              		.syntax unified
ARM GAS  /tmp/ccyvNgzT.s 			page 9


 180              		.thumb
 181              		.thumb_func
 183              	SAI_FrameInit:
 184              	.LVL14:
 185              	.LFB125:
 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block Audio frame according to the specified 
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         parameters in the SAI_FrameInitStruct.
 280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         
 281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   this function has no meaning if the AC'97 or SPDIF audio protocol 
 282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         are selected. 
 283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *               
 284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_FrameInitStruct: pointer to an SAI_FrameInitTypeDef structure that
 286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         contains the configuration of audio frame for a specified SAI Block                    
 287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_FrameInit(SAI_Block_TypeDef* SAI_Block_x, SAI_FrameInitTypeDef* SAI_FrameInitStruct)
 290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 186              		.loc 1 290 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              		.loc 1 290 1 is_stmt 0 view .LVU53
 192 0000 10B4     		push	{r4}
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 4, -4
 291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 195              		.loc 1 291 3 is_stmt 1 view .LVU54
 196              	.LVL15:
 292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 197              		.loc 1 294 3 view .LVU55
 295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the SAI Block frame parameters */
 297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FRAME_LENGTH(SAI_FrameInitStruct->SAI_FrameLength));
 198              		.loc 1 297 3 view .LVU56
 298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_ACTIVE_FRAME(SAI_FrameInitStruct->SAI_ActiveFrameLength));
 199              		.loc 1 298 3 view .LVU57
 299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_DEFINITION(SAI_FrameInitStruct->SAI_FSDefinition));
 200              		.loc 1 299 3 view .LVU58
 300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_POLARITY(SAI_FrameInitStruct->SAI_FSPolarity));
 201              		.loc 1 300 3 view .LVU59
 301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FS_OFFSET(SAI_FrameInitStruct->SAI_FSOffset));
 202              		.loc 1 301 3 view .LVU60
 302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* SAI Block_x FRCR Configuration */
 304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the SAI Block_x FRCR value */
 305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->FRCR;
 203              		.loc 1 305 3 view .LVU61
 204              		.loc 1 305 10 is_stmt 0 view .LVU62
 205 0002 8368     		ldr	r3, [r0, #8]
 206              	.LVL16:
 306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear FRL, FSALL, FSDEF, FSPOL, FSOFF bits */
ARM GAS  /tmp/ccyvNgzT.s 			page 10


 307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg &= FRCR_CLEAR_MASK;
 207              		.loc 1 307 3 is_stmt 1 view .LVU63
 208              		.loc 1 307 10 is_stmt 0 view .LVU64
 209 0004 094A     		ldr	r2, .L13
 210 0006 1A40     		ands	r2, r2, r3
 211              	.LVL17:
 308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Configure SAI_Block_x Frame: Frame Length, Active Frame Length, Frame Synchronization
 309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      Definition, Frame Synchronization Polarity and Frame Synchronization Polarity */
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FRL bits according to SAI_FrameLength value         */
 311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FSALL bits according to SAI_ActiveFrameLength value */
 312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FSDEF bit according to SAI_FSDefinition value       */
 313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FSPOL bit according to SAI_FSPolarity value         */
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FSOFF bit according to SAI_FSOffset value           */
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)((uint32_t)(SAI_FrameInitStruct->SAI_FrameLength - 1)  | 
 212              		.loc 1 315 3 is_stmt 1 view .LVU65
 213              		.loc 1 315 54 is_stmt 0 view .LVU66
 214 0008 0B68     		ldr	r3, [r1]
 215              		.loc 1 315 24 view .LVU67
 216 000a 013B     		subs	r3, r3, #1
 217              		.loc 1 315 78 view .LVU68
 218 000c 0C69     		ldr	r4, [r1, #16]
 219 000e 2343     		orrs	r3, r3, r4
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 220              		.loc 1 316 62 view .LVU69
 221 0010 8C68     		ldr	r4, [r1, #8]
 222 0012 2343     		orrs	r3, r3, r4
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSDefinition |    
 223              		.loc 1 317 62 view .LVU70
 224 0014 CC68     		ldr	r4, [r1, #12]
 225 0016 2343     		orrs	r3, r3, r4
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSPolarity   |                        
 319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        (uint32_t)((SAI_FrameInitStruct->SAI_ActiveFrameLength - 1) << 8));
 226              		.loc 1 319 55 view .LVU71
 227 0018 4968     		ldr	r1, [r1, #4]
 228              	.LVL18:
 229              		.loc 1 319 79 view .LVU72
 230 001a 0139     		subs	r1, r1, #1
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 231              		.loc 1 315 13 view .LVU73
 232 001c 43EA0123 		orr	r3, r3, r1, lsl #8
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_FrameInitStruct->SAI_FSOffset     | 
 233              		.loc 1 315 10 view .LVU74
 234 0020 1343     		orrs	r3, r3, r2
 235              	.LVL19:
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        
 321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Write to SAI_Block_x FRCR */
 322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->FRCR = tmpreg;
 236              		.loc 1 322 3 is_stmt 1 view .LVU75
 237              		.loc 1 322 21 is_stmt 0 view .LVU76
 238 0022 8360     		str	r3, [r0, #8]
 323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 239              		.loc 1 323 1 view .LVU77
 240 0024 5DF8044B 		ldr	r4, [sp], #4
 241              		.cfi_restore 4
 242              		.cfi_def_cfa_offset 0
 243 0028 7047     		bx	lr
 244              	.L14:
ARM GAS  /tmp/ccyvNgzT.s 			page 11


 245 002a 00BF     		.align	2
 246              	.L13:
 247 002c 0080F8FF 		.word	-491520
 248              		.cfi_endproc
 249              	.LFE125:
 251              		.section	.text.SAI_SlotInit,"ax",%progbits
 252              		.align	1
 253              		.global	SAI_SlotInit
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	SAI_SlotInit:
 259              	.LVL20:
 260              	.LFB126:
 324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Initializes the SAI Block audio Slot according to the specified 
 327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         parameters in the SAI_SlotInitStruct.
 328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   this function has no meaning if the AC'97 or SPDIF audio protocol 
 330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         are selected.
 331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *               
 332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_SlotInitStruct: pointer to an SAI_SlotInitTypeDef structure that
 334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         contains the configuration of audio slot for a specified SAI Block                     
 335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_SlotInit(SAI_Block_TypeDef* SAI_Block_x, SAI_SlotInitTypeDef* SAI_SlotInitStruct)
 338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 261              		.loc 1 338 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              		.loc 1 338 1 is_stmt 0 view .LVU79
 267 0000 10B4     		push	{r4}
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 4, -4
 339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 270              		.loc 1 339 3 is_stmt 1 view .LVU80
 271              	.LVL21:
 340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 272              		.loc 1 342 3 view .LVU81
 343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the SAI Block Slot parameters */
 345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_FIRSTBIT_OFFSET(SAI_SlotInitStruct->SAI_FirstBitOffset));
 273              		.loc 1 345 3 view .LVU82
 346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SLOT_SIZE(SAI_SlotInitStruct->SAI_SlotSize));
 274              		.loc 1 346 3 view .LVU83
 347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_SLOT_NUMBER(SAI_SlotInitStruct->SAI_SlotNumber));
 275              		.loc 1 347 3 view .LVU84
 348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_SLOT_ACTIVE(SAI_SlotInitStruct->SAI_SlotActive));
 276              		.loc 1 348 3 view .LVU85
 349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* SAI Block_x SLOTR Configuration */
ARM GAS  /tmp/ccyvNgzT.s 			page 12


 351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the SAI Block_x SLOTR value */
 352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg = SAI_Block_x->SLOTR;
 277              		.loc 1 352 3 view .LVU86
 278              		.loc 1 352 10 is_stmt 0 view .LVU87
 279 0002 C268     		ldr	r2, [r0, #12]
 280              	.LVL22:
 353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear FBOFF, SLOTSZ, NBSLOT, SLOTEN bits */
 354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg &= SLOTR_CLEAR_MASK;
 281              		.loc 1 354 3 is_stmt 1 view .LVU88
 282              		.loc 1 354 10 is_stmt 0 view .LVU89
 283 0004 22F47D62 		bic	r2, r2, #4048
 284              	.LVL23:
 285              		.loc 1 354 10 view .LVU90
 286 0008 22F00F02 		bic	r2, r2, #15
 287 000c 1204     		lsls	r2, r2, #16
 288 000e 120C     		lsrs	r2, r2, #16
 289              	.LVL24:
 355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Configure SAI_Block_x Slot: First bit offset, Slot size, Number of Slot in  
 356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      audio frame and slots activated in audio frame */
 357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set FBOFF bits according to SAI_FirstBitOffset value  */
 358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set SLOTSZ bits according to SAI_SlotSize value       */
 359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set NBSLOT bits according to SAI_SlotNumber value     */
 360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set SLOTEN bits according to SAI_SlotActive value     */
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg |= (uint32_t)(SAI_SlotInitStruct->SAI_FirstBitOffset | 
 290              		.loc 1 361 3 is_stmt 1 view .LVU91
 291              		.loc 1 361 42 is_stmt 0 view .LVU92
 292 0010 0B68     		ldr	r3, [r1]
 293              		.loc 1 361 63 view .LVU93
 294 0012 4C68     		ldr	r4, [r1, #4]
 295 0014 2343     		orrs	r3, r3, r4
 362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 296              		.loc 1 362 63 view .LVU94
 297 0016 CC68     		ldr	r4, [r1, #12]
 298 0018 2343     		orrs	r3, r3, r4
 363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotActive     |    
 364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        (uint32_t)((SAI_SlotInitStruct->SAI_SlotNumber - 1) <<  8));
 299              		.loc 1 364 54 view .LVU95
 300 001a 8968     		ldr	r1, [r1, #8]
 301              	.LVL25:
 302              		.loc 1 364 71 view .LVU96
 303 001c 0139     		subs	r1, r1, #1
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 304              		.loc 1 361 13 view .LVU97
 305 001e 43EA0123 		orr	r3, r3, r1, lsl #8
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        SAI_SlotInitStruct->SAI_SlotSize       | 
 306              		.loc 1 361 10 view .LVU98
 307 0022 1343     		orrs	r3, r3, r2
 308              	.LVL26:
 365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        
 366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Write to SAI_Block_x SLOTR */
 367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->SLOTR = tmpreg;
 309              		.loc 1 367 3 is_stmt 1 view .LVU99
 310              		.loc 1 367 22 is_stmt 0 view .LVU100
 311 0024 C360     		str	r3, [r0, #12]
 368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 312              		.loc 1 368 1 view .LVU101
 313 0026 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/ccyvNgzT.s 			page 13


 314              		.cfi_restore 4
 315              		.cfi_def_cfa_offset 0
 316 002a 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE126:
 320              		.section	.text.SAI_StructInit,"ax",%progbits
 321              		.align	1
 322              		.global	SAI_StructInit
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	SAI_StructInit:
 328              	.LVL27:
 329              	.LFB127:
 369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Fills each SAI_InitStruct member with its default value.
 372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_InitStruct: pointer to a SAI_InitTypeDef structure which will 
 373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         be initialized.  
 374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_StructInit(SAI_InitTypeDef* SAI_InitStruct)
 377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 330              		.loc 1 377 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Reset SAI init structure parameters values */
 379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_AudioMode member */
 380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_AudioMode = SAI_Mode_MasterTx;
 335              		.loc 1 380 3 view .LVU103
 336              		.loc 1 380 33 is_stmt 0 view .LVU104
 337 0000 0023     		movs	r3, #0
 338 0002 0360     		str	r3, [r0]
 381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_Protocol member */
 382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_Protocol = SAI_Free_Protocol;
 339              		.loc 1 382 3 is_stmt 1 view .LVU105
 340              		.loc 1 382 32 is_stmt 0 view .LVU106
 341 0004 4360     		str	r3, [r0, #4]
 383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_DataSize member */
 384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_DataSize = SAI_DataSize_8b;
 342              		.loc 1 384 3 is_stmt 1 view .LVU107
 343              		.loc 1 384 32 is_stmt 0 view .LVU108
 344 0006 4022     		movs	r2, #64
 345 0008 8260     		str	r2, [r0, #8]
 385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FirstBit member */
 386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_FirstBit = SAI_FirstBit_MSB;
 346              		.loc 1 386 3 is_stmt 1 view .LVU109
 347              		.loc 1 386 32 is_stmt 0 view .LVU110
 348 000a C360     		str	r3, [r0, #12]
 387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_ClockStrobing member */
 388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_ClockStrobing = SAI_ClockStrobing_FallingEdge;
 349              		.loc 1 388 3 is_stmt 1 view .LVU111
 350              		.loc 1 388 37 is_stmt 0 view .LVU112
 351 000c 0361     		str	r3, [r0, #16]
 389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_Synchro member */
ARM GAS  /tmp/ccyvNgzT.s 			page 14


 390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_Synchro = SAI_Asynchronous;
 352              		.loc 1 390 3 is_stmt 1 view .LVU113
 353              		.loc 1 390 31 is_stmt 0 view .LVU114
 354 000e 4361     		str	r3, [r0, #20]
 391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_OUTDRIV member */
 392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_OUTDRIV = SAI_OutputDrive_Disabled;
 355              		.loc 1 392 3 is_stmt 1 view .LVU115
 356              		.loc 1 392 31 is_stmt 0 view .LVU116
 357 0010 8361     		str	r3, [r0, #24]
 393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_NoDivider member */
 394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_NoDivider = SAI_MasterDivider_Enabled;
 358              		.loc 1 394 3 is_stmt 1 view .LVU117
 359              		.loc 1 394 33 is_stmt 0 view .LVU118
 360 0012 C361     		str	r3, [r0, #28]
 395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_MasterDivider member */
 396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_MasterDivider = 0;
 361              		.loc 1 396 3 is_stmt 1 view .LVU119
 362              		.loc 1 396 37 is_stmt 0 view .LVU120
 363 0014 0362     		str	r3, [r0, #32]
 397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FIFOThreshold member */
 398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_InitStruct->SAI_FIFOThreshold = SAI_Threshold_FIFOEmpty;
 364              		.loc 1 398 3 is_stmt 1 view .LVU121
 365              		.loc 1 398 37 is_stmt 0 view .LVU122
 366 0016 4362     		str	r3, [r0, #36]
 399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 367              		.loc 1 399 1 view .LVU123
 368 0018 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE127:
 372              		.section	.text.SAI_FrameStructInit,"ax",%progbits
 373              		.align	1
 374              		.global	SAI_FrameStructInit
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 379              	SAI_FrameStructInit:
 380              	.LVL28:
 381              	.LFB128:
 400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Fills each SAI_FrameInitStruct member with its default value.
 403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_FrameInitStruct: pointer to a SAI_FrameInitTypeDef structure 
 404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         which will be initialized.                     
 405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_FrameStructInit(SAI_FrameInitTypeDef* SAI_FrameInitStruct)
 408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 382              		.loc 1 408 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Reset SAI Frame init structure parameters values */
 410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FrameLength member */
 411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FrameLength = 8;
 387              		.loc 1 411 3 view .LVU125
 388              		.loc 1 411 40 is_stmt 0 view .LVU126
ARM GAS  /tmp/ccyvNgzT.s 			page 15


 389 0000 0823     		movs	r3, #8
 390 0002 0360     		str	r3, [r0]
 412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_ActiveFrameLength member */
 413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_ActiveFrameLength = 1;
 391              		.loc 1 413 3 is_stmt 1 view .LVU127
 392              		.loc 1 413 46 is_stmt 0 view .LVU128
 393 0004 0123     		movs	r3, #1
 394 0006 4360     		str	r3, [r0, #4]
 414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FSDefinition member */
 415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSDefinition = SAI_FS_StartFrame;
 395              		.loc 1 415 3 is_stmt 1 view .LVU129
 396              		.loc 1 415 41 is_stmt 0 view .LVU130
 397 0008 0023     		movs	r3, #0
 398 000a 8360     		str	r3, [r0, #8]
 416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FSPolarity member */
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSPolarity = SAI_FS_ActiveLow;
 399              		.loc 1 417 3 is_stmt 1 view .LVU131
 400              		.loc 1 417 39 is_stmt 0 view .LVU132
 401 000c C360     		str	r3, [r0, #12]
 418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FSOffset member */
 419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_FrameInitStruct->SAI_FSOffset = SAI_FS_FirstBit;
 402              		.loc 1 419 3 is_stmt 1 view .LVU133
 403              		.loc 1 419 37 is_stmt 0 view .LVU134
 404 000e 0361     		str	r3, [r0, #16]
 420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 405              		.loc 1 420 1 view .LVU135
 406 0010 7047     		bx	lr
 407              		.cfi_endproc
 408              	.LFE128:
 410              		.section	.text.SAI_SlotStructInit,"ax",%progbits
 411              		.align	1
 412              		.global	SAI_SlotStructInit
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	SAI_SlotStructInit:
 418              	.LVL29:
 419              	.LFB129:
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Fills each SAI_SlotInitStruct member with its default value.
 424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_SlotInitStruct: pointer to a SAI_SlotInitTypeDef structure 
 425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         which will be initialized.                     
 426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_SlotStructInit(SAI_SlotInitTypeDef* SAI_SlotInitStruct)
 429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 420              		.loc 1 429 1 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Reset SAI Slot init structure parameters values */
 431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_FirstBitOffset member */
 432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_FirstBitOffset = 0;
 425              		.loc 1 432 3 view .LVU137
 426              		.loc 1 432 42 is_stmt 0 view .LVU138
ARM GAS  /tmp/ccyvNgzT.s 			page 16


 427 0000 0023     		movs	r3, #0
 428 0002 0360     		str	r3, [r0]
 433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotSize member */
 434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotSize = SAI_SlotSize_DataSize;
 429              		.loc 1 434 3 is_stmt 1 view .LVU139
 430              		.loc 1 434 36 is_stmt 0 view .LVU140
 431 0004 4360     		str	r3, [r0, #4]
 435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotNumber member */
 436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotNumber = 1;
 432              		.loc 1 436 3 is_stmt 1 view .LVU141
 433              		.loc 1 436 38 is_stmt 0 view .LVU142
 434 0006 0122     		movs	r2, #1
 435 0008 8260     		str	r2, [r0, #8]
 437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Initialize the SAI_SlotActive member */
 438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_SlotInitStruct->SAI_SlotActive = SAI_Slot_NotActive;
 436              		.loc 1 438 3 is_stmt 1 view .LVU143
 437              		.loc 1 438 38 is_stmt 0 view .LVU144
 438 000a C360     		str	r3, [r0, #12]
 439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 439              		.loc 1 440 1 view .LVU145
 440 000c 7047     		bx	lr
 441              		.cfi_endproc
 442              	.LFE129:
 444              		.section	.text.SAI_Cmd,"ax",%progbits
 445              		.align	1
 446              		.global	SAI_Cmd
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 451              	SAI_Cmd:
 452              	.LVL30:
 453              	.LFB130:
 441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Enables or disables the specified SAI Block peripheral.
 444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  NewState: new state of the SAI_Block_x peripheral. 
 446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_Cmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 454              		.loc 1 450 1 is_stmt 1 view -0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 459              		.loc 1 452 3 view .LVU147
 453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 460              		.loc 1 453 3 view .LVU148
 454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 461              		.loc 1 454 3 view .LVU149
 462              		.loc 1 454 6 is_stmt 0 view .LVU150
 463 0000 21B1     		cbz	r1, .L21
ARM GAS  /tmp/ccyvNgzT.s 			page 17


 455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Enable the selected SAI peripheral */
 457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR1 |= SAI_xCR1_SAIEN;
 464              		.loc 1 457 5 is_stmt 1 view .LVU151
 465              		.loc 1 457 22 is_stmt 0 view .LVU152
 466 0002 0368     		ldr	r3, [r0]
 467 0004 43F48033 		orr	r3, r3, #65536
 468 0008 0360     		str	r3, [r0]
 469 000a 7047     		bx	lr
 470              	.L21:
 458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Disable the selected SAI peripheral */
 462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR1 &= ~(SAI_xCR1_SAIEN);
 471              		.loc 1 462 5 is_stmt 1 view .LVU153
 472              		.loc 1 462 22 is_stmt 0 view .LVU154
 473 000c 0368     		ldr	r3, [r0]
 474 000e 23F48033 		bic	r3, r3, #65536
 475 0012 0360     		str	r3, [r0]
 463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 476              		.loc 1 464 1 view .LVU155
 477 0014 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE130:
 481              		.section	.text.SAI_MonoModeConfig,"ax",%progbits
 482              		.align	1
 483              		.global	SAI_MonoModeConfig
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	SAI_MonoModeConfig:
 489              	.LVL31:
 490              	.LFB131:
 465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Configures the mono mode for the selected SAI block.
 468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * 
 469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note  This function has a meaning only when the number of slot is equal to 2. 
 470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *      
 471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_MonoMode: specifies the SAI block mono mode.
 473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_MonoMode : Set mono audio mode
 475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_StreoMode : Set streo audio mode                       
 476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_MonoModeConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_Mono_StreoMode)
 479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 491              		.loc 1 479 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
ARM GAS  /tmp/ccyvNgzT.s 			page 18


 496              		.loc 1 481 3 view .LVU157
 482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MONO_STREO_MODE(SAI_MonoMode));
 497              		.loc 1 482 3 view .LVU158
 483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear MONO bit */
 484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR1 &= ~(SAI_xCR1_MONO);
 498              		.loc 1 484 3 view .LVU159
 499              		.loc 1 484 20 is_stmt 0 view .LVU160
 500 0000 0368     		ldr	r3, [r0]
 501 0002 23F48053 		bic	r3, r3, #4096
 502 0006 0360     		str	r3, [r0]
 485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set new Mono Mode value */
 486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR1 |= SAI_MonoMode;
 503              		.loc 1 486 3 is_stmt 1 view .LVU161
 504              		.loc 1 486 20 is_stmt 0 view .LVU162
 505 0008 0368     		ldr	r3, [r0]
 506 000a 43F48053 		orr	r3, r3, #4096
 507 000e 0360     		str	r3, [r0]
 487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 508              		.loc 1 487 1 view .LVU163
 509 0010 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE131:
 513              		.section	.text.SAI_TRIStateConfig,"ax",%progbits
 514              		.align	1
 515              		.global	SAI_TRIStateConfig
 516              		.syntax unified
 517              		.thumb
 518              		.thumb_func
 520              	SAI_TRIStateConfig:
 521              	.LVL32:
 522              	.LFB132:
 488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Configures the TRIState management on data line for the selected SAI block.
 491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * 
 492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note  This function has a meaning only when the SAI block is configured in transmitter 
 493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *      
 494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_TRIState: specifies the SAI block TRIState management.
 496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_Output_NotReleased : SD output line is still driven by the SAI.
 498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_Output_Released : SD output line is released (HI-Z)                       
 499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_TRIStateConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_TRIState)
 502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 523              		.loc 1 502 1 is_stmt 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 528              		.loc 1 504 3 view .LVU165
 505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_TRISTATE_MANAGEMENT(SAI_TRIState));
 529              		.loc 1 505 3 view .LVU166
 506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear MONO bit */
ARM GAS  /tmp/ccyvNgzT.s 			page 19


 507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR1 &= ~(SAI_xCR1_MONO);
 530              		.loc 1 507 3 view .LVU167
 531              		.loc 1 507 20 is_stmt 0 view .LVU168
 532 0000 0368     		ldr	r3, [r0]
 533 0002 23F48053 		bic	r3, r3, #4096
 534 0006 0360     		str	r3, [r0]
 508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set new Mono Mode value */
 509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR1 |= SAI_MonoMode;  
 535              		.loc 1 509 3 is_stmt 1 view .LVU169
 536              		.loc 1 509 20 is_stmt 0 view .LVU170
 537 0008 0368     		ldr	r3, [r0]
 538 000a 43F48053 		orr	r3, r3, #4096
 539 000e 0360     		str	r3, [r0]
 510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 540              		.loc 1 511 1 view .LVU171
 541 0010 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE132:
 545              		.section	.text.SAI_CompandingModeConfig,"ax",%progbits
 546              		.align	1
 547              		.global	SAI_CompandingModeConfig
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 552              	SAI_CompandingModeConfig:
 553              	.LVL33:
 554              	.LFB133:
 512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Configures the companding mode for the selected SAI block.
 515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * 
 516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note  The data expansion or data compression are determined by the state of
 517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *        SAI block selected (transmitter or receiver). 
 518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.              
 520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_CompandingMode: specifies the SAI block companding mode.
 521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_NoCompanding : no companding algorithm set
 523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_ULaw_1CPL_Companding : Set U law (algorithm 1's complement representation)
 524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_ALaw_1CPL_Companding : Set A law (algorithm 1's complement representation) 
 525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_ULaw_2CPL_Companding : Set U law (algorithm 2's complement representation)
 526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_ALaw_2CPL_Companding : Set A law (algorithm 2's complement representation) 
 527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_CompandingModeConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_CompandingMode)
 530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 555              		.loc 1 530 1 is_stmt 1 view -0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 560              		.loc 1 532 3 view .LVU173
 533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_COMPANDING_MODE(SAI_CompandingMode));
 561              		.loc 1 533 3 view .LVU174
ARM GAS  /tmp/ccyvNgzT.s 			page 20


 534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear Companding Mode bits */
 535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_COMP);
 562              		.loc 1 535 3 view .LVU175
 563              		.loc 1 535 20 is_stmt 0 view .LVU176
 564 0000 4268     		ldr	r2, [r0, #4]
 565 0002 22F44042 		bic	r2, r2, #49152
 566 0006 4260     		str	r2, [r0, #4]
 536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set new Companding Mode value */
 537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_CompandingMode;
 567              		.loc 1 537 3 is_stmt 1 view .LVU177
 568              		.loc 1 537 20 is_stmt 0 view .LVU178
 569 0008 4368     		ldr	r3, [r0, #4]
 570 000a 0B43     		orrs	r3, r3, r1
 571 000c 4360     		str	r3, [r0, #4]
 538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 572              		.loc 1 538 1 view .LVU179
 573 000e 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE133:
 577              		.section	.text.SAI_MuteModeCmd,"ax",%progbits
 578              		.align	1
 579              		.global	SAI_MuteModeCmd
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 584              	SAI_MuteModeCmd:
 585              	.LVL34:
 586              	.LFB134:
 539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Enables or disables the Mute mode for the selected SAI block.
 542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *    
 543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is transmitter
 544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   Mute mode is applied for an entire frame for all the valid slot
 545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         It becomes active at the end of an audio frame when set somewhere in a frame. 
 546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         Mute mode exit occurs at the end of the frame in which the bit MUTE has been set.
 547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  NewState: new state of the SAIx block. 
 550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_MuteModeCmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 587              		.loc 1 554 1 is_stmt 1 view -0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 592              		.loc 1 556 3 view .LVU181
 557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 593              		.loc 1 557 3 view .LVU182
 558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 594              		.loc 1 558 3 view .LVU183
 595              		.loc 1 558 6 is_stmt 0 view .LVU184
ARM GAS  /tmp/ccyvNgzT.s 			page 21


 596 0000 21B1     		cbz	r1, .L27
 559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Enable the selected SAI block mute mode */
 561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR2 |= SAI_xCR2_MUTE;
 597              		.loc 1 561 5 is_stmt 1 view .LVU185
 598              		.loc 1 561 22 is_stmt 0 view .LVU186
 599 0002 4368     		ldr	r3, [r0, #4]
 600 0004 43F02003 		orr	r3, r3, #32
 601 0008 4360     		str	r3, [r0, #4]
 602 000a 7047     		bx	lr
 603              	.L27:
 562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Disable the selected SAI SS output */
 566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTE);
 604              		.loc 1 566 5 is_stmt 1 view .LVU187
 605              		.loc 1 566 22 is_stmt 0 view .LVU188
 606 000c 4368     		ldr	r3, [r0, #4]
 607 000e 23F02003 		bic	r3, r3, #32
 608 0012 4360     		str	r3, [r0, #4]
 567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 609              		.loc 1 568 1 view .LVU189
 610 0014 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE134:
 614              		.section	.text.SAI_MuteValueConfig,"ax",%progbits
 615              		.align	1
 616              		.global	SAI_MuteValueConfig
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	SAI_MuteValueConfig:
 622              	.LVL35:
 623              	.LFB135:
 569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Configure the mute value for the selected SAI block.
 572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *    
 573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is transmitter
 574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   the configuration last value sent during mute mode has only a meaning 
 575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          when the number of slot is lower or equal to 2 and if the MUTE bit is set.
 576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           
 577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_MuteValue: specifies the SAI block mute value.
 579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_ZeroValue : bit value 0 is sent during Mute Mode
 581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_LastSentValue : Last value is sent during Mute Mode  
 582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_MuteValueConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_MuteValue)
 585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 624              		.loc 1 585 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyvNgzT.s 			page 22


 628              		@ link register save eliminated.
 586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 629              		.loc 1 587 3 view .LVU191
 588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MUTE_VALUE(SAI_MuteValue));
 630              		.loc 1 588 3 view .LVU192
 589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear Mute value bits */
 591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTEVAL);
 631              		.loc 1 591 3 view .LVU193
 632              		.loc 1 591 20 is_stmt 0 view .LVU194
 633 0000 4268     		ldr	r2, [r0, #4]
 634 0002 22F04002 		bic	r2, r2, #64
 635 0006 4260     		str	r2, [r0, #4]
 592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set new Mute value */
 593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_MuteValue;
 636              		.loc 1 593 3 is_stmt 1 view .LVU195
 637              		.loc 1 593 20 is_stmt 0 view .LVU196
 638 0008 4368     		ldr	r3, [r0, #4]
 639 000a 0B43     		orrs	r3, r3, r1
 640 000c 4360     		str	r3, [r0, #4]
 594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 641              		.loc 1 594 1 view .LVU197
 642 000e 7047     		bx	lr
 643              		.cfi_endproc
 644              	.LFE135:
 646              		.section	.text.SAI_MuteFrameCounterConfig,"ax",%progbits
 647              		.align	1
 648              		.global	SAI_MuteFrameCounterConfig
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	SAI_MuteFrameCounterConfig:
 654              	.LVL36:
 655              	.LFB136:
 595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Enables or disables the Mute mode for the selected SAI block. 
 598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   This function has a meaning only when the audio block is Receiver
 600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_MuteCounter: specifies the SAI block mute value.
 602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         This parameter can be a number between 0 and 63.  
 603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  
 604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_MuteFrameCounterConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_MuteCounter)
 607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 656              		.loc 1 607 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 661              		.loc 1 609 3 view .LVU199
 610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_MUTE_COUNTER(SAI_MuteCounter));
ARM GAS  /tmp/ccyvNgzT.s 			page 23


 662              		.loc 1 610 3 view .LVU200
 611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear Mute value bits */
 613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 &= ~(SAI_xCR2_MUTECNT);
 663              		.loc 1 613 3 view .LVU201
 664              		.loc 1 613 20 is_stmt 0 view .LVU202
 665 0000 4268     		ldr	r2, [r0, #4]
 666 0002 22F4FC52 		bic	r2, r2, #8064
 667 0006 4260     		str	r2, [r0, #4]
 614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Set new Mute value */
 615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= (SAI_MuteCounter << 7);
 668              		.loc 1 615 3 is_stmt 1 view .LVU203
 669              		.loc 1 615 20 is_stmt 0 view .LVU204
 670 0008 4368     		ldr	r3, [r0, #4]
 671 000a 43EAC113 		orr	r3, r3, r1, lsl #7
 672 000e 4360     		str	r3, [r0, #4]
 616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 673              		.loc 1 616 1 view .LVU205
 674 0010 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE136:
 678              		.section	.text.SAI_FlushFIFO,"ax",%progbits
 679              		.align	1
 680              		.global	SAI_FlushFIFO
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	SAI_FlushFIFO:
 686              	.LVL37:
 687              	.LFB137:
 617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Reinitialize the FIFO pointer
 620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *   
 621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note   The FIFO pointers can be reinitialized at anytime The data present 
 622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         into the FIFO, if it is not empty, will be lost. 
 623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * 
 624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  NewState: new state of the selected SAI TI communication mode.
 626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_FlushFIFO(SAI_Block_TypeDef* SAI_Block_x)
 630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 688              		.loc 1 630 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 693              		.loc 1 632 3 view .LVU207
 633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* FIFO flush */
 635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CR2 |= SAI_xCR2_FFLUSH;
 694              		.loc 1 635 3 view .LVU208
 695              		.loc 1 635 20 is_stmt 0 view .LVU209
ARM GAS  /tmp/ccyvNgzT.s 			page 24


 696 0000 4368     		ldr	r3, [r0, #4]
 697 0002 43F00803 		orr	r3, r3, #8
 698 0006 4360     		str	r3, [r0, #4]
 636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 699              		.loc 1 636 1 view .LVU210
 700 0008 7047     		bx	lr
 701              		.cfi_endproc
 702              	.LFE137:
 704              		.section	.text.SAI_ReceiveData,"ax",%progbits
 705              		.align	1
 706              		.global	SAI_ReceiveData
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 711              	SAI_ReceiveData:
 712              	.LVL38:
 713              	.LFB138:
 637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @}
 640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI_Group2 Data transfers functions
 643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *  @brief   Data transfers functions
 644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *
 645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @verbatim   
 646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
 647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                        ##### Data transfers functions #####
 648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================  
 649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   This section provides a set of functions allowing to manage the SAI data transfers.
 651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In reception, data are received and then stored into an internal FIFO while 
 653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In transmission, data are first stored into an internal FIFO before being 
 654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   transmitted.
 655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   The read access of the SAI_xDR register can be done using the SAI_ReceiveData()
 657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   function and returns the Rx buffered value. Whereas a write access to the SAI_DR 
 658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   can be done using SAI_SendData() function and stores the written data into 
 659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   Tx buffer.
 660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @endverbatim
 662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Returns the most recent received data by the SAI block x peripheral. 
 667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *         
 669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval The value of the received data.
 670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** uint32_t SAI_ReceiveData(SAI_Block_TypeDef* SAI_Block_x)
 672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 714              		.loc 1 672 1 is_stmt 1 view -0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyvNgzT.s 			page 25


 718              		@ link register save eliminated.
 673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 719              		.loc 1 674 3 view .LVU212
 675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Return the data in the DR register */
 677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   return SAI_Block_x->DR;
 720              		.loc 1 677 3 view .LVU213
 721              		.loc 1 677 21 is_stmt 0 view .LVU214
 722 0000 C069     		ldr	r0, [r0, #28]
 723              	.LVL39:
 678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 724              		.loc 1 678 1 view .LVU215
 725 0002 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE138:
 729              		.section	.text.SAI_SendData,"ax",%progbits
 730              		.align	1
 731              		.global	SAI_SendData
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	SAI_SendData:
 737              	.LVL40:
 738              	.LFB139:
 679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Transmits a Data through the SAI block x peripheral.
 682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
 683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *        
 684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  Data: Data to be transmitted.
 685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_SendData(SAI_Block_TypeDef* SAI_Block_x, uint32_t Data)
 688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 739              		.loc 1 688 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 744              		.loc 1 690 3 view .LVU217
 691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Write in the DR register the data to be sent */
 693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->DR = Data;
 745              		.loc 1 693 3 view .LVU218
 746              		.loc 1 693 19 is_stmt 0 view .LVU219
 747 0000 C161     		str	r1, [r0, #28]
 694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 748              		.loc 1 694 1 view .LVU220
 749 0002 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE139:
 753              		.section	.text.SAI_DMACmd,"ax",%progbits
 754              		.align	1
 755              		.global	SAI_DMACmd
ARM GAS  /tmp/ccyvNgzT.s 			page 26


 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 760              	SAI_DMACmd:
 761              	.LVL41:
 762              	.LFB140:
 695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @}
 698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI_Group3 DMA transfers management functions
 701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *  @brief   DMA transfers management functions
 702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @verbatim   
 704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
 705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                   ##### DMA transfers management functions #####
 706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================  
 707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @endverbatim
 709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Enables or disables the SAI Block x DMA interface.
 714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  NewState: new state of the selected SAI block DMA transfer request.
 716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_DMACmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState)
 720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 763              		.loc 1 720 1 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 768              		.loc 1 722 3 view .LVU222
 723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 769              		.loc 1 723 3 view .LVU223
 724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 770              		.loc 1 725 3 view .LVU224
 771              		.loc 1 725 6 is_stmt 0 view .LVU225
 772 0000 21B1     		cbz	r1, .L35
 726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Enable the selected SAI block mute mode */
 728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR1 |= SAI_xCR1_DMAEN;
 773              		.loc 1 728 5 is_stmt 1 view .LVU226
 774              		.loc 1 728 22 is_stmt 0 view .LVU227
 775 0002 0368     		ldr	r3, [r0]
 776 0004 43F40033 		orr	r3, r3, #131072
 777 0008 0360     		str	r3, [r0]
 778 000a 7047     		bx	lr
 779              	.L35:
ARM GAS  /tmp/ccyvNgzT.s 			page 27


 729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Disable the selected SAI SS output */
 733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->CR1 &= ~(SAI_xCR1_DMAEN);
 780              		.loc 1 733 5 is_stmt 1 view .LVU228
 781              		.loc 1 733 22 is_stmt 0 view .LVU229
 782 000c 0368     		ldr	r3, [r0]
 783 000e 23F40033 		bic	r3, r3, #131072
 784 0012 0360     		str	r3, [r0]
 734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 785              		.loc 1 735 1 view .LVU230
 786 0014 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE140:
 790              		.section	.text.SAI_ITConfig,"ax",%progbits
 791              		.align	1
 792              		.global	SAI_ITConfig
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 797              	SAI_ITConfig:
 798              	.LVL42:
 799              	.LFB141:
 736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @}
 739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /** @defgroup SAI_Group4 Interrupts and flags management functions
 742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  *  @brief   Interrupts and flags management functions
 743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *
 744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @verbatim   
 745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================
 746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****             ##### Interrupts and flags management functions #####
 747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  ===============================================================================  
 748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   This section provides a set of functions allowing to configure the SAI Interrupts 
 750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   sources and check or clear the flags or pending bits status.
 751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   The user should identify which mode will be used in his application to manage 
 752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     
 754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *** Polling Mode ***
 755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ====================
 756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In Polling Mode, the SAI communication can be managed by 7 flags:
 758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_FREQ : to indicate if there is a FIFO Request to write or to read.
 759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_MUTEDET : to indicate if a MUTE frame detected
 760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_OVRUDR : to indicate if an Overrun or Underrun error occur
 761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_AFSDET : to indicate if there is the detection of a audio frame 
 762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           synchronisation (FS) earlier than expected
 763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_LFSDET : to indicate if there is the detection of a audio frame 
 764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           synchronisation (FS) later than expected              
 765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_CNRDY : to indicate if  the codec is not ready to communicate during 
 766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                          the reception of the TAG 0 (slot0) of the AC97 audio frame 
 767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (#) SAI_FLAG_WCKCFG: to indicate if wrong clock configuration in master mode 
ARM GAS  /tmp/ccyvNgzT.s 			page 28


 768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                          error occurs.
 769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In this Mode it is advised to use the following functions:
 771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (+) FlagStatus SAI_GetFlagStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG);
 772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (+) void SAI_ClearFlag(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG);
 773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *** Interrupt Mode ***
 775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ======================
 776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In Interrupt Mode, the SAI communication can be managed by 7 interrupt sources
 778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   and 7 pending bits: 
 779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   (+) Pending Bits:
 780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_FREQ : to indicate if there is a FIFO Request to write or to read.
 781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_MUTEDET : to indicate if a MUTE frame detected.
 782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_OVRUDR : to indicate if an Overrun or Underrun error occur.
 783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_AFSDET : to indicate if there is the detection of a audio frame 
 784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           synchronisation (FS) earlier than expected.
 785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_LFSDET : to indicate if there is the detection of a audio frame 
 786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           synchronisation (FS) later than expected.              
 787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_CNRDY : to indicate if  the codec is not ready to communicate during 
 788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                          the reception of the TAG 0 (slot0) of the AC97 audio frame. 
 789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_WCKCFG: to indicate if wrong clock configuration in master mode 
 790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                          error occurs.
 791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   (+) Interrupt Source:
 793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_FREQ : specifies the interrupt source for FIFO Request.
 794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_MUTEDET : specifies the interrupt source for MUTE frame detected.
 795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_OVRUDR : specifies the interrupt source for overrun or underrun error.
 796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_AFSDET : specifies the interrupt source for anticipated frame synchronization
 797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           detection interrupt.
 798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_LFSDET : specifies the interrupt source for late frame synchronization
 799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                           detection interrupt.             
 800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_CNRDY : specifies the interrupt source for codec not ready interrupt
 801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (##) SAI_IT_WCKCFG: specifies the interrupt source for wrong clock configuration
 802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****                          interrupt.
 803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]                     
 804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In this Mode it is advised to use the following functions:
 805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (+) void SAI_ITConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT, FunctionalState NewStat
 806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (+) ITStatus SAI_GetITStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT);
 807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****      (+) void SAI_ClearITPendingBit(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT);
 808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *** DMA Mode ***
 810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ================
 811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In DMA Mode, each SAI audio block has an independent DMA interface in order to 
 813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   read or to write into the SAI_xDR register (to hit the internal FIFO). 
 814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   There is one DMA channel by audio block following basic DMA request/acknowledge 
 815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   protocol.
 816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   In this Mode it is advised to use the following function:
 818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     (+) void SAI_DMACmd(SAI_Block_TypeDef* SAI_Block_x, FunctionalState NewState);
 819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   This section provides also functions allowing to
 821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    (+) Check the SAI Block enable status
 822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    (+)Check the FIFO status 
 823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****    
 824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *** SAI Block Enable status ***
ARM GAS  /tmp/ccyvNgzT.s 			page 29


 825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ===============================
 826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   After disabling a SAI Block, it is recommended to check (or wait until) the SAI Block 
 828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   is effectively disabled. If a Block is disabled while an audio frame transfer is ongoing
 829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   the current frame will be transferred and the block will be effectively disabled only at 
 830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   the end of audio frame. 
 831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   To monitor this state it is possible to use the following function:
 832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     (+) FunctionalState SAI_GetCmdStatus(SAI_Block_TypeDef* SAI_Block_x); 
 833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  
 834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *** SAI Block FIFO status ***
 835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   =============================
 836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   [..]
 837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   It is possible to monitor the FIFO status when a transfer is ongoing using the following 
 838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   function:
 839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     (+) uint32_t SAI_GetFIFOStatus(SAI_Block_TypeDef* SAI_Block_x);
 840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     
 841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** @endverbatim
 842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @{
 843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Enables or disables the specified SAI Block interrupts.
 847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI interrupt source to be enabled or disabled. 
 849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_FREQ: FIFO Request interrupt mask
 851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt mask
 852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt mask
 853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection 
 854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *                                interrupt mask  
 855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt 
 856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *                                mask
 857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt mask
 858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt mask      
 859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  NewState: new state of the specified SAI interrupt.
 860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be: ENABLE or DISABLE.
 861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_ITConfig(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT, FunctionalState NewState)
 864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** { 
 800              		.loc 1 864 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 805              		.loc 1 866 3 view .LVU232
 867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 806              		.loc 1 867 3 view .LVU233
 868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 807              		.loc 1 868 3 view .LVU234
 869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if (NewState != DISABLE)
 808              		.loc 1 870 3 view .LVU235
 809              		.loc 1 870 6 is_stmt 0 view .LVU236
 810 0000 1AB1     		cbz	r2, .L38
ARM GAS  /tmp/ccyvNgzT.s 			page 30


 871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Enable the selected SAI Block interrupt */
 873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->IMR |= SAI_IT;
 811              		.loc 1 873 5 is_stmt 1 view .LVU237
 812              		.loc 1 873 22 is_stmt 0 view .LVU238
 813 0002 0369     		ldr	r3, [r0, #16]
 814 0004 1943     		orrs	r1, r1, r3
 815              	.LVL43:
 816              		.loc 1 873 22 view .LVU239
 817 0006 0161     		str	r1, [r0, #16]
 818 0008 7047     		bx	lr
 819              	.LVL44:
 820              	.L38:
 874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* Disable the selected SAI Block interrupt */
 878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     SAI_Block_x->IMR &= ~(SAI_IT);
 821              		.loc 1 878 5 is_stmt 1 view .LVU240
 822              		.loc 1 878 22 is_stmt 0 view .LVU241
 823 000a 0369     		ldr	r3, [r0, #16]
 824 000c 23EA0101 		bic	r1, r3, r1
 825              	.LVL45:
 826              		.loc 1 878 22 view .LVU242
 827 0010 0161     		str	r1, [r0, #16]
 879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 828              		.loc 1 880 1 view .LVU243
 829 0012 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE141:
 833              		.section	.text.SAI_GetFlagStatus,"ax",%progbits
 834              		.align	1
 835              		.global	SAI_GetFlagStatus
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 840              	SAI_GetFlagStatus:
 841              	.LVL46:
 842              	.LFB142:
 881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Checks whether the specified SAI block x flag is set or not.
 884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_FLAG: specifies the SAI block flag to check. 
 886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_FREQ: FIFO Request flag.  
 888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_MUTEDET: MUTE detection flag.  
 889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_OVRUDR: overrun/underrun flag.
 890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_WCKCFG: wrong clock configuration flag.            
 891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_CNRDY: codec not ready flag. 
 892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_AFSDET: anticipated frame synchronization detection flag.
 893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_LFSDET: late frame synchronization detection flag.
 894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval The new state of SAI_FLAG (SET or RESET).
 895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** FlagStatus SAI_GetFlagStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG)
 897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
ARM GAS  /tmp/ccyvNgzT.s 			page 31


 843              		.loc 1 897 1 is_stmt 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   FlagStatus bitstatus = RESET;
 848              		.loc 1 898 3 view .LVU245
 899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 849              		.loc 1 901 3 view .LVU246
 902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_GET_FLAG(SAI_FLAG));
 850              		.loc 1 902 3 view .LVU247
 903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the status of the specified SAI flag */
 905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if ((SAI_Block_x->SR & SAI_FLAG) != (uint32_t)RESET)
 851              		.loc 1 905 3 view .LVU248
 852              		.loc 1 905 19 is_stmt 0 view .LVU249
 853 0000 4369     		ldr	r3, [r0, #20]
 854              		.loc 1 905 6 view .LVU250
 855 0002 0B42     		tst	r3, r1
 856 0004 01D0     		beq	.L42
 906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* SAI_FLAG is set */
 908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     bitstatus = SET;
 857              		.loc 1 908 15 view .LVU251
 858 0006 0120     		movs	r0, #1
 859              	.LVL47:
 860              		.loc 1 908 15 view .LVU252
 861 0008 7047     		bx	lr
 862              	.LVL48:
 863              	.L42:
 909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
 911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* SAI_FLAG is reset */
 913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     bitstatus = RESET;
 864              		.loc 1 913 15 view .LVU253
 865 000a 0020     		movs	r0, #0
 866              	.LVL49:
 914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Return the SAI_FLAG status */
 916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   return  bitstatus;
 867              		.loc 1 916 3 is_stmt 1 view .LVU254
 917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 868              		.loc 1 917 1 is_stmt 0 view .LVU255
 869 000c 7047     		bx	lr
 870              		.cfi_endproc
 871              	.LFE142:
 873              		.section	.text.SAI_ClearFlag,"ax",%progbits
 874              		.align	1
 875              		.global	SAI_ClearFlag
 876              		.syntax unified
 877              		.thumb
 878              		.thumb_func
 880              	SAI_ClearFlag:
 881              	.LVL50:
ARM GAS  /tmp/ccyvNgzT.s 			page 32


 882              	.LFB143:
 918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Clears the specified SAI Block x flag.
 921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_FLAG: specifies the SAI block flag to check. 
 923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values: 
 924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_MUTEDET: MUTE detection flag.  
 925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_OVRUDR: overrun/underrun flag.
 926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_WCKCFG: wrong clock configuration flag.            
 927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_CNRDY: codec not ready flag. 
 928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_AFSDET: anticipated frame synchronization detection flag.
 929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_FLAG_LFSDET: late frame synchronization detection flag. 
 930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *  
 931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note    FREQ (FIFO Request) flag is cleared : 
 932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          - When the audio block is transmitter and the FIFO is full or the FIFO   
 933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            has one data (one buffer mode) depending the bit FTH in the
 934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            SAI_xCR2 register.
 935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          - When the audio block is receiver and the FIFO is not empty           
 936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *  
 937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
 938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_ClearFlag(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_FLAG)
 940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 883              		.loc 1 940 1 is_stmt 1 view -0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 888              		.loc 1 942 3 view .LVU257
 943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CLEAR_FLAG(SAI_FLAG));
 889              		.loc 1 943 3 view .LVU258
 944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     
 945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear the selected SAI Block flag */
 946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CLRFR |= SAI_FLAG;
 890              		.loc 1 946 3 view .LVU259
 891              		.loc 1 946 22 is_stmt 0 view .LVU260
 892 0000 8369     		ldr	r3, [r0, #24]
 893 0002 0B43     		orrs	r3, r3, r1
 894 0004 8361     		str	r3, [r0, #24]
 947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 895              		.loc 1 947 1 view .LVU261
 896 0006 7047     		bx	lr
 897              		.cfi_endproc
 898              	.LFE143:
 900              		.section	.text.SAI_GetITStatus,"ax",%progbits
 901              		.align	1
 902              		.global	SAI_GetITStatus
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 907              	SAI_GetITStatus:
 908              	.LVL51:
 909              	.LFB144:
 948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
ARM GAS  /tmp/ccyvNgzT.s 			page 33


 949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Checks whether the specified SAI Block x interrupt has occurred or not.
 951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI interrupt source to be enabled or disabled. 
 953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:
 954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_FREQ: FIFO Request interrupt 
 955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt 
 956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt 
 957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection interrupt           
 958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt                  
 959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt 
 960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt 
 961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *                
 962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval The new state of SAI_IT (SET or RESET).
 963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
 964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** ITStatus SAI_GetITStatus(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT)
 965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 910              		.loc 1 965 1 is_stmt 1 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   ITStatus bitstatus = RESET;
 915              		.loc 1 966 3 view .LVU263
 967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   uint32_t  enablestatus = 0;
 916              		.loc 1 967 3 view .LVU264
 968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
 970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 917              		.loc 1 970 3 view .LVU265
 971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 918              		.loc 1 971 3 view .LVU266
 972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
 973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the SAI_IT enable bit status */
 974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   enablestatus = (SAI_Block_x->IMR & SAI_IT) ;
 919              		.loc 1 974 3 view .LVU267
 920              		.loc 1 974 30 is_stmt 0 view .LVU268
 921 0000 0369     		ldr	r3, [r0, #16]
 922              		.loc 1 974 16 view .LVU269
 923 0002 0B40     		ands	r3, r3, r1
 924              	.LVL52:
 975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the status of the specified SAI interrupt */
 977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if (((SAI_Block_x->SR & SAI_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 925              		.loc 1 977 3 is_stmt 1 view .LVU270
 926              		.loc 1 977 20 is_stmt 0 view .LVU271
 927 0004 4269     		ldr	r2, [r0, #20]
 928              		.loc 1 977 6 view .LVU272
 929 0006 0A42     		tst	r2, r1
 930 0008 02D0     		beq	.L46
 931              		.loc 1 977 55 discriminator 1 view .LVU273
 932 000a 1BB9     		cbnz	r3, .L47
 978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* SAI_IT is set */
 980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     bitstatus = SET;
 981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
ARM GAS  /tmp/ccyvNgzT.s 			page 34


 983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
 984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* SAI_IT is reset */
 985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     bitstatus = RESET;
 933              		.loc 1 985 15 view .LVU274
 934 000c 0020     		movs	r0, #0
 935              	.LVL53:
 936              		.loc 1 985 15 view .LVU275
 937 000e 7047     		bx	lr
 938              	.LVL54:
 939              	.L46:
 940              		.loc 1 985 15 view .LVU276
 941 0010 0020     		movs	r0, #0
 942              	.LVL55:
 943              		.loc 1 985 15 view .LVU277
 944 0012 7047     		bx	lr
 945              	.LVL56:
 946              	.L47:
 980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 947              		.loc 1 980 15 view .LVU278
 948 0014 0120     		movs	r0, #1
 949              	.LVL57:
 986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
 987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Return the SAI_IT status */
 988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   return bitstatus;
 950              		.loc 1 988 3 is_stmt 1 view .LVU279
 989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 951              		.loc 1 989 1 is_stmt 0 view .LVU280
 952 0016 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE144:
 956              		.section	.text.SAI_ClearITPendingBit,"ax",%progbits
 957              		.align	1
 958              		.global	SAI_ClearITPendingBit
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	SAI_ClearITPendingBit:
 964              	.LVL58:
 965              	.LFB145:
 990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
 991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
 992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Clears the SAI Block x interrupt pending bit.
 993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral. 
 994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_IT: specifies the SAI Block interrupt pending bit to clear. 
 995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          This parameter can be one of the following values:  
 996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_MUTEDET: MUTE detection interrupt.  
 997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_OVRUDR: overrun/underrun interrupt.
 998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_WCKCFG: wrong clock configuration interrupt.            
 999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_CNRDY: codec not ready interrupt. 
1000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_AFSDET: anticipated frame synchronization detection interrupt.
1001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            @arg SAI_IT_LFSDET: late frame synchronization detection interrupt. 
1002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *  
1003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note    FREQ (FIFO Request) flag is cleared : 
1004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          - When the audio block is transmitter and the FIFO is full or the FIFO   
1005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            has one data (one buffer mode) depending the bit FTH in the
1006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            SAI_xCR2 register.
1007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          - When the audio block is receiver and the FIFO is not empty  
ARM GAS  /tmp/ccyvNgzT.s 			page 35


1008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *            
1009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval None
1010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
1011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** void SAI_ClearITPendingBit(SAI_Block_TypeDef* SAI_Block_x, uint32_t SAI_IT)
1012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 966              		.loc 1 1012 1 is_stmt 1 view -0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		@ link register save eliminated.
1013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
1014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 971              		.loc 1 1014 3 view .LVU282
1015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_CONFIG_IT(SAI_IT));
 972              		.loc 1 1015 3 view .LVU283
1016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
1017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Clear the selected SAI Block x interrupt pending bit */
1018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   SAI_Block_x->CLRFR |= SAI_IT; 
 973              		.loc 1 1018 3 view .LVU284
 974              		.loc 1 1018 22 is_stmt 0 view .LVU285
 975 0000 8369     		ldr	r3, [r0, #24]
 976 0002 0B43     		orrs	r3, r3, r1
 977 0004 8361     		str	r3, [r0, #24]
1019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 978              		.loc 1 1019 1 view .LVU286
 979 0006 7047     		bx	lr
 980              		.cfi_endproc
 981              	.LFE145:
 983              		.section	.text.SAI_GetCmdStatus,"ax",%progbits
 984              		.align	1
 985              		.global	SAI_GetCmdStatus
 986              		.syntax unified
 987              		.thumb
 988              		.thumb_func
 990              	SAI_GetCmdStatus:
 991              	.LVL59:
 992              	.LFB146:
1020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
1021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
1022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Returns the status of EN bit for the specified SAI Block x.
1023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
1024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *   
1025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @note    After disabling a SAI Block, it is recommended to check (or wait until) 
1026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          the SAI Block is effectively disabled. If a Block is disabled while
1027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          an audio frame transfer is ongoing, the current frame will be 
1028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          transferred and the block will be effectively disabled only at 
1029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *          the end of audio frame.  
1030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *      
1031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval Current state of the DMAy Streamx (ENABLE or DISABLE).
1032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
1033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** FunctionalState SAI_GetCmdStatus(SAI_Block_TypeDef* SAI_Block_x)
1034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 993              		.loc 1 1034 1 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              		@ link register save eliminated.
ARM GAS  /tmp/ccyvNgzT.s 			page 36


1035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   FunctionalState state = DISABLE;
 998              		.loc 1 1035 3 view .LVU288
1036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
1037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
1038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 999              		.loc 1 1038 3 view .LVU289
1039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   if ((SAI_Block_x->CR1 & (uint32_t)SAI_xCR1_SAIEN) != 0)
 1000              		.loc 1 1039 3 view .LVU290
 1001              		.loc 1 1039 19 is_stmt 0 view .LVU291
 1002 0000 0368     		ldr	r3, [r0]
 1003              		.loc 1 1039 6 view .LVU292
 1004 0002 13F4803F 		tst	r3, #65536
 1005 0006 01D0     		beq	.L51
1040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
1041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* The selected SAI Block x EN bit is set (audio frame transfer is ongoing) */
1042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     state = ENABLE;
 1006              		.loc 1 1042 11 view .LVU293
 1007 0008 0120     		movs	r0, #1
 1008              	.LVL60:
 1009              		.loc 1 1042 11 view .LVU294
 1010 000a 7047     		bx	lr
 1011              	.LVL61:
 1012              	.L51:
1043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
1044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   else
1045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   {
1046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     /* The selected SAI Block x EN bit is cleared (SAI Block is disabled and 
1047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****         all transfers are complete) */
1048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****     state = DISABLE;
 1013              		.loc 1 1048 11 view .LVU295
 1014 000c 0020     		movs	r0, #0
 1015              	.LVL62:
1049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   }
1050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   return state;
 1016              		.loc 1 1050 3 is_stmt 1 view .LVU296
1051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 1017              		.loc 1 1051 1 is_stmt 0 view .LVU297
 1018 000e 7047     		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE146:
 1022              		.section	.text.SAI_GetFIFOStatus,"ax",%progbits
 1023              		.align	1
 1024              		.global	SAI_GetFIFOStatus
 1025              		.syntax unified
 1026              		.thumb
 1027              		.thumb_func
 1029              	SAI_GetFIFOStatus:
 1030              	.LVL63:
 1031              	.LFB147:
1052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** 
1053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** /**
1054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @brief  Returns the current SAI Block x FIFO filled level.
1055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @param  SAI_Block_x: where x can be A or B to select the SAI Block peripheral.
1056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *   
1057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   * @retval The FIFO filling state.
1058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Empty: when FIFO is empty  
1059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Less1QuarterFull: when FIFO is less than 1 quarter-full 
ARM GAS  /tmp/ccyvNgzT.s 			page 37


1060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *                                               and not empty.
1061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_1QuarterFull: if more than 1 quarter-full.
1062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_HalfFull: if more than 1 half-full.
1063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_3QuartersFull: if more than 3 quarters-full.
1064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   *           - SAI_FIFOStatus_Full: when FIFO is full
1065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   */
1066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** uint32_t SAI_GetFIFOStatus(SAI_Block_TypeDef* SAI_Block_x)
1067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** {
 1032              		.loc 1 1067 1 is_stmt 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
1068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   uint32_t tmpreg = 0;
 1037              		.loc 1 1068 3 view .LVU299
1069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****  
1070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Check the parameters */
1071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   assert_param(IS_SAI_BLOCK_PERIPH(SAI_Block_x));
 1038              		.loc 1 1071 3 view .LVU300
1072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
1073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   /* Get the FIFO level bits */
1074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   tmpreg = (uint32_t)((SAI_Block_x->SR & SAI_xSR_FLVL));
 1039              		.loc 1 1074 3 view .LVU301
 1040              		.loc 1 1074 35 is_stmt 0 view .LVU302
 1041 0000 4069     		ldr	r0, [r0, #20]
 1042              	.LVL64:
1075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   
1076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c ****   return tmpreg;
 1043              		.loc 1 1076 3 is_stmt 1 view .LVU303
1077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sai.c **** }
 1044              		.loc 1 1077 1 is_stmt 0 view .LVU304
 1045 0002 00F4E020 		and	r0, r0, #458752
 1046              	.LVL65:
 1047              		.loc 1 1077 1 view .LVU305
 1048 0006 7047     		bx	lr
 1049              		.cfi_endproc
 1050              	.LFE147:
 1052              		.text
 1053              	.Letext0:
 1054              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1055              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1056              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1057              		.file 5 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sai.h"
 1058              		.file 6 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccyvNgzT.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sai.c
     /tmp/ccyvNgzT.s:20     .text.SAI_DeInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:26     .text.SAI_DeInit:0000000000000000 SAI_DeInit
     /tmp/ccyvNgzT.s:69     .text.SAI_DeInit:0000000000000020 $d
     /tmp/ccyvNgzT.s:74     .text.SAI_Init:0000000000000000 $t
     /tmp/ccyvNgzT.s:80     .text.SAI_Init:0000000000000000 SAI_Init
     /tmp/ccyvNgzT.s:172    .text.SAI_Init:0000000000000044 $d
     /tmp/ccyvNgzT.s:177    .text.SAI_FrameInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:183    .text.SAI_FrameInit:0000000000000000 SAI_FrameInit
     /tmp/ccyvNgzT.s:247    .text.SAI_FrameInit:000000000000002c $d
     /tmp/ccyvNgzT.s:252    .text.SAI_SlotInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:258    .text.SAI_SlotInit:0000000000000000 SAI_SlotInit
     /tmp/ccyvNgzT.s:321    .text.SAI_StructInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:327    .text.SAI_StructInit:0000000000000000 SAI_StructInit
     /tmp/ccyvNgzT.s:373    .text.SAI_FrameStructInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:379    .text.SAI_FrameStructInit:0000000000000000 SAI_FrameStructInit
     /tmp/ccyvNgzT.s:411    .text.SAI_SlotStructInit:0000000000000000 $t
     /tmp/ccyvNgzT.s:417    .text.SAI_SlotStructInit:0000000000000000 SAI_SlotStructInit
     /tmp/ccyvNgzT.s:445    .text.SAI_Cmd:0000000000000000 $t
     /tmp/ccyvNgzT.s:451    .text.SAI_Cmd:0000000000000000 SAI_Cmd
     /tmp/ccyvNgzT.s:482    .text.SAI_MonoModeConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:488    .text.SAI_MonoModeConfig:0000000000000000 SAI_MonoModeConfig
     /tmp/ccyvNgzT.s:514    .text.SAI_TRIStateConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:520    .text.SAI_TRIStateConfig:0000000000000000 SAI_TRIStateConfig
     /tmp/ccyvNgzT.s:546    .text.SAI_CompandingModeConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:552    .text.SAI_CompandingModeConfig:0000000000000000 SAI_CompandingModeConfig
     /tmp/ccyvNgzT.s:578    .text.SAI_MuteModeCmd:0000000000000000 $t
     /tmp/ccyvNgzT.s:584    .text.SAI_MuteModeCmd:0000000000000000 SAI_MuteModeCmd
     /tmp/ccyvNgzT.s:615    .text.SAI_MuteValueConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:621    .text.SAI_MuteValueConfig:0000000000000000 SAI_MuteValueConfig
     /tmp/ccyvNgzT.s:647    .text.SAI_MuteFrameCounterConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:653    .text.SAI_MuteFrameCounterConfig:0000000000000000 SAI_MuteFrameCounterConfig
     /tmp/ccyvNgzT.s:679    .text.SAI_FlushFIFO:0000000000000000 $t
     /tmp/ccyvNgzT.s:685    .text.SAI_FlushFIFO:0000000000000000 SAI_FlushFIFO
     /tmp/ccyvNgzT.s:705    .text.SAI_ReceiveData:0000000000000000 $t
     /tmp/ccyvNgzT.s:711    .text.SAI_ReceiveData:0000000000000000 SAI_ReceiveData
     /tmp/ccyvNgzT.s:730    .text.SAI_SendData:0000000000000000 $t
     /tmp/ccyvNgzT.s:736    .text.SAI_SendData:0000000000000000 SAI_SendData
     /tmp/ccyvNgzT.s:754    .text.SAI_DMACmd:0000000000000000 $t
     /tmp/ccyvNgzT.s:760    .text.SAI_DMACmd:0000000000000000 SAI_DMACmd
     /tmp/ccyvNgzT.s:791    .text.SAI_ITConfig:0000000000000000 $t
     /tmp/ccyvNgzT.s:797    .text.SAI_ITConfig:0000000000000000 SAI_ITConfig
     /tmp/ccyvNgzT.s:834    .text.SAI_GetFlagStatus:0000000000000000 $t
     /tmp/ccyvNgzT.s:840    .text.SAI_GetFlagStatus:0000000000000000 SAI_GetFlagStatus
     /tmp/ccyvNgzT.s:874    .text.SAI_ClearFlag:0000000000000000 $t
     /tmp/ccyvNgzT.s:880    .text.SAI_ClearFlag:0000000000000000 SAI_ClearFlag
     /tmp/ccyvNgzT.s:901    .text.SAI_GetITStatus:0000000000000000 $t
     /tmp/ccyvNgzT.s:907    .text.SAI_GetITStatus:0000000000000000 SAI_GetITStatus
     /tmp/ccyvNgzT.s:957    .text.SAI_ClearITPendingBit:0000000000000000 $t
     /tmp/ccyvNgzT.s:963    .text.SAI_ClearITPendingBit:0000000000000000 SAI_ClearITPendingBit
     /tmp/ccyvNgzT.s:984    .text.SAI_GetCmdStatus:0000000000000000 $t
     /tmp/ccyvNgzT.s:990    .text.SAI_GetCmdStatus:0000000000000000 SAI_GetCmdStatus
     /tmp/ccyvNgzT.s:1023   .text.SAI_GetFIFOStatus:0000000000000000 $t
     /tmp/ccyvNgzT.s:1029   .text.SAI_GetFIFOStatus:0000000000000000 SAI_GetFIFOStatus

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccyvNgzT.s 			page 39


RCC_APB2PeriphResetCmd
