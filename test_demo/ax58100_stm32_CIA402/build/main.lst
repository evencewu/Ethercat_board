ARM GAS  /tmp/ccroy7mc.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB139:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** #include "esc.h"
  27:Core/Src/main.c **** #include "ecat_slv.h"
  28:Core/Src/main.c **** #include "ecatapp.h"
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccroy7mc.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  49:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_rx;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi2_tx;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Definitions for ledTask */
  53:Core/Src/main.c **** osThreadId_t ledTaskHandle;
  54:Core/Src/main.c **** const osThreadAttr_t ledTask_attributes = {
  55:Core/Src/main.c ****   .name = "ledTask",
  56:Core/Src/main.c ****   .stack_size = 128 * 4,
  57:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  58:Core/Src/main.c **** };
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** static void MX_GPIO_Init(void);
  66:Core/Src/main.c **** static void MX_DMA_Init(void);
  67:Core/Src/main.c **** static void MX_SPI2_Init(void);
  68:Core/Src/main.c **** void LedTask(void *argument);
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** void ecatapp_loop(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****     // stack in mixed mode
  79:Core/Src/main.c ****     if (sync0_irq_flag) {
  80:Core/Src/main.c ****         ESC_updateALevent();        
  81:Core/Src/main.c ****         DIG_process (DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
  82:Core/Src/main.c ****         sync0_irq_flag = 0;
  83:Core/Src/main.c ****     }
  84:Core/Src/main.c ****     if (pdi_irq_flag) {
  85:Core/Src/main.c ****         ESC_updateALevent();
  86:Core/Src/main.c ****         if (ESCvar.dcsync) {
  87:Core/Src/main.c ****             DIG_process (DIG_PROCESS_OUTPUTS_FLAG);    
  88:Core/Src/main.c ****         } else {
ARM GAS  /tmp/ccroy7mc.s 			page 3


  89:Core/Src/main.c ****             DIG_process (DIG_PROCESS_OUTPUTS_FLAG | DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_
  90:Core/Src/main.c ****         }
  91:Core/Src/main.c ****         pdi_irq_flag = 0;
  92:Core/Src/main.c ****     } else {
  93:Core/Src/main.c ****         // ecat_slv_worker(ESCREG_ALEVENT_CONTROL | ESCREG_ALEVENT_SMCHANGE
  94:Core/Src/main.c ****         //                 | ESCREG_ALEVENT_SM0 | ESCREG_ALEVENT_SM1);
  95:Core/Src/main.c ****         ecat_slv_poll();
  96:Core/Src/main.c ****         DIG_process(DIG_PROCESS_WD_FLAG);
  97:Core/Src/main.c ****     }
  98:Core/Src/main.c **** }
  99:Core/Src/main.c **** /* USER CODE END 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief  The application entry point.
 103:Core/Src/main.c ****   * @retval int
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** int main(void)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 1 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 114:Core/Src/main.c ****   HAL_Init();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Configure the system clock */
 121:Core/Src/main.c ****   SystemClock_Config();
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE END SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* Initialize all configured peripherals */
 128:Core/Src/main.c ****   MX_GPIO_Init();
 129:Core/Src/main.c ****   MX_DMA_Init();
 130:Core/Src/main.c ****   MX_SPI2_Init();
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 132:Core/Src/main.c ****   ecatapp_init();
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Init scheduler */
 136:Core/Src/main.c ****   osKernelInitialize();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 139:Core/Src/main.c ****   /* add mutexes, ... */
 140:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 143:Core/Src/main.c ****   /* add semaphores, ... */
 144:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccroy7mc.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 147:Core/Src/main.c ****   /* start timers, add new ones, ... */
 148:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 151:Core/Src/main.c ****   /* add queues, ... */
 152:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Create the thread(s) */
 155:Core/Src/main.c ****   /* creation of ledTask */
 156:Core/Src/main.c ****   ledTaskHandle = osThreadNew(LedTask, NULL, &ledTask_attributes);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 159:Core/Src/main.c ****   /* add threads, ... */
 160:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 163:Core/Src/main.c ****   /* add events, ... */
 164:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Start scheduler */
 167:Core/Src/main.c ****   osKernelStart();
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 170:Core/Src/main.c ****   /* Infinite loop */
 171:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 172:Core/Src/main.c ****   while (1)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     /* USER CODE END WHILE */
 175:Core/Src/main.c ****     ecatapp_loop();
 176:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   /* USER CODE END 3 */
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief System Clock Configuration
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void SystemClock_Config(void)
 186:Core/Src/main.c **** {
 187:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 188:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 193:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 196:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
ARM GAS  /tmp/ccroy7mc.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 205:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 206:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 214:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 218:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 228:Core/Src/main.c ****   * @param None
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** static void MX_SPI2_Init(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 241:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 242:Core/Src/main.c ****   hspi2.Instance = SPI2;
 243:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 244:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 245:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 246:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 247:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 248:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 249:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 250:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 251:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 252:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 253:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 254:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 259:Core/Src/main.c **** 
ARM GAS  /tmp/ccroy7mc.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * Enable DMA controller clock
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c **** static void MX_DMA_Init(void)
 268:Core/Src/main.c **** {
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* DMA controller clock enable */
 271:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* DMA interrupt init */
 274:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
 275:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 5, 0);
 276:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 277:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 278:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 5, 0);
 279:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief GPIO Initialization Function
 285:Core/Src/main.c ****   * @param None
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** static void MX_GPIO_Init(void)
 289:Core/Src/main.c **** {
  28              		.loc 1 289 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 290:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 290 3 view .LVU1
  42              		.loc 1 290 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 291:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 292:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 295:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
ARM GAS  /tmp/ccroy7mc.s 			page 7


  49              		.loc 1 295 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 295 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 295 3 view .LVU5
  54 0012 304B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 295 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 295 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 295 3 view .LVU8
 296:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  66              		.loc 1 296 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 296 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 296 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00402 		orr	r2, r2, #4
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 296 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00402 		and	r2, r2, #4
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 296 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 296 3 view .LVU14
 297:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 297 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 297 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 297 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 297 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 297 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 297 3 view .LVU20
 298:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 298 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 298 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 298 3 view .LVU23
ARM GAS  /tmp/ccroy7mc.s 			page 8


 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 298 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 298 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 298 3 view .LVU26
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 301:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED3_Pin|LED2_Pin|LED1_Pin|LED0_Pin
 114              		.loc 1 301 3 view .LVU27
 115 0062 1D4E     		ldr	r6, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 4FF4F241 		mov	r1, #30976
 118 006a 3046     		mov	r0, r6
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 302:Core/Src/main.c ****                           |SPI2_NSS_Pin, GPIO_PIN_RESET);
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 305:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 121              		.loc 1 305 3 view .LVU28
 122              		.loc 1 305 23 is_stmt 0 view .LVU29
 123 0070 0127     		movs	r7, #1
 124 0072 0597     		str	r7, [sp, #20]
 306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 125              		.loc 1 306 3 is_stmt 1 view .LVU30
 126              		.loc 1 306 24 is_stmt 0 view .LVU31
 127 0074 4FF48813 		mov	r3, #1114112
 128 0078 0693     		str	r3, [sp, #24]
 307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 307 3 is_stmt 1 view .LVU32
 130              		.loc 1 307 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 308:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 308 3 is_stmt 1 view .LVU34
 133 007c 174D     		ldr	r5, .L3+8
 134 007e 05A9     		add	r1, sp, #20
 135 0080 2846     		mov	r0, r5
 136 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL1:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /*Configure GPIO pins : LED3_Pin LED2_Pin LED1_Pin LED0_Pin
 311:Core/Src/main.c ****                            SPI2_NSS_Pin */
 312:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin|LED1_Pin|LED0_Pin
 138              		.loc 1 312 3 view .LVU35
 139              		.loc 1 312 23 is_stmt 0 view .LVU36
 140 0086 4FF4F243 		mov	r3, #30976
 141 008a 0593     		str	r3, [sp, #20]
 313:Core/Src/main.c ****                           |SPI2_NSS_Pin;
 314:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 314 3 is_stmt 1 view .LVU37
 143              		.loc 1 314 24 is_stmt 0 view .LVU38
ARM GAS  /tmp/ccroy7mc.s 			page 9


 144 008c 0697     		str	r7, [sp, #24]
 315:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 315 3 is_stmt 1 view .LVU39
 146              		.loc 1 315 24 is_stmt 0 view .LVU40
 147 008e 0794     		str	r4, [sp, #28]
 316:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 316 3 is_stmt 1 view .LVU41
 149              		.loc 1 316 25 is_stmt 0 view .LVU42
 150 0090 0894     		str	r4, [sp, #32]
 317:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 151              		.loc 1 317 3 is_stmt 1 view .LVU43
 152 0092 05A9     		add	r1, sp, #20
 153 0094 3046     		mov	r0, r6
 154 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /*Configure GPIO pin : SPI2_IRQ_Pin */
 320:Core/Src/main.c ****   GPIO_InitStruct.Pin = SPI2_IRQ_Pin;
 156              		.loc 1 320 3 view .LVU44
 157              		.loc 1 320 23 is_stmt 0 view .LVU45
 158 009a 4FF48073 		mov	r3, #256
 159 009e 0593     		str	r3, [sp, #20]
 321:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 160              		.loc 1 321 3 is_stmt 1 view .LVU46
 161              		.loc 1 321 24 is_stmt 0 view .LVU47
 162 00a0 4FF40413 		mov	r3, #2162688
 163 00a4 0693     		str	r3, [sp, #24]
 322:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 322 3 is_stmt 1 view .LVU48
 165              		.loc 1 322 24 is_stmt 0 view .LVU49
 166 00a6 0794     		str	r4, [sp, #28]
 323:Core/Src/main.c ****   HAL_GPIO_Init(SPI2_IRQ_GPIO_Port, &GPIO_InitStruct);
 167              		.loc 1 323 3 is_stmt 1 view .LVU50
 168 00a8 05A9     		add	r1, sp, #20
 169 00aa 2846     		mov	r0, r5
 170 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 171              	.LVL3:
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* EXTI interrupt init*/
 326:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 172              		.loc 1 326 3 view .LVU51
 173 00b0 2246     		mov	r2, r4
 174 00b2 0521     		movs	r1, #5
 175 00b4 0620     		movs	r0, #6
 176 00b6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 177              	.LVL4:
 327:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 178              		.loc 1 327 3 view .LVU52
 179 00ba 0620     		movs	r0, #6
 180 00bc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 181              	.LVL5:
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 182              		.loc 1 329 3 view .LVU53
 183 00c0 2246     		mov	r2, r4
 184 00c2 0521     		movs	r1, #5
 185 00c4 1720     		movs	r0, #23
ARM GAS  /tmp/ccroy7mc.s 			page 10


 186 00c6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 187              	.LVL6:
 330:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 188              		.loc 1 330 3 view .LVU54
 189 00ca 1720     		movs	r0, #23
 190 00cc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 191              	.LVL7:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 333:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 334:Core/Src/main.c **** }
 192              		.loc 1 334 1 is_stmt 0 view .LVU55
 193 00d0 0BB0     		add	sp, sp, #44
 194              		.cfi_def_cfa_offset 20
 195              		@ sp needed
 196 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 197              	.L4:
 198              		.align	2
 199              	.L3:
 200 00d4 00380240 		.word	1073887232
 201 00d8 00040240 		.word	1073873920
 202 00dc 00000240 		.word	1073872896
 203              		.cfi_endproc
 204              	.LFE139:
 206              		.section	.text.MX_DMA_Init,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	MX_DMA_Init:
 213              	.LFB138:
 268:Core/Src/main.c **** 
 214              		.loc 1 268 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 8
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 10B5     		push	{r4, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 4, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 271:Core/Src/main.c **** 
 224              		.loc 1 271 3 view .LVU57
 225              	.LBB8:
 271:Core/Src/main.c **** 
 226              		.loc 1 271 3 view .LVU58
 227 0004 0024     		movs	r4, #0
 228 0006 0194     		str	r4, [sp, #4]
 271:Core/Src/main.c **** 
 229              		.loc 1 271 3 view .LVU59
 230 0008 0D4B     		ldr	r3, .L7
 231 000a 1A6B     		ldr	r2, [r3, #48]
 232 000c 42F40012 		orr	r2, r2, #2097152
 233 0010 1A63     		str	r2, [r3, #48]
 271:Core/Src/main.c **** 
 234              		.loc 1 271 3 view .LVU60
ARM GAS  /tmp/ccroy7mc.s 			page 11


 235 0012 1B6B     		ldr	r3, [r3, #48]
 236 0014 03F40013 		and	r3, r3, #2097152
 237 0018 0193     		str	r3, [sp, #4]
 271:Core/Src/main.c **** 
 238              		.loc 1 271 3 view .LVU61
 239 001a 019B     		ldr	r3, [sp, #4]
 240              	.LBE8:
 271:Core/Src/main.c **** 
 241              		.loc 1 271 3 view .LVU62
 275:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 242              		.loc 1 275 3 view .LVU63
 243 001c 2246     		mov	r2, r4
 244 001e 0521     		movs	r1, #5
 245 0020 0E20     		movs	r0, #14
 246 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 247              	.LVL8:
 276:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 248              		.loc 1 276 3 view .LVU64
 249 0026 0E20     		movs	r0, #14
 250 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 251              	.LVL9:
 278:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 252              		.loc 1 278 3 view .LVU65
 253 002c 2246     		mov	r2, r4
 254 002e 0521     		movs	r1, #5
 255 0030 0F20     		movs	r0, #15
 256 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 257              	.LVL10:
 279:Core/Src/main.c **** 
 258              		.loc 1 279 3 view .LVU66
 259 0036 0F20     		movs	r0, #15
 260 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 261              	.LVL11:
 281:Core/Src/main.c **** 
 262              		.loc 1 281 1 is_stmt 0 view .LVU67
 263 003c 02B0     		add	sp, sp, #8
 264              		.cfi_def_cfa_offset 8
 265              		@ sp needed
 266 003e 10BD     		pop	{r4, pc}
 267              	.L8:
 268              		.align	2
 269              	.L7:
 270 0040 00380240 		.word	1073887232
 271              		.cfi_endproc
 272              	.LFE138:
 274              		.section	.text.LedTask,"ax",%progbits
 275              		.align	1
 276              		.global	LedTask
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	LedTask:
 282              	.LFB140:
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccroy7mc.s 			page 12


 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** /* USER CODE BEGIN Header_LedTask */
 341:Core/Src/main.c **** /**
 342:Core/Src/main.c ****   * @brief  Function implementing the ledTask thread.
 343:Core/Src/main.c ****   * @param  argument: Not used
 344:Core/Src/main.c ****   * @retval None
 345:Core/Src/main.c ****   */
 346:Core/Src/main.c **** /* USER CODE END Header_LedTask */
 347:Core/Src/main.c **** void LedTask(void *argument)
 348:Core/Src/main.c **** {
 283              		.loc 1 348 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ Volatile: function does not return.
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              	.LVL12:
 289              		.loc 1 348 1 is_stmt 0 view .LVU69
 290 0000 08B5     		push	{r3, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
 294              	.LVL13:
 295              	.L10:
 349:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 350:Core/Src/main.c ****   /* Infinite loop */
 351:Core/Src/main.c ****   for(;;)
 296              		.loc 1 351 3 is_stmt 1 discriminator 1 view .LVU70
 352:Core/Src/main.c ****   {
 353:Core/Src/main.c ****     osDelay(1);
 297              		.loc 1 353 5 discriminator 1 view .LVU71
 298 0002 0120     		movs	r0, #1
 299 0004 FFF7FEFF 		bl	osDelay
 300              	.LVL14:
 351:Core/Src/main.c ****   {
 301              		.loc 1 351 8 discriminator 1 view .LVU72
 302 0008 FBE7     		b	.L10
 303              		.cfi_endproc
 304              	.LFE140:
 306              		.section	.text.ecatapp_loop,"ax",%progbits
 307              		.align	1
 308              		.global	ecatapp_loop
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	ecatapp_loop:
 314              	.LFB134:
  77:Core/Src/main.c ****     // stack in mixed mode
 315              		.loc 1 77 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
  79:Core/Src/main.c ****         ESC_updateALevent();        
 323              		.loc 1 79 5 view .LVU74
ARM GAS  /tmp/ccroy7mc.s 			page 13


  79:Core/Src/main.c ****         ESC_updateALevent();        
 324              		.loc 1 79 9 is_stmt 0 view .LVU75
 325 0002 174B     		ldr	r3, .L20
 326 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  79:Core/Src/main.c ****         ESC_updateALevent();        
 327              		.loc 1 79 8 view .LVU76
 328 0006 9BB9     		cbnz	r3, .L19
 329              	.L13:
  84:Core/Src/main.c ****         ESC_updateALevent();
 330              		.loc 1 84 5 is_stmt 1 view .LVU77
  84:Core/Src/main.c ****         ESC_updateALevent();
 331              		.loc 1 84 9 is_stmt 0 view .LVU78
 332 0008 164B     		ldr	r3, .L20+4
 333 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  84:Core/Src/main.c ****         ESC_updateALevent();
 334              		.loc 1 84 8 view .LVU79
 335 000c 0BB3     		cbz	r3, .L14
  85:Core/Src/main.c ****         if (ESCvar.dcsync) {
 336              		.loc 1 85 9 is_stmt 1 view .LVU80
 337 000e 164C     		ldr	r4, .L20+8
 338 0010 0422     		movs	r2, #4
 339 0012 2146     		mov	r1, r4
 340 0014 4FF41160 		mov	r0, #2320
 341 0018 FFF7FEFF 		bl	ESC_read
 342              	.LVL15:
  85:Core/Src/main.c ****         if (ESCvar.dcsync) {
 343              		.loc 1 85 28 view .LVU81
  86:Core/Src/main.c ****             DIG_process (DIG_PROCESS_OUTPUTS_FLAG);    
 344              		.loc 1 86 9 view .LVU82
  86:Core/Src/main.c ****             DIG_process (DIG_PROCESS_OUTPUTS_FLAG);    
 345              		.loc 1 86 19 is_stmt 0 view .LVU83
 346 001c 14F8603C 		ldrb	r3, [r4, #-96]	@ zero_extendqisi2
  86:Core/Src/main.c ****             DIG_process (DIG_PROCESS_OUTPUTS_FLAG);    
 347              		.loc 1 86 12 view .LVU84
 348 0020 9BB1     		cbz	r3, .L15
  87:Core/Src/main.c ****         } else {
 349              		.loc 1 87 13 is_stmt 1 view .LVU85
 350 0022 0220     		movs	r0, #2
 351 0024 FFF7FEFF 		bl	DIG_process
 352              	.LVL16:
 353              	.L16:
  91:Core/Src/main.c ****     } else {
 354              		.loc 1 91 9 view .LVU86
  91:Core/Src/main.c ****     } else {
 355              		.loc 1 91 22 is_stmt 0 view .LVU87
 356 0028 0E4B     		ldr	r3, .L20+4
 357 002a 0022     		movs	r2, #0
 358 002c 1A70     		strb	r2, [r3]
 359              	.L12:
  98:Core/Src/main.c **** /* USER CODE END 0 */
 360              		.loc 1 98 1 view .LVU88
 361 002e 10BD     		pop	{r4, pc}
 362              	.L19:
  80:Core/Src/main.c ****         DIG_process (DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
 363              		.loc 1 80 9 is_stmt 1 view .LVU89
 364 0030 0422     		movs	r2, #4
 365 0032 0D49     		ldr	r1, .L20+8
ARM GAS  /tmp/ccroy7mc.s 			page 14


 366 0034 4FF41160 		mov	r0, #2320
 367 0038 FFF7FEFF 		bl	ESC_read
 368              	.LVL17:
  80:Core/Src/main.c ****         DIG_process (DIG_PROCESS_APP_HOOK_FLAG | DIG_PROCESS_INPUTS_FLAG);
 369              		.loc 1 80 28 view .LVU90
  81:Core/Src/main.c ****         sync0_irq_flag = 0;
 370              		.loc 1 81 9 view .LVU91
 371 003c 0920     		movs	r0, #9
 372 003e FFF7FEFF 		bl	DIG_process
 373              	.LVL18:
  82:Core/Src/main.c ****     }
 374              		.loc 1 82 9 view .LVU92
  82:Core/Src/main.c ****     }
 375              		.loc 1 82 24 is_stmt 0 view .LVU93
 376 0042 074B     		ldr	r3, .L20
 377 0044 0022     		movs	r2, #0
 378 0046 1A70     		strb	r2, [r3]
 379 0048 DEE7     		b	.L13
 380              	.L15:
  89:Core/Src/main.c ****         }
 381              		.loc 1 89 13 is_stmt 1 view .LVU94
 382 004a 0B20     		movs	r0, #11
 383 004c FFF7FEFF 		bl	DIG_process
 384              	.LVL19:
 385 0050 EAE7     		b	.L16
 386              	.L14:
  95:Core/Src/main.c ****         DIG_process(DIG_PROCESS_WD_FLAG);
 387              		.loc 1 95 9 view .LVU95
 388 0052 FFF7FEFF 		bl	ecat_slv_poll
 389              	.LVL20:
  96:Core/Src/main.c ****     }
 390              		.loc 1 96 9 view .LVU96
 391 0056 0420     		movs	r0, #4
 392 0058 FFF7FEFF 		bl	DIG_process
 393              	.LVL21:
  98:Core/Src/main.c **** /* USER CODE END 0 */
 394              		.loc 1 98 1 is_stmt 0 view .LVU97
 395 005c E7E7     		b	.L12
 396              	.L21:
 397 005e 00BF     		.align	2
 398              	.L20:
 399 0060 00000000 		.word	.LANCHOR0
 400 0064 00000000 		.word	.LANCHOR1
 401 0068 D8000000 		.word	ESCvar+216
 402              		.cfi_endproc
 403              	.LFE134:
 405              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 406              		.align	1
 407              		.global	HAL_TIM_PeriodElapsedCallback
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	HAL_TIM_PeriodElapsedCallback:
 413              	.LVL22:
 414              	.LFB141:
 354:Core/Src/main.c ****   }
 355:Core/Src/main.c ****   /* USER CODE END 5 */
ARM GAS  /tmp/ccroy7mc.s 			page 15


 356:Core/Src/main.c **** }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /**
 359:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 360:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 361:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 362:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 363:Core/Src/main.c ****   * @param  htim : TIM handle
 364:Core/Src/main.c ****   * @retval None
 365:Core/Src/main.c ****   */
 366:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 367:Core/Src/main.c **** {
 415              		.loc 1 367 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		.loc 1 367 1 is_stmt 0 view .LVU99
 420 0000 08B5     		push	{r3, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 368:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 371:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 424              		.loc 1 371 3 is_stmt 1 view .LVU100
 425              		.loc 1 371 11 is_stmt 0 view .LVU101
 426 0002 0268     		ldr	r2, [r0]
 427              		.loc 1 371 6 view .LVU102
 428 0004 034B     		ldr	r3, .L26
 429 0006 9A42     		cmp	r2, r3
 430 0008 00D0     		beq	.L25
 431              	.LVL23:
 432              	.L22:
 372:Core/Src/main.c ****     HAL_IncTick();
 373:Core/Src/main.c ****   }
 374:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 377:Core/Src/main.c **** }
 433              		.loc 1 377 1 view .LVU103
 434 000a 08BD     		pop	{r3, pc}
 435              	.LVL24:
 436              	.L25:
 372:Core/Src/main.c ****     HAL_IncTick();
 437              		.loc 1 372 5 is_stmt 1 view .LVU104
 438 000c FFF7FEFF 		bl	HAL_IncTick
 439              	.LVL25:
 440              		.loc 1 377 1 is_stmt 0 view .LVU105
 441 0010 FBE7     		b	.L22
 442              	.L27:
 443 0012 00BF     		.align	2
 444              	.L26:
 445 0014 00100040 		.word	1073745920
 446              		.cfi_endproc
 447              	.LFE141:
 449              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/ccroy7mc.s 			page 16


 450              		.align	1
 451              		.global	Error_Handler
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	Error_Handler:
 457              	.LFB142:
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /**
 380:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 381:Core/Src/main.c ****   * @retval None
 382:Core/Src/main.c ****   */
 383:Core/Src/main.c **** void Error_Handler(void)
 384:Core/Src/main.c **** {
 458              		.loc 1 384 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ Volatile: function does not return.
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463              		@ link register save eliminated.
 385:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 386:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 387:Core/Src/main.c ****   __disable_irq();
 464              		.loc 1 387 3 view .LVU107
 465              	.LBB9:
 466              	.LBI9:
 467              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/ccroy7mc.s 			page 17


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccroy7mc.s 			page 18


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 468              		.loc 2 140 27 view .LVU108
 469              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/ccroy7mc.s 			page 19


 470              		.loc 2 142 3 view .LVU109
 471              		.syntax unified
 472              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 473 0000 72B6     		cpsid i
 474              	@ 0 "" 2
 475              		.thumb
 476              		.syntax unified
 477              	.L29:
 478              	.LBE10:
 479              	.LBE9:
 388:Core/Src/main.c ****   while (1)
 480              		.loc 1 388 3 discriminator 1 view .LVU110
 389:Core/Src/main.c ****   {
 390:Core/Src/main.c ****   }
 481              		.loc 1 390 3 discriminator 1 view .LVU111
 388:Core/Src/main.c ****   while (1)
 482              		.loc 1 388 9 discriminator 1 view .LVU112
 483 0002 FEE7     		b	.L29
 484              		.cfi_endproc
 485              	.LFE142:
 487              		.section	.text.MX_SPI2_Init,"ax",%progbits
 488              		.align	1
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	MX_SPI2_Init:
 494              	.LFB137:
 232:Core/Src/main.c **** 
 495              		.loc 1 232 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 08B5     		push	{r3, lr}
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
 242:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 503              		.loc 1 242 3 view .LVU114
 242:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 504              		.loc 1 242 18 is_stmt 0 view .LVU115
 505 0002 0E48     		ldr	r0, .L34
 506 0004 0E4B     		ldr	r3, .L34+4
 507 0006 0360     		str	r3, [r0]
 243:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 508              		.loc 1 243 3 is_stmt 1 view .LVU116
 243:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 509              		.loc 1 243 19 is_stmt 0 view .LVU117
 510 0008 4FF48273 		mov	r3, #260
 511 000c 4360     		str	r3, [r0, #4]
 244:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 512              		.loc 1 244 3 is_stmt 1 view .LVU118
 244:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 513              		.loc 1 244 24 is_stmt 0 view .LVU119
 514 000e 0023     		movs	r3, #0
 515 0010 8360     		str	r3, [r0, #8]
 245:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 516              		.loc 1 245 3 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccroy7mc.s 			page 20


 245:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 517              		.loc 1 245 23 is_stmt 0 view .LVU121
 518 0012 C360     		str	r3, [r0, #12]
 246:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 519              		.loc 1 246 3 is_stmt 1 view .LVU122
 246:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 520              		.loc 1 246 26 is_stmt 0 view .LVU123
 521 0014 0361     		str	r3, [r0, #16]
 247:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 522              		.loc 1 247 3 is_stmt 1 view .LVU124
 247:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 523              		.loc 1 247 23 is_stmt 0 view .LVU125
 524 0016 4361     		str	r3, [r0, #20]
 248:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 525              		.loc 1 248 3 is_stmt 1 view .LVU126
 248:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 526              		.loc 1 248 18 is_stmt 0 view .LVU127
 527 0018 4FF40072 		mov	r2, #512
 528 001c 8261     		str	r2, [r0, #24]
 249:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 529              		.loc 1 249 3 is_stmt 1 view .LVU128
 249:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 530              		.loc 1 249 32 is_stmt 0 view .LVU129
 531 001e C361     		str	r3, [r0, #28]
 250:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 532              		.loc 1 250 3 is_stmt 1 view .LVU130
 250:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 533              		.loc 1 250 23 is_stmt 0 view .LVU131
 534 0020 0362     		str	r3, [r0, #32]
 251:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 535              		.loc 1 251 3 is_stmt 1 view .LVU132
 251:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_ENABLE;
 536              		.loc 1 251 21 is_stmt 0 view .LVU133
 537 0022 4362     		str	r3, [r0, #36]
 252:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 538              		.loc 1 252 3 is_stmt 1 view .LVU134
 252:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 128;
 539              		.loc 1 252 29 is_stmt 0 view .LVU135
 540 0024 4FF40053 		mov	r3, #8192
 541 0028 8362     		str	r3, [r0, #40]
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 542              		.loc 1 253 3 is_stmt 1 view .LVU136
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 543              		.loc 1 253 28 is_stmt 0 view .LVU137
 544 002a 8023     		movs	r3, #128
 545 002c C362     		str	r3, [r0, #44]
 254:Core/Src/main.c ****   {
 546              		.loc 1 254 3 is_stmt 1 view .LVU138
 254:Core/Src/main.c ****   {
 547              		.loc 1 254 7 is_stmt 0 view .LVU139
 548 002e FFF7FEFF 		bl	HAL_SPI_Init
 549              	.LVL26:
 254:Core/Src/main.c ****   {
 550              		.loc 1 254 6 view .LVU140
 551 0032 00B9     		cbnz	r0, .L33
 262:Core/Src/main.c **** 
 552              		.loc 1 262 1 view .LVU141
ARM GAS  /tmp/ccroy7mc.s 			page 21


 553 0034 08BD     		pop	{r3, pc}
 554              	.L33:
 256:Core/Src/main.c ****   }
 555              		.loc 1 256 5 is_stmt 1 view .LVU142
 556 0036 FFF7FEFF 		bl	Error_Handler
 557              	.LVL27:
 558              	.L35:
 559 003a 00BF     		.align	2
 560              	.L34:
 561 003c 00000000 		.word	.LANCHOR2
 562 0040 00380040 		.word	1073756160
 563              		.cfi_endproc
 564              	.LFE137:
 566              		.section	.text.SystemClock_Config,"ax",%progbits
 567              		.align	1
 568              		.global	SystemClock_Config
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	SystemClock_Config:
 574              	.LFB136:
 186:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 575              		.loc 1 186 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 80
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 00B5     		push	{lr}
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 14, -4
 582 0002 95B0     		sub	sp, sp, #84
 583              		.cfi_def_cfa_offset 88
 187:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 584              		.loc 1 187 3 view .LVU144
 187:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 585              		.loc 1 187 22 is_stmt 0 view .LVU145
 586 0004 3022     		movs	r2, #48
 587 0006 0021     		movs	r1, #0
 588 0008 08A8     		add	r0, sp, #32
 589 000a FFF7FEFF 		bl	memset
 590              	.LVL28:
 188:Core/Src/main.c **** 
 591              		.loc 1 188 3 is_stmt 1 view .LVU146
 188:Core/Src/main.c **** 
 592              		.loc 1 188 22 is_stmt 0 view .LVU147
 593 000e 0023     		movs	r3, #0
 594 0010 0393     		str	r3, [sp, #12]
 595 0012 0493     		str	r3, [sp, #16]
 596 0014 0593     		str	r3, [sp, #20]
 597 0016 0693     		str	r3, [sp, #24]
 598 0018 0793     		str	r3, [sp, #28]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 599              		.loc 1 192 3 is_stmt 1 view .LVU148
 600              	.LBB11:
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 601              		.loc 1 192 3 view .LVU149
 602 001a 0193     		str	r3, [sp, #4]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  /tmp/ccroy7mc.s 			page 22


 603              		.loc 1 192 3 view .LVU150
 604 001c 204A     		ldr	r2, .L42
 605 001e 116C     		ldr	r1, [r2, #64]
 606 0020 41F08051 		orr	r1, r1, #268435456
 607 0024 1164     		str	r1, [r2, #64]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 608              		.loc 1 192 3 view .LVU151
 609 0026 126C     		ldr	r2, [r2, #64]
 610 0028 02F08052 		and	r2, r2, #268435456
 611 002c 0192     		str	r2, [sp, #4]
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 612              		.loc 1 192 3 view .LVU152
 613 002e 019A     		ldr	r2, [sp, #4]
 614              	.LBE11:
 192:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 615              		.loc 1 192 3 view .LVU153
 193:Core/Src/main.c **** 
 616              		.loc 1 193 3 view .LVU154
 617              	.LBB12:
 193:Core/Src/main.c **** 
 618              		.loc 1 193 3 view .LVU155
 619 0030 0293     		str	r3, [sp, #8]
 193:Core/Src/main.c **** 
 620              		.loc 1 193 3 view .LVU156
 621 0032 1C4B     		ldr	r3, .L42+4
 622 0034 1A68     		ldr	r2, [r3]
 623 0036 42F48042 		orr	r2, r2, #16384
 624 003a 1A60     		str	r2, [r3]
 193:Core/Src/main.c **** 
 625              		.loc 1 193 3 view .LVU157
 626 003c 1B68     		ldr	r3, [r3]
 627 003e 03F48043 		and	r3, r3, #16384
 628 0042 0293     		str	r3, [sp, #8]
 193:Core/Src/main.c **** 
 629              		.loc 1 193 3 view .LVU158
 630 0044 029B     		ldr	r3, [sp, #8]
 631              	.LBE12:
 193:Core/Src/main.c **** 
 632              		.loc 1 193 3 view .LVU159
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 633              		.loc 1 198 3 view .LVU160
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 634              		.loc 1 198 36 is_stmt 0 view .LVU161
 635 0046 0123     		movs	r3, #1
 636 0048 0893     		str	r3, [sp, #32]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 637              		.loc 1 199 3 is_stmt 1 view .LVU162
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 638              		.loc 1 199 30 is_stmt 0 view .LVU163
 639 004a 4FF48033 		mov	r3, #65536
 640 004e 0993     		str	r3, [sp, #36]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 641              		.loc 1 200 3 is_stmt 1 view .LVU164
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 642              		.loc 1 200 34 is_stmt 0 view .LVU165
 643 0050 0223     		movs	r3, #2
 644 0052 0E93     		str	r3, [sp, #56]
ARM GAS  /tmp/ccroy7mc.s 			page 23


 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 645              		.loc 1 201 3 is_stmt 1 view .LVU166
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 646              		.loc 1 201 35 is_stmt 0 view .LVU167
 647 0054 4FF48002 		mov	r2, #4194304
 648 0058 0F92     		str	r2, [sp, #60]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 649              		.loc 1 202 3 is_stmt 1 view .LVU168
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 650              		.loc 1 202 30 is_stmt 0 view .LVU169
 651 005a 0422     		movs	r2, #4
 652 005c 1092     		str	r2, [sp, #64]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 653              		.loc 1 203 3 is_stmt 1 view .LVU170
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 654              		.loc 1 203 30 is_stmt 0 view .LVU171
 655 005e A822     		movs	r2, #168
 656 0060 1192     		str	r2, [sp, #68]
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 657              		.loc 1 204 3 is_stmt 1 view .LVU172
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 658              		.loc 1 204 30 is_stmt 0 view .LVU173
 659 0062 1293     		str	r3, [sp, #72]
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 660              		.loc 1 205 3 is_stmt 1 view .LVU174
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 661              		.loc 1 205 30 is_stmt 0 view .LVU175
 662 0064 0723     		movs	r3, #7
 663 0066 1393     		str	r3, [sp, #76]
 206:Core/Src/main.c ****   {
 664              		.loc 1 206 3 is_stmt 1 view .LVU176
 206:Core/Src/main.c ****   {
 665              		.loc 1 206 7 is_stmt 0 view .LVU177
 666 0068 08A8     		add	r0, sp, #32
 667 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 668              	.LVL29:
 206:Core/Src/main.c ****   {
 669              		.loc 1 206 6 view .LVU178
 670 006e 98B9     		cbnz	r0, .L40
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 671              		.loc 1 213 3 is_stmt 1 view .LVU179
 213:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 672              		.loc 1 213 31 is_stmt 0 view .LVU180
 673 0070 0F23     		movs	r3, #15
 674 0072 0393     		str	r3, [sp, #12]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 675              		.loc 1 215 3 is_stmt 1 view .LVU181
 215:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 676              		.loc 1 215 34 is_stmt 0 view .LVU182
 677 0074 0223     		movs	r3, #2
 678 0076 0493     		str	r3, [sp, #16]
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 679              		.loc 1 216 3 is_stmt 1 view .LVU183
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 680              		.loc 1 216 35 is_stmt 0 view .LVU184
 681 0078 0023     		movs	r3, #0
 682 007a 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccroy7mc.s 			page 24


 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 683              		.loc 1 217 3 is_stmt 1 view .LVU185
 217:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 684              		.loc 1 217 36 is_stmt 0 view .LVU186
 685 007c 4FF4A053 		mov	r3, #5120
 686 0080 0693     		str	r3, [sp, #24]
 218:Core/Src/main.c **** 
 687              		.loc 1 218 3 is_stmt 1 view .LVU187
 218:Core/Src/main.c **** 
 688              		.loc 1 218 36 is_stmt 0 view .LVU188
 689 0082 4FF48053 		mov	r3, #4096
 690 0086 0793     		str	r3, [sp, #28]
 220:Core/Src/main.c ****   {
 691              		.loc 1 220 3 is_stmt 1 view .LVU189
 220:Core/Src/main.c ****   {
 692              		.loc 1 220 7 is_stmt 0 view .LVU190
 693 0088 0521     		movs	r1, #5
 694 008a 03A8     		add	r0, sp, #12
 695 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 696              	.LVL30:
 220:Core/Src/main.c ****   {
 697              		.loc 1 220 6 view .LVU191
 698 0090 20B9     		cbnz	r0, .L41
 224:Core/Src/main.c **** 
 699              		.loc 1 224 1 view .LVU192
 700 0092 15B0     		add	sp, sp, #84
 701              		.cfi_remember_state
 702              		.cfi_def_cfa_offset 4
 703              		@ sp needed
 704 0094 5DF804FB 		ldr	pc, [sp], #4
 705              	.L40:
 706              		.cfi_restore_state
 208:Core/Src/main.c ****   }
 707              		.loc 1 208 5 is_stmt 1 view .LVU193
 708 0098 FFF7FEFF 		bl	Error_Handler
 709              	.LVL31:
 710              	.L41:
 222:Core/Src/main.c ****   }
 711              		.loc 1 222 5 view .LVU194
 712 009c FFF7FEFF 		bl	Error_Handler
 713              	.LVL32:
 714              	.L43:
 715              		.align	2
 716              	.L42:
 717 00a0 00380240 		.word	1073887232
 718 00a4 00700040 		.word	1073770496
 719              		.cfi_endproc
 720              	.LFE136:
 722              		.section	.text.main,"ax",%progbits
 723              		.align	1
 724              		.global	main
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 729              	main:
 730              	.LFB135:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccroy7mc.s 			page 25


 731              		.loc 1 106 1 view -0
 732              		.cfi_startproc
 733              		@ Volatile: function does not return.
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736 0000 08B5     		push	{r3, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 3, -8
 739              		.cfi_offset 14, -4
 114:Core/Src/main.c **** 
 740              		.loc 1 114 3 view .LVU196
 741 0002 FFF7FEFF 		bl	HAL_Init
 742              	.LVL33:
 121:Core/Src/main.c **** 
 743              		.loc 1 121 3 view .LVU197
 744 0006 FFF7FEFF 		bl	SystemClock_Config
 745              	.LVL34:
 128:Core/Src/main.c ****   MX_DMA_Init();
 746              		.loc 1 128 3 view .LVU198
 747 000a FFF7FEFF 		bl	MX_GPIO_Init
 748              	.LVL35:
 129:Core/Src/main.c ****   MX_SPI2_Init();
 749              		.loc 1 129 3 view .LVU199
 750 000e FFF7FEFF 		bl	MX_DMA_Init
 751              	.LVL36:
 130:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 752              		.loc 1 130 3 view .LVU200
 753 0012 FFF7FEFF 		bl	MX_SPI2_Init
 754              	.LVL37:
 132:Core/Src/main.c ****   /* USER CODE END 2 */
 755              		.loc 1 132 3 view .LVU201
 756 0016 FFF7FEFF 		bl	ecatapp_init
 757              	.LVL38:
 136:Core/Src/main.c **** 
 758              		.loc 1 136 3 view .LVU202
 759 001a FFF7FEFF 		bl	osKernelInitialize
 760              	.LVL39:
 156:Core/Src/main.c **** 
 761              		.loc 1 156 3 view .LVU203
 156:Core/Src/main.c **** 
 762              		.loc 1 156 19 is_stmt 0 view .LVU204
 763 001e 064A     		ldr	r2, .L47
 764 0020 0021     		movs	r1, #0
 765 0022 0648     		ldr	r0, .L47+4
 766 0024 FFF7FEFF 		bl	osThreadNew
 767              	.LVL40:
 156:Core/Src/main.c **** 
 768              		.loc 1 156 17 view .LVU205
 769 0028 054B     		ldr	r3, .L47+8
 770 002a 1860     		str	r0, [r3]
 167:Core/Src/main.c **** 
 771              		.loc 1 167 3 is_stmt 1 view .LVU206
 772 002c FFF7FEFF 		bl	osKernelStart
 773              	.LVL41:
 774              	.L45:
 172:Core/Src/main.c ****   {
 775              		.loc 1 172 3 discriminator 1 view .LVU207
ARM GAS  /tmp/ccroy7mc.s 			page 26


 175:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 776              		.loc 1 175 5 discriminator 1 view .LVU208
 777 0030 FFF7FEFF 		bl	ecatapp_loop
 778              	.LVL42:
 172:Core/Src/main.c ****   {
 779              		.loc 1 172 9 discriminator 1 view .LVU209
 780 0034 FCE7     		b	.L45
 781              	.L48:
 782 0036 00BF     		.align	2
 783              	.L47:
 784 0038 00000000 		.word	.LANCHOR3
 785 003c 00000000 		.word	LedTask
 786 0040 00000000 		.word	.LANCHOR4
 787              		.cfi_endproc
 788              	.LFE135:
 790              		.global	ledTask_attributes
 791              		.section	.rodata.str1.4,"aMS",%progbits,1
 792              		.align	2
 793              	.LC0:
 794 0000 6C656454 		.ascii	"ledTask\000"
 794      61736B00 
 795              		.global	ledTaskHandle
 796              		.global	hdma_spi2_tx
 797              		.global	hdma_spi2_rx
 798              		.global	hspi2
 799              		.section	.bss.hdma_spi2_rx,"aw",%nobits
 800              		.align	2
 803              	hdma_spi2_rx:
 804 0000 00000000 		.space	96
 804      00000000 
 804      00000000 
 804      00000000 
 804      00000000 
 805              		.section	.bss.hdma_spi2_tx,"aw",%nobits
 806              		.align	2
 809              	hdma_spi2_tx:
 810 0000 00000000 		.space	96
 810      00000000 
 810      00000000 
 810      00000000 
 810      00000000 
 811              		.section	.bss.hspi2,"aw",%nobits
 812              		.align	2
 813              		.set	.LANCHOR2,. + 0
 816              	hspi2:
 817 0000 00000000 		.space	88
 817      00000000 
 817      00000000 
 817      00000000 
 817      00000000 
 818              		.section	.bss.ledTaskHandle,"aw",%nobits
 819              		.align	2
 820              		.set	.LANCHOR4,. + 0
 823              	ledTaskHandle:
 824 0000 00000000 		.space	4
 825              		.section	.bss.pdi_dma_transmission,"aw",%nobits
 828              	pdi_dma_transmission:
ARM GAS  /tmp/ccroy7mc.s 			page 27


 829 0000 00       		.space	1
 830              		.section	.bss.pdi_irq_flag,"aw",%nobits
 831              		.set	.LANCHOR1,. + 0
 834              	pdi_irq_flag:
 835 0000 00       		.space	1
 836              		.section	.bss.sync0_irq_flag,"aw",%nobits
 837              		.set	.LANCHOR0,. + 0
 840              	sync0_irq_flag:
 841 0000 00       		.space	1
 842              		.section	.rodata.ledTask_attributes,"a"
 843              		.align	2
 844              		.set	.LANCHOR3,. + 0
 847              	ledTask_attributes:
 848 0000 00000000 		.word	.LC0
 849 0004 00000000 		.space	16
 849      00000000 
 849      00000000 
 849      00000000 
 850 0014 00020000 		.word	512
 851 0018 18000000 		.word	24
 852 001c 00000000 		.space	8
 852      00000000 
 853              		.text
 854              	.Letext0:
 855              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 856              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 857              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 858              		.file 6 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 859              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 860              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 861              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 862              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 863              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 864              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 865              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 866              		.file 14 "Drivers/SOES/Inc/esc.h"
 867              		.file 15 "Core/Inc/pdo_override.h"
 868              		.file 16 "Core/Inc/main.h"
 869              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 870              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 871              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 872              		.file 20 "Core/Inc/ecatapp.h"
 873              		.file 21 "Drivers/SOES/Inc/ecat_slv.h"
 874              		.file 22 "<built-in>"
ARM GAS  /tmp/ccroy7mc.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccroy7mc.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccroy7mc.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccroy7mc.s:200    .text.MX_GPIO_Init:00000000000000d4 $d
     /tmp/ccroy7mc.s:207    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccroy7mc.s:212    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccroy7mc.s:270    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/ccroy7mc.s:275    .text.LedTask:0000000000000000 $t
     /tmp/ccroy7mc.s:281    .text.LedTask:0000000000000000 LedTask
     /tmp/ccroy7mc.s:307    .text.ecatapp_loop:0000000000000000 $t
     /tmp/ccroy7mc.s:313    .text.ecatapp_loop:0000000000000000 ecatapp_loop
     /tmp/ccroy7mc.s:399    .text.ecatapp_loop:0000000000000060 $d
     /tmp/ccroy7mc.s:406    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccroy7mc.s:412    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccroy7mc.s:445    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccroy7mc.s:450    .text.Error_Handler:0000000000000000 $t
     /tmp/ccroy7mc.s:456    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccroy7mc.s:488    .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccroy7mc.s:493    .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccroy7mc.s:561    .text.MX_SPI2_Init:000000000000003c $d
     /tmp/ccroy7mc.s:567    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccroy7mc.s:573    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccroy7mc.s:717    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccroy7mc.s:723    .text.main:0000000000000000 $t
     /tmp/ccroy7mc.s:729    .text.main:0000000000000000 main
     /tmp/ccroy7mc.s:784    .text.main:0000000000000038 $d
     /tmp/ccroy7mc.s:847    .rodata.ledTask_attributes:0000000000000000 ledTask_attributes
     /tmp/ccroy7mc.s:792    .rodata.str1.4:0000000000000000 $d
     /tmp/ccroy7mc.s:823    .bss.ledTaskHandle:0000000000000000 ledTaskHandle
     /tmp/ccroy7mc.s:809    .bss.hdma_spi2_tx:0000000000000000 hdma_spi2_tx
     /tmp/ccroy7mc.s:803    .bss.hdma_spi2_rx:0000000000000000 hdma_spi2_rx
     /tmp/ccroy7mc.s:816    .bss.hspi2:0000000000000000 hspi2
     /tmp/ccroy7mc.s:800    .bss.hdma_spi2_rx:0000000000000000 $d
     /tmp/ccroy7mc.s:806    .bss.hdma_spi2_tx:0000000000000000 $d
     /tmp/ccroy7mc.s:812    .bss.hspi2:0000000000000000 $d
     /tmp/ccroy7mc.s:819    .bss.ledTaskHandle:0000000000000000 $d
     /tmp/ccroy7mc.s:828    .bss.pdi_dma_transmission:0000000000000000 pdi_dma_transmission
     /tmp/ccroy7mc.s:829    .bss.pdi_dma_transmission:0000000000000000 $d
     /tmp/ccroy7mc.s:834    .bss.pdi_irq_flag:0000000000000000 pdi_irq_flag
     /tmp/ccroy7mc.s:835    .bss.pdi_irq_flag:0000000000000000 $d
     /tmp/ccroy7mc.s:840    .bss.sync0_irq_flag:0000000000000000 sync0_irq_flag
     /tmp/ccroy7mc.s:841    .bss.sync0_irq_flag:0000000000000000 $d
     /tmp/ccroy7mc.s:843    .rodata.ledTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
osDelay
ESC_read
DIG_process
ecat_slv_poll
ESCvar
HAL_IncTick
HAL_SPI_Init
ARM GAS  /tmp/ccroy7mc.s 			page 29


memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ecatapp_init
osKernelInitialize
osThreadNew
osKernelStart
